* Advent of Code 2022
** day template
#+NAME: 2022-dayXX-input
#+BEGIN_SRC emacs-lisp :session "dayXX"
(defconst aoc22/dayXXtest '("TBD"))

(defconst aoc22/dayXXinput '("TBD"))

#+END_SRC

#+NAME: 2022-dayXX-solution
#+BEGIN_SRC emacs-lisp :session "dayXX" :val x=2022-dayXX-input
;;; Code:

(defun aoc22/dayXX-part1 (input)
  "Takes INPUT and solve the puzzle.
To be replaced with actual docstring."
  (car input))

(defun aoc22/dayXX-part2 (input)
  "Takes INPUT and solve the puzzle.
To be replaced with actual docstring."
  (car input))

;;; Helper functions:

;;; Results vector

(vector (aoc22/dayXX-part1 aoc22/dayXXtest)
        (aoc22/dayXX-part1 aoc22/dayXXinput)
        (aoc22/dayXX-part2 aoc22/dayXXtest)
        (aoc22/dayXX-part2 aoc22/dayXXinput))
#+END_SRC

** day 1
#+NAME: 2022-day1-input
#+BEGIN_SRC emacs-lisp :session "day1"
(defconst aoc22/day1test '((1000 2000 3000)
                           (4000)
                           (5000 6000)
                           (7000 8000 9000)
                           (10000)))

(defconst aoc22/day1input '(
                            ( 6758 5199 10292 8812 3527 10178
                              1340 2824 )
                            ( 62522 )
                            ( 22990 )
                            ( 6730 )
                            ( 7255 3210 3003 8296 8799 7655
                              10312 )
                            ( 18837 19882 5386 15891 )
                            ( 4203 36288 )
                            ( 1586 2295 4981 2109 2284 5814 4823
                              5492 1524 5286 2147 2952 4783 4814
                              3042 )
                            ( 8474 4059 14465 13390 )
                            ( 4623 2150 7545 7833 3686 2095 3336
                              5030 7648 4087 4482 )
                            ( 31278 29863 )
                            ( 1228 4851 2706 1692 3200 3521 5200
                              3755 3922 5181 5561 5162 5280 2460
                              )
                            ( 1083 4432 4938 4303 6304 3746 3527
                              3141 3198 4980 4395 )
                            ( 8218 3954 1396 2147 7924 4650 4483
                              6610 4799 3973 )
                            ( 3401 4111 7798 5181 8418 5014 5975
                              7916 7788 1864 )
                            ( 8547 13217 9699 5701 11040 2943 )
                            ( 6214 3287 4137 6773 2593 4776 1687
                              2821 7240 3681 1185 6578 )
                            ( 7850 6697 4844 2325 1834 6812 3380
                              2302 2531 4959 )
                            ( 5275 1883 6919 2865 7943 7718 9494
                              7957 )
                            ( 28727 22865 )
                            ( 3064 4279 2649 12521 )
                            ( 10169 16383 3301 12707 )
                            ( 3533 2280 9232 10618 1488 7616
                              4334 7847 )
                            ( 4322 1215 3514 5513 3469 5472 3658
                              1096 3410 1607 5482 3015 5234 2488
                              )
                            ( 1306 8067 3375 4064 2943 6158 3911
                              7766 2493 4897 6551 )
                            ( 10694 13319 )
                            ( 10862 2483 8522 4509 5021 8789
                              6152 )
                            ( 7824 23812 6740 )
                            ( 6548 2116 14900 )
                            ( 3470 1825 2865 4691 4729 4263 4899
                              4855 3732 4439 5023 1291 3121 5322
                              )
                            ( 6529 )
                            ( 5141 2353 8515 9815 9541 10389
                              1114 1373 )
                            ( 11924 11446 20373 )
                            ( 37249 )
                            ( 5749 2968 5300 5405 7280 6161 4298
                              7104 7140 3405 5754 )
                            ( 4763 11364 7492 5630 15978 )
                            ( 3622 2185 12718 2466 5015 11302 )
                            ( 65579 )
                            ( 5450 6455 )
                            ( 5721 1939 8537 7075 1317 1805 1701
                              4578 8435 1718 )
                            ( 10692 6581 3068 9013 1741 4654
                              2159 5340 )
                            ( 4981 6327 6931 3024 1263 4313 6793
                              2818 6727 2245 4524 5825 )
                            ( 10156 11779 1694 7495 1615 8872
                              11840 )
                            ( 7323 7184 4094 3989 1820 2141 7277
                              3208 2064 7765 5764 )
                            ( 2796 3030 2783 3426 5581 1659 2369
                              2784 5284 4110 1157 3129 6088 2215
                              3503 )
                            ( 20991 1521 )
                            ( 1601 4869 9195 1835 5402 2721 1128
                              1991 9336 )
                            ( 2557 6635 6981 6296 5278 3077 7679
                              5764 2359 2467 6705 )
                            ( 2594 2611 3189 1436 1510 1341 8213
                              8525 5447 2045 )
                            ( 3812 2106 6216 3236 7169 5840 4770
                              1724 1061 5062 7990 )
                            ( 5722 4372 3524 1561 3417 5807 3969
                              3635 3067 3469 4393 1705 4897 4307
                              2663 )
                            ( 28920 3093 )
                            ( 12949 9070 9161 3530 6651 )
                            ( 12010 1783 21165 )
                            ( 4667 3553 6938 5433 3244 1082 7305
                              7262 6577 1987 2256 )
                            ( 4933 1802 1315 1303 1722 2688 6103
                              2749 1478 4994 4369 5074 5655 2827
                              3232 )
                            ( 1101 2284 4349 4868 3264 3227 1786
                              5233 6054 6144 3533 1841 1721 4775
                              )
                            ( 16514 )
                            ( 7282 7260 2423 1738 4498 5570 3862
                              3979 3845 4313 3249 5639 )
                            ( 7910 9862 7476 9103 2851 3634 8641
                              7369 )
                            ( 8574 1439 1442 12337 1387 7777 )
                            ( 18060 )
                            ( 10287 1924 4066 12275 14094 )
                            ( 4797 5061 2701 1391 6617 5870 4999
                              4150 2881 2667 2461 1978 1058 )
                            ( 12911 7290 9442 2875 5812 )
                            ( 13016 4985 2517 9758 11215 )
                            ( 2845 11805 6418 8128 1604 )
                            ( 9643 6574 6804 3575 9226 6276 1406
                              4493 8104 )
                            ( 11616 7196 5685 1267 3281 1250
                              7666 )
                            ( 9654 8646 7144 2790 7583 2681 1799
                              5301 1714 )
                            ( 30086 23066 )
                            ( 10205 7316 1550 4056 2627 10056 )
                            ( 9912 1615 1584 2963 1347 9336 8310
                              8728 )
                            ( 2436 4741 6665 5239 5737 4252 1954
                              4916 5341 7475 5909 5012 )
                            ( 4897 8580 5122 1865 8318 5369 2334
                              5629 7058 )
                            ( 14621 2969 15900 14828 2997 )
                            ( 7051 3305 7848 7947 3961 3206 5175
                              7055 3182 5838 1954 )
                            ( 6614 3086 7740 6624 4106 7195 )
                            ( 3815 4858 3460 1427 5685 5865 4790
                              6660 1510 5685 2790 5112 )
                            ( 13626 1665 16722 9598 )
                            ( 15870 )
                            ( 3453 8531 9997 8590 5833 7896 8524
                              )
                            ( 6783 5931 3245 4327 5496 5017 2136
                              3899 3875 2904 5023 3173 3227 )
                            ( 4241 4693 1164 1877 5541 5017 3433
                              3333 4734 3639 1724 2439 1673 4362
                              )
                            ( 6479 3259 3496 6125 1147 3181 3948
                              5746 3019 1924 )
                            ( 6250 26443 )
                            ( 4901 6813 6581 3144 1525 6629 3254
                              6542 1156 6663 3856 4083 1598 )
                            ( 7932 8717 9657 1873 2727 2052 2376
                              )
                            ( 6455 13127 3540 8038 6601 2249 )
                            ( 6226 5251 3416 5941 7336 5668 4139
                              1459 2529 7538 )
                            ( 6899 4680 10277 2515 16361 )
                            ( 23283 2647 )
                            ( 1272 3462 6817 3795 4973 6750 2340
                              7379 3873 1832 7935 )
                            ( 4808 4018 11801 7092 8312 9718
                              6693 )
                            ( 7285 7822 7063 2854 7844 1121 4362
                              4685 5360 7140 6796 )
                            ( 17114 20195 9330 )
                            ( 19378 27739 )
                            ( 16288 15298 13251 5444 10856 )
                            ( 7616 6108 3420 9201 3422 4312 4388
                              3008 9551 )
                            ( 1255 7803 1598 3892 6954 7936 8078
                              5261 2057 2914 )
                            ( 7497 10296 2343 10020 1171 3092
                              2333 )
                            ( 1492 4718 4267 10309 7919 7080
                              1012 9981 )
                            ( 17367 1357 16269 7775 )
                            ( 13641 3004 13280 )
                            ( 6205 3003 1634 4608 2759 6324 4372
                              4833 6565 2865 7345 3719 )
                            ( 4268 2071 2155 4408 4869 2634 1329
                              2075 4276 4032 2129 5181 2594 2102
                              2281 )
                            ( 2486 7483 6748 4017 5926 3507 4666
                              3837 )
                            ( 8082 13626 12247 5622 13565 )
                            ( 7911 1180 1854 5795 7017 6873 7728
                              5055 5207 7810 7474 )
                            ( 3459 5418 1420 5028 6793 4851 2885
                              2263 2734 4868 6596 1434 5440 )
                            ( 3368 3541 5756 3039 4234 2632 6031
                              5613 4769 1538 4898 5128 4848 )
                            ( 2817 3013 2260 4714 6461 3262 3924
                              4083 2487 4221 5311 4274 5591 1625
                              )
                            ( 8756 8549 9481 7994 7775 6951 5276
                              7598 9126 )
                            ( 11749 7152 14494 )
                            ( 14395 7799 16109 14178 )
                            ( 24404 4941 )
                            ( 5326 9070 3951 1404 6513 9155 5981
                              3880 1476 )
                            ( 12661 10966 )
                            ( 3517 7760 4724 6891 1447 3337 3903
                              7382 7067 1771 1184 )
                            ( 3556 13458 12699 12330 13534 11244
                              )
                            ( 10818 31380 )
                            ( 17968 3978 17994 )
                            ( 9486 6163 1748 3765 7191 1461 2062
                              8169 9167 )
                            ( 3111 4378 3560 6292 5521 2132 5071
                              4519 1977 6587 )
                            ( 11961 2119 11633 10970 4089 7390
                              6481 )
                            ( 4350 5261 4801 1584 1531 5034 5917
                              4136 6668 5364 3814 3873 4437 )
                            ( 2568 2449 5582 1857 6143 5457 4396
                              3723 2885 2428 2790 4173 1726 5687
                              )
                            ( 21758 )
                            ( 32901 )
                            ( 4313 12688 14465 1073 6568 )
                            ( 2295 3872 5979 3014 1408 1865 2937
                              4231 5076 2544 3270 2673 6060 4292
                              1073 )
                            ( 5340 10378 10445 11874 8275 8558
                              1558 )
                            ( 3652 9630 15612 18471 )
                            ( 5856 4627 4762 6094 5266 2970 1230
                              6292 5083 4557 6158 5841 6321 3672
                              )
                            ( 4531 2204 4583 4426 4310 6136 5577
                              4765 6882 1300 2979 6754 4241 )
                            ( 3266 6610 2322 12666 11874 10495 )
                            ( 7493 2468 2710 6550 7383 4442 3692
                              8168 )
                            ( 4381 3648 4270 3016 4178 3066 1736
                              5402 4995 1980 5438 5256 4804 4854
                              2585 )
                            ( 4096 4397 4061 3811 2537 3296 1877
                              4267 2760 3682 5949 3713 3365 4135
                              1310 )
                            ( 30319 )
                            ( 7244 6071 1234 6387 1980 1935 3431
                              6474 6601 1652 )
                            ( 10125 11599 )
                            ( 4436 3242 6077 6707 1582 6648 3345
                              5812 1635 2782 2514 2608 )
                            ( 9244 1348 5019 2059 9226 2546 5130
                              8902 7779 )
                            ( 10030 10749 3690 8769 9835 7216
                              2132 )
                            ( 6105 1205 1860 3190 5815 1424 2611
                              1230 4491 1731 5804 2863 1816 3694
                              )
                            ( 4791 6491 3292 3310 2223 4296 6323
                              3414 1462 6799 3276 4435 5554 )
                            ( 2859 2854 1127 4179 6233 6219 5955
                              3139 2457 3854 5071 4887 4190 4469
                              )
                            ( 67818 )
                            ( 7880 6503 4931 5813 1692 2126 6300
                              8743 4983 2182 )
                            ( 1882 5752 6369 1996 2955 5978 6087
                              5123 2587 2000 4973 2214 5118 3178
                              )
                            ( 10807 9780 8468 2157 1021 8078
                              4848 )
                            ( 3400 1666 6908 10199 1685 4979 )
                            ( 2250 5672 2505 9061 5514 8895 4958
                              8274 7707 )
                            ( 15083 2359 23052 )
                            ( 6279 1563 4247 4593 4844 5335 7024
                              7324 5904 1016 3394 3382 )
                            ( 2965 2673 3329 1833 1222 1789 1027
                              6268 4404 1031 1407 4510 4047 1972
                              )
                            ( 4423 8018 4991 7190 7061 6223 5972
                              2864 5674 )
                            ( 1559 1850 4117 1495 2604 2243 1498
                              4936 2970 4109 1252 6416 5293 3319
                              )
                            ( 5577 4032 3528 6140 5994 2811 3247
                              7297 5776 3863 4240 3973 )
                            ( 9884 8267 )
                            ( 3047 4053 2400 4246 3193 2309 4014
                              1369 1437 )
                            ( 10529 2975 3033 10601 13985 )
                            ( 12323 9086 2903 7243 8351 12729 )
                            ( 13982 7013 7500 11098 9206 )
                            ( 11963 3055 9862 2601 13991 )
                            ( 66684 )
                            ( 6171 1924 1569 3761 4616 5565 3644
                              1817 4029 2333 1934 2492 6161 )
                            ( 2802 1498 3232 7475 5503 4913 6759
                              8657 4445 )
                            ( 18324 19871 )
                            ( 6287 4271 7871 1097 1932 5980 5376
                              7824 4911 4751 6453 )
                            ( 8374 3293 7175 8288 1217 4831 1514
                              6681 2596 6199 )
                            ( 32039 )
                            ( 1235 2206 6429 4880 5463 6814 1530
                              3544 4685 3169 6752 5854 6764 )
                            ( 6115 6039 6519 6414 4558 5214 4411
                              2882 6006 5117 5321 2059 )
                            ( 2431 5892 1839 5352 3295 2768 4788
                              5271 1503 1173 4691 4906 4346 1043
                              )
                            ( 5172 5976 6248 4288 3851 8543 4189
                              4396 )
                            ( 10361 14864 18037 )
                            ( 7381 5180 1829 3624 3144 3962 5923
                              4356 1477 3153 2891 5196 )
                            ( 3143 3180 4428 3418 6243 3480 1151
                              4262 4958 4641 3823 1469 2149 )
                            ( 3702 4159 3799 4639 5703 2425 4579
                              2397 2814 3959 3987 3088 2982 2338
                              3432 )
                            ( 7256 16171 12417 11290 13105 )
                            ( 2594 5105 6253 4743 4251 6439 3370
                              5662 2763 3147 6366 4537 6279 6104
                              )
                            ( 7926 3430 2206 4334 5226 1817 2404
                              2587 8020 1849 )
                            ( 1257 6091 2485 6366 3184 4775 5987
                              3473 5761 1905 3742 5478 5343 )
                            ( 3336 5819 2617 2756 5602 3921 4660
                              5041 1471 2297 5575 1473 6059 3111
                              5789 )
                            ( 2647 6183 5004 2750 2772 1964 4453
                              2132 3181 2916 1804 4666 1215 6354
                              )
                            ( 1449 1539 3005 3167 1712 6222 6007
                              4141 1481 6198 4476 3850 3885 5880
                              )
                            ( 1833 5557 3185 6117 3456 2789 4576
                              1439 3212 5223 2687 2368 3270 4629
                              4716 )
                            ( 10123 6686 12658 )
                            ( 6838 4415 10796 6040 3065 1832
                              11624 )
                            ( 69368 )
                            ( 5469 8816 7624 13506 )
                            ( 8923 1621 10042 )
                            ( 6113 9373 9212 7054 3193 6588 7743
                              4224 4983 )
                            ( 1911 1589 2667 3095 3768 5898 4574
                              3456 3281 4176 1591 3383 5063 )
                            ( 1378 5923 9019 4379 2932 3918 9631
                              )
                            ( 7851 6466 2388 13209 7613 2396 )
                            ( 3015 1119 4172 2459 3872 5912 4012
                              2894 2765 1950 4147 4523 2504 4691
                              2038 )
                            ( 4472 5029 3599 6237 8566 3508 7995
                              3756 6631 3625 )
                            ( 16549 15550 22868 )
                            ( 7356 11800 8330 14503 9470 )
                            ( 1306 1960 6574 7234 3841 1006 4156
                              2019 6187 2494 7475 5916 )
                            ( 8894 9358 9666 8711 10140 11205 )
                            ( 8123 19317 11676 7989 )
                            ( 7610 3163 9789 6331 6998 7288 4632
                              5340 )
                            ( 7105 15276 22300 )
                            ( 11919 6212 5062 )
                            ( 18496 10383 10695 4206 )
                            ( 8127 2277 10392 1337 2779 5380
                              3881 6556 )
                            ( 5514 6678 2324 4686 3807 4785 3972
                              )
                            ( 1488 3662 4866 2687 3519 2605 5189
                              5313 4112 2559 1887 5656 5931 1816
                              )
                            ( 9949 11409 8427 15008 2241 )
                            ( 1942 1004 1070 5860 4932 4055 2922
                              5129 1232 4940 5270 1023 5323 2002
                              2727 )
                            ( 48445 )
                            ( 6687 4155 2999 3348 )
                            ( 5347 4592 1463 3080 3520 5283 3166
                              2945 2891 1100 5372 5797 3060 5748
                              5592 )
                            ( 8132 3941 7625 4458 2714 7390 4305
                              1612 6707 )
                            ( 2105 2880 6683 6257 6472 1371 3493
                              1542 4431 5003 3276 2205 3417 )
                            ( 6421 4279 1213 6274 3757 6856 3244
                              1554 2716 1854 1924 3769 6344 )
                            ( 1081 2601 2607 6042 1967 2924 4656
                              6462 1747 4278 6384 4427 5074 6454
                              )
                            ( 6344 13912 15708 1335 5433 )
                            ( 5862 7799 3707 9404 10527 10543
                              6428 )
                            ( 2009 17261 13328 )
                            ( 10389 9214 9189 8747 12720 9443 )
                            ( 7162 2362 3837 8891 2098 8577 9063
                              3336 5023 )
                            ( 1322 12214 5387 9804 9542 6149 )
                            ( 1997 6709 6614 5116 6691 5904 5563
                              2437 4442 7346 5749 7194 )
                            ( 5836 15439 9020 9124 )
                            ( 6761 4892 5956 2500 6879 1980 1908
                              1705 6157 4559 5776 1235 3077 )
                            ( 10155 8529 7837 7027 7897 6504
                              4192 7193 )
                            ( 9711 17664 4069 10400 )
                            ( 24373 20215 )
                            ( 2155 9371 9201 5590 9806 13380 )
                            ( 7716 1116 6106 2703 2403 3549 3740
                              6658 4769 )
                            ( 13954 36130 )
                            ( 1767 7955 5622 5077 2512 8206 4501
                              2917 9336 )
                            ( 1601 23493 16981 )
                            ( 3719 2266 1982 4557 3198 3815 5006
                              2587 4173 2965 2658 4890 5723 4231
                              )
                            ( 19350 )
                            ( 19637 13784 21672 )
                            ( 17040 29745 )
                            ( 2037 7872 5766 7919 1382 9398 3197
                              )
                            ( 11570 12560 6206 12642 3275 )
                            ( 1535 6685 5587 12955 12197 )
                            ( 2980 15784 12178 12996 )
                            ( 7928 8780 7528 5428 8181 8527 5229
                              3850 2012 2975 )
                            ( 30992 26372 )
                            ( 4384 2425 2332 1309 3899 3062 4825
                              1428 1116 3635 1669 1922 5941 4378
                              2742 )
                            ( 1961 4243 4443 3070 5786 3638 6330
                              2461 1612 4572 3551 3831 3263 6173
                              )
                            ( 2759 3889 5197 4293 2957 6305 3797
                              1465 4674 5659 5258 3775 4436 2260
                              )
                            ( 5141 8383 6249 9982 4848 2675 4232
                              8974 )
                            ( 11489 11733 9990 4150 4533 3032
                              1044 )
                            ( 62338 )
                            ( 3645 5406 4672 3889 5799 5760 4356
                              5557 4120 2771 3399 5292 3640 3989
                              6047 )
                            ( 4629 6897 4312 2108 5301 1122 1893
                              5508 3414 2180 4254)))
#+END_SRC

#+RESULTS: 2022-day1-input
: aoc22/day1input

#+NAME: 2022-day1-solution
#+BEGIN_SRC emacs-lisp :session "day1"
;;; Code:

(defun aoc22/day1-part1 (list)
  "Function to solve day1 part1 of advent of code 2022 with input LIST.
  Need to find the elf with the most calories at hand"
  (let (result)
    (dolist (elem list)
      (setq result (append result (list (cl-reduce #'+ elem)))))
    (cl-reduce #'max result)))


(defun aoc22/day1-part2 (list)
  "Function to solve day1 part2 of advent of code 2022 with input LIST.
  Need to find the combined calories of the top three elves."
  (let (result)
    (dolist (elem list)
      (setq result (append result (list (cl-reduce #'+ elem)))))
    (let ((sorted-result (sort result #'>)))
      (+ (car sorted-result) (cadr sorted-result) (caddr sorted-result)))))

;;; Results vector
(vector (aoc22/day1-part1 aoc22/day1test)
        (aoc22/day1-part1 aoc22/day1input)
        (aoc22/day1-part2 aoc22/day1test)
        (aoc22/day1-part2 aoc22/day1input))
#+END_SRC

#+RESULTS: 2022-day1-solution
: [24000 71506 45000 209603]

** day 2
#+NAME: 2022-day2-input
#+BEGIN_SRC emacs-lisp :session "day2"
(defconst aoc22/day2test '((A . Y)
                           (B . X)
                           (C . Z)))

(defconst aoc22/day2input '((B . Y)
                            (A . X)
                            (B . Y)
                            (A . Y)
                            (A . Z)
                            (B . Y)
                            (B . Z)
                            (C . Y)
                            (A . X)
                            (C . X)
                            (A . X)
                            (B . Y)
                            (C . Y)
                            (B . Y)
                            (B . Z)
                            (C . X)
                            (C . Z)
                            (A . X)
                            (B . Y)
                            (C . Z)
                            (C . Y)
                            (B . X)
                            (B . Y)
                            (A . X)
                            (B . Z)
                            (B . Z)
                            (B . Y)
                            (C . Z)
                            (B . X)
                            (B . Z)
                            (C . X)
                            (B . Y)
                            (B . Y)
                            (B . Y)
                            (B . Y)
                            (C . X)
                            (C . X)
                            (B . Z)
                            (C . X)
                            (B . Z)
                            (C . X)
                            (B . Y)
                            (C . X)
                            (B . X)
                            (B . Z)
                            (B . Y)
                            (C . Y)
                            (B . Y)
                            (A . X)
                            (B . Y)
                            (B . Y)
                            (C . Y)
                            (B . Z)
                            (B . Y)
                            (B . Z)
                            (C . Y)
                            (B . Y)
                            (A . X)
                            (C . X)
                            (C . Y)
                            (B . Y)
                            (A . Z)
                            (A . Z)
                            (A . X)
                            (B . Z)
                            (A . X)
                            (A . X)
                            (B . Z)
                            (C . Y)
                            (C . Z)
                            (B . Z)
                            (B . X)
                            (C . Y)
                            (B . Y)
                            (C . Y)
                            (C . X)
                            (C . Z)
                            (A . X)
                            (B . X)
                            (B . Y)
                            (B . Z)
                            (B . Y)
                            (A . X)
                            (B . Z)
                            (B . Y)
                            (B . Z)
                            (B . Z)
                            (B . Y)
                            (A . X)
                            (B . Y)
                            (C . X)
                            (A . X)
                            (B . Y)
                            (C . X)
                            (A . X)
                            (C . Y)
                            (B . Y)
                            (C . Z)
                            (A . X)
                            (B . X)
                            (C . X)
                            (B . Z)
                            (A . X)
                            (B . X)
                            (B . Y)
                            (B . Y)
                            (B . X)
                            (B . Z)
                            (B . Y)
                            (C . Y)
                            (B . Y)
                            (B . Y)
                            (A . X)
                            (C . Y)
                            (C . X)
                            (B . Y)
                            (B . Y)
                            (C . Y)
                            (B . Y)
                            (B . X)
                            (B . Z)
                            (B . Y)
                            (B . Y)
                            (C . Y)
                            (B . Z)
                            (B . Y)
                            (B . X)
                            (A . X)
                            (B . Z)
                            (A . X)
                            (A . X)
                            (B . X)
                            (B . Z)
                            (B . X)
                            (B . Y)
                            (B . Y)
                            (B . Y)
                            (B . Y)
                            (C . Y)
                            (C . X)
                            (C . Y)
                            (B . Y)
                            (B . Z)
                            (B . X)
                            (B . Z)
                            (C . Z)
                            (C . X)
                            (B . Z)
                            (C . X)
                            (B . Y)
                            (C . X)
                            (C . Y)
                            (B . Z)
                            (C . X)
                            (C . X)
                            (B . Z)
                            (B . Y)
                            (B . Y)
                            (B . Y)
                            (B . Y)
                            (B . Y)
                            (B . Y)
                            (A . X)
                            (A . X)
                            (B . Y)
                            (C . X)
                            (B . Y)
                            (B . Z)
                            (B . X)
                            (B . Z)
                            (A . Z)
                            (A . X)
                            (C . X)
                            (B . X)
                            (A . X)
                            (A . X)
                            (C . Z)
                            (A . Z)
                            (B . Y)
                            (A . X)
                            (C . X)
                            (C . Y)
                            (C . Y)
                            (A . X)
                            (B . Y)
                            (A . X)
                            (B . Z)
                            (C . X)
                            (B . Z)
                            (B . Y)
                            (B . Y)
                            (A . X)
                            (C . X)
                            (C . X)
                            (B . Y)
                            (A . X)
                            (A . X)
                            (C . X)
                            (B . Z)
                            (B . Y)
                            (A . X)
                            (A . X)
                            (B . Y)
                            (B . Y)
                            (B . Y)
                            (B . Y)
                            (C . X)
                            (B . Z)
                            (B . Y)
                            (B . Y)
                            (A . Y)
                            (B . Y)
                            (B . Z)
                            (A . Y)
                            (B . Y)
                            (C . Y)
                            (B . Z)
                            (B . Y)
                            (B . Y)
                            (C . Z)
                            (A . X)
                            (B . Z)
                            (C . X)
                            (C . X)
                            (B . Y)
                            (B . Z)
                            (B . X)
                            (A . X)
                            (B . X)
                            (B . Y)
                            (B . Z)
                            (B . Z)
                            (B . Z)
                            (B . X)
                            (B . Y)
                            (B . Y)
                            (C . Z)
                            (A . X)
                            (C . X)
                            (B . Y)
                            (B . X)
                            (C . Y)
                            (B . Y)
                            (B . Y)
                            (A . X)
                            (B . Z)
                            (B . Z)
                            (B . Y)
                            (B . Y)
                            (B . Z)
                            (B . Y)
                            (C . Y)
                            (C . Y)
                            (B . Y)
                            (B . Y)
                            (B . Y)
                            (A . X)
                            (A . X)
                            (C . Y)
                            (C . Z)
                            (C . Z)
                            (A . Y)
                            (C . Y)
                            (B . Z)
                            (B . Y)
                            (B . Y)
                            (C . Y)
                            (A . X)
                            (B . X)
                            (A . Z)
                            (A . Y)
                            (B . Y)
                            (C . X)
                            (B . X)
                            (B . X)
                            (A . X)
                            (B . Y)
                            (B . X)
                            (C . Y)
                            (B . Y)
                            (B . Y)
                            (B . Y)
                            (B . Y)
                            (B . X)
                            (B . Y)
                            (C . X)
                            (C . X)
                            (A . X)
                            (B . X)
                            (B . X)
                            (B . Y)
                            (C . Y)
                            (B . Z)
                            (C . Y)
                            (B . X)
                            (C . X)
                            (C . Y)
                            (B . Z)
                            (C . Z)
                            (A . Y)
                            (B . Y)
                            (A . Z)
                            (B . Z)
                            (C . Y)
                            (A . Z)
                            (B . Y)
                            (C . X)
                            (B . Y)
                            (B . Z)
                            (B . Y)
                            (A . X)
                            (B . Y)
                            (B . Y)
                            (C . Y)
                            (C . Y)
                            (A . X)
                            (B . Y)
                            (A . X)
                            (C . Y)
                            (B . Y)
                            (C . X)
                            (A . X)
                            (C . X)
                            (B . Z)
                            (B . X)
                            (B . Y)
                            (B . Y)
                            (B . Y)
                            (B . Y)
                            (B . Y)
                            (C . Y)
                            (A . Z)
                            (C . X)
                            (B . X)
                            (B . Z)
                            (B . Y)
                            (B . Y)
                            (B . X)
                            (B . Y)
                            (B . Z)
                            (B . Y)
                            (C . Y)
                            (B . Y)
                            (B . Y)
                            (B . Y)
                            (B . X)
                            (B . Y)
                            (B . X)
                            (A . Z)
                            (B . Z)
                            (C . Y)
                            (B . Y)
                            (B . Z)
                            (B . X)
                            (B . Z)
                            (A . X)
                            (B . Y)
                            (A . X)
                            (B . Z)
                            (B . Z)
                            (C . Z)
                            (B . Y)
                            (B . Y)
                            (B . X)
                            (B . Y)
                            (B . Y)
                            (C . X)
                            (B . Z)
                            (B . Z)
                            (B . Y)
                            (B . Z)
                            (B . Y)
                            (B . Z)
                            (A . X)
                            (C . X)
                            (C . X)
                            (B . Y)
                            (C . Z)
                            (B . X)
                            (B . X)
                            (B . Y)
                            (C . X)
                            (C . Y)
                            (B . Y)
                            (C . X)
                            (C . Y)
                            (B . X)
                            (B . Z)
                            (A . X)
                            (B . Z)
                            (B . Z)
                            (C . Y)
                            (B . Z)
                            (C . X)
                            (B . Y)
                            (C . X)
                            (A . X)
                            (A . X)
                            (C . Z)
                            (C . X)
                            (B . Y)
                            (C . Y)
                            (B . Z)
                            (C . X)
                            (A . X)
                            (C . Y)
                            (B . Z)
                            (B . Y)
                            (C . X)
                            (C . Z)
                            (B . X)
                            (A . X)
                            (B . Y)
                            (A . X)
                            (B . Y)
                            (C . X)
                            (B . Z)
                            (C . Y)
                            (C . X)
                            (B . Z)
                            (B . Z)
                            (B . X)
                            (C . Z)
                            (B . Y)
                            (B . Z)
                            (C . X)
                            (B . Y)
                            (B . Y)
                            (B . Y)
                            (C . Z)
                            (B . Y)
                            (B . X)
                            (B . X)
                            (C . Z)
                            (B . Z)
                            (A . X)
                            (B . Y)
                            (B . Z)
                            (B . Z)
                            (C . Y)
                            (C . Z)
                            (A . Y)
                            (B . Y)
                            (B . Y)
                            (A . X)
                            (B . Y)
                            (C . Z)
                            (A . X)
                            (C . X)
                            (B . Z)
                            (C . X)
                            (B . Y)
                            (B . X)
                            (B . Y)
                            (B . Y)
                            (C . Y)
                            (A . Z)
                            (B . Y)
                            (C . Z)
                            (B . Z)
                            (C . Z)
                            (B . Z)
                            (A . Y)
                            (A . X)
                            (B . Z)
                            (B . Y)
                            (B . X)
                            (B . Y)
                            (B . X)
                            (C . X)
                            (C . X)
                            (C . X)
                            (B . Y)
                            (C . Y)
                            (B . X)
                            (B . Y)
                            (B . X)
                            (C . Y)
                            (A . Z)
                            (B . Z)
                            (B . Y)
                            (B . Y)
                            (B . Y)
                            (B . Y)
                            (C . X)
                            (C . X)
                            (A . X)
                            (B . Y)
                            (B . Z)
                            (B . Z)
                            (C . Y)
                            (B . Y)
                            (A . X)
                            (C . Y)
                            (C . Y)
                            (B . X)
                            (B . X)
                            (A . X)
                            (C . X)
                            (C . Y)
                            (B . Z)
                            (A . X)
                            (B . Z)
                            (C . X)
                            (B . Y)
                            (B . Y)
                            (C . Y)
                            (B . Y)
                            (C . Y)
                            (A . Y)
                            (B . Y)
                            (B . Y)
                            (B . Z)
                            (A . X)
                            (B . Y)
                            (B . Z)
                            (C . X)
                            (B . Z)
                            (B . Z)
                            (B . Y)
                            (B . Y)
                            (B . X)
                            (B . Y)
                            (C . Z)
                            (B . Z)
                            (B . Y)
                            (B . Y)
                            (A . X)
                            (B . Y)
                            (B . Y)
                            (B . Y)
                            (B . Y)
                            (B . Y)
                            (B . Y)
                            (C . Y)
                            (B . Z)
                            (B . Y)
                            (C . Y)
                            (A . Z)
                            (C . Y)
                            (B . Y)
                            (C . X)
                            (C . Y)
                            (C . Y)
                            (B . Z)
                            (B . Z)
                            (C . Y)
                            (C . X)
                            (B . Z)
                            (B . Y)
                            (B . X)
                            (A . X)
                            (A . X)
                            (C . X)
                            (B . Z)
                            (C . X)
                            (B . Z)
                            (A . X)
                            (B . Y)
                            (B . Y)
                            (C . Y)
                            (A . X)
                            (B . Y)
                            (B . Y)
                            (A . X)
                            (A . X)
                            (A . Z)
                            (C . Z)
                            (C . X)
                            (A . X)
                            (B . Z)
                            (B . Y)
                            (C . Y)
                            (C . Y)
                            (C . Z)
                            (B . Y)
                            (A . X)
                            (B . X)
                            (B . Y)
                            (C . X)
                            (C . Y)
                            (B . Z)
                            (C . Y)
                            (B . Y)
                            (B . Y)
                            (B . Y)
                            (B . Z)
                            (B . Z)
                            (B . Y)
                            (B . Y)
                            (C . X)
                            (A . X)
                            (B . X)
                            (B . Y)
                            (A . X)
                            (B . Y)
                            (B . Z)
                            (B . X)
                            (C . X)
                            (B . Y)
                            (B . Y)
                            (B . X)
                            (B . Y)
                            (C . Y)
                            (C . Y)
                            (B . Y)
                            (B . Y)
                            (B . Y)
                            (A . X)
                            (C . Y)
                            (B . Y)
                            (B . X)
                            (C . Y)
                            (A . X)
                            (B . Y)
                            (A . Y)
                            (A . Z)
                            (B . Z)
                            (B . X)
                            (A . X)
                            (C . Y)
                            (C . Y)
                            (B . Z)
                            (A . Y)
                            (B . X)
                            (B . Y)
                            (A . X)
                            (C . X)
                            (B . Y)
                            (C . X)
                            (B . Z)
                            (B . Z)
                            (C . X)
                            (B . Y)
                            (B . Z)
                            (B . Y)
                            (B . Y)
                            (B . Z)
                            (B . Y)
                            (B . X)
                            (B . Z)
                            (C . X)
                            (A . X)
                            (C . Y)
                            (C . Y)
                            (B . Y)
                            (B . Z)
                            (A . X)
                            (B . X)
                            (C . Y)
                            (A . X)
                            (A . X)
                            (A . X)
                            (C . X)
                            (B . Z)
                            (B . Y)
                            (C . Z)
                            (B . Y)
                            (B . Y)
                            (C . X)
                            (B . Y)
                            (A . X)
                            (A . X)
                            (B . Y)
                            (B . Z)
                            (C . X)
                            (C . X)
                            (C . X)
                            (A . X)
                            (B . X)
                            (C . Z)
                            (C . Y)
                            (B . Y)
                            (C . X)
                            (C . X)
                            (B . Y)
                            (B . Y)
                            (C . Z)
                            (A . Z)
                            (A . X)
                            (B . Y)
                            (B . X)
                            (A . X)
                            (A . X)
                            (B . Y)
                            (B . X)
                            (B . Y)
                            (C . Y)
                            (A . Y)
                            (C . X)
                            (B . Y)
                            (B . Z)
                            (B . Y)
                            (B . Z)
                            (C . Z)
                            (B . X)
                            (B . Y)
                            (A . X)
                            (B . Y)
                            (B . Y)
                            (C . Z)
                            (A . X)
                            (B . Y)
                            (B . Y)
                            (B . Y)
                            (A . X)
                            (C . Y)
                            (A . X)
                            (B . Y)
                            (C . X)
                            (C . Y)
                            (C . X)
                            (B . Y)
                            (B . Z)
                            (B . Y)
                            (B . Y)
                            (C . X)
                            (C . Y)
                            (B . Y)
                            (C . X)
                            (C . Y)
                            (B . Y)
                            (B . Z)
                            (A . X)
                            (A . Z)
                            (B . Y)
                            (C . X)
                            (B . X)
                            (B . Y)
                            (C . X)
                            (A . X)
                            (A . X)
                            (C . Y)
                            (C . Z)
                            (C . X)
                            (C . Y)
                            (A . Y)
                            (C . Y)
                            (C . Z)
                            (C . X)
                            (B . Y)
                            (C . X)
                            (A . Z)
                            (B . X)
                            (C . X)
                            (B . Y)
                            (B . Z)
                            (B . Z)
                            (B . Y)
                            (C . Y)
                            (B . Z)
                            (B . Y)
                            (B . Z)
                            (A . X)
                            (C . X)
                            (B . Z)
                            (C . X)
                            (B . Z)
                            (C . X)
                            (C . Y)
                            (C . Y)
                            (C . Y)
                            (B . X)
                            (C . Z)
                            (B . Y)
                            (B . Z)
                            (B . Y)
                            (C . Y)
                            (B . Y)
                            (A . X)
                            (B . Y)
                            (C . X)
                            (A . Y)
                            (A . Z)
                            (A . X)
                            (B . Y)
                            (C . X)
                            (B . Z)
                            (B . Z)
                            (C . X)
                            (A . X)
                            (B . Y)
                            (A . Z)
                            (B . Y)
                            (C . X)
                            (B . Z)
                            (B . Y)
                            (C . X)
                            (A . X)
                            (B . X)
                            (C . Y)
                            (C . Z)
                            (C . Y)
                            (C . Y)
                            (A . X)
                            (B . X)
                            (B . Y)
                            (C . Y)
                            (B . Y)
                            (A . X)
                            (B . Y)
                            (B . X)
                            (B . Y)
                            (A . X)
                            (B . Y)
                            (B . X)
                            (C . Z)
                            (B . Y)
                            (C . X)
                            (B . Y)
                            (A . X)
                            (B . X)
                            (B . Z)
                            (B . Y)
                            (A . X)
                            (C . X)
                            (B . X)
                            (C . X)
                            (B . Y)
                            (A . X)
                            (C . X)
                            (B . Y)
                            (A . X)
                            (B . Y)
                            (B . Y)
                            (A . X)
                            (B . Y)
                            (B . Z)
                            (A . X)
                            (B . Y)
                            (B . X)
                            (C . Y)
                            (B . X)
                            (B . Z)
                            (C . X)
                            (B . Y)
                            (C . Z)
                            (B . Y)
                            (C . X)
                            (C . X)
                            (A . X)
                            (B . Y)
                            (C . Z)
                            (B . Z)
                            (B . Y)
                            (B . Y)
                            (B . Z)
                            (B . Y)
                            (B . X)
                            (B . X)
                            (B . Z)
                            (C . Y)
                            (C . Z)
                            (B . Y)
                            (A . X)
                            (B . Y)
                            (B . Y)
                            (C . X)
                            (C . X)
                            (B . Z)
                            (A . X)
                            (B . Y)
                            (B . Y)
                            (B . Y)
                            (C . X)
                            (B . Y)
                            (B . Y)
                            (C . Y)
                            (B . Z)
                            (C . X)
                            (B . Z)
                            (B . X)
                            (B . Y)
                            (C . X)
                            (C . X)
                            (A . X)
                            (C . X)
                            (B . Y)
                            (C . Y)
                            (B . Y)
                            (C . Z)
                            (A . X)
                            (B . Z)
                            (B . Y)
                            (B . Y)
                            (B . Y)
                            (C . X)
                            (C . Y)
                            (B . Y)
                            (B . X)
                            (C . X)
                            (B . Y)
                            (A . X)
                            (B . Y)
                            (C . X)
                            (A . X)
                            (A . X)
                            (C . Y)
                            (B . X)
                            (B . X)
                            (B . Z)
                            (B . Z)
                            (B . X)
                            (C . Y)
                            (B . Y)
                            (B . Y)
                            (B . Y)
                            (C . X)
                            (C . Y)
                            (B . Z)
                            (B . Z)
                            (C . Z)
                            (B . Y)
                            (B . Y)
                            (A . Z)
                            (C . Y)
                            (C . X)
                            (B . Z)
                            (A . X)
                            (A . X)
                            (C . X)
                            (A . X)
                            (B . X)
                            (B . Y)
                            (B . Z)
                            (B . Y)
                            (A . X)
                            (B . Z)
                            (B . Z)
                            (B . Y)
                            (B . Y)
                            (C . Z)
                            (A . X)
                            (C . Y)
                            (B . Y)
                            (B . Y)
                            (B . Z)
                            (B . Y)
                            (C . X)
                            (B . Z)
                            (A . X)
                            (B . X)
                            (A . X)
                            (B . Y)
                            (C . X)
                            (A . X)
                            (C . X)
                            (B . Y)
                            (A . X)
                            (C . X)
                            (B . Y)
                            (A . X)
                            (B . X)
                            (A . Y)
                            (B . Y)
                            (B . Z)
                            (C . Z)
                            (B . Y)
                            (B . Z)
                            (C . X)
                            (B . Z)
                            (B . Y)
                            (C . X)
                            (B . Y)
                            (B . Y)
                            (B . X)
                            (A . X)
                            (A . Y)
                            (A . X)
                            (B . Y)
                            (B . X)
                            (C . X)
                            (B . Y)
                            (B . Y)
                            (B . Z)
                            (C . Y)
                            (A . X)
                            (B . Z)
                            (A . X)
                            (A . X)
                            (A . X)
                            (A . X)
                            (C . Y)
                            (B . X)
                            (C . X)
                            (C . X)
                            (A . X)
                            (B . Y)
                            (C . Y)
                            (A . X)
                            (A . X)
                            (C . Y)
                            (C . X)
                            (C . Y)
                            (B . Y)
                            (B . Z)
                            (A . X)
                            (B . Y)
                            (B . Y)
                            (B . Z)
                            (B . Y)
                            (B . X)
                            (C . Y)
                            (C . X)
                            (C . Y)
                            (C . X)
                            (B . Y)
                            (A . X)
                            (B . Y)
                            (A . X)
                            (C . Y)
                            (C . X)
                            (C . Y)
                            (C . X)
                            (C . Y)
                            (B . Y)
                            (B . Y)
                            (A . Z)
                            (A . X)
                            (A . X)
                            (B . Z)
                            (A . X)
                            (B . Y)
                            (B . Y)
                            (A . X)
                            (A . X)
                            (C . Y)
                            (C . Y)
                            (C . Y)
                            (A . X)
                            (B . X)
                            (C . X)
                            (B . Y)
                            (A . X)
                            (B . X)
                            (B . Y)
                            (C . Y)
                            (A . X)
                            (B . X)
                            (B . Y)
                            (B . Y)
                            (B . Y)
                            (C . X)
                            (C . X)
                            (B . Y)
                            (B . Y)
                            (A . Z)
                            (B . Y)
                            (A . X)
                            (B . Y)
                            (B . Y)
                            (B . Y)
                            (B . Y)
                            (A . X)
                            (B . Z)
                            (C . X)
                            (B . Z)
                            (B . Z)
                            (C . Y)
                            (B . Z)
                            (A . X)
                            (A . X)
                            (B . Y)
                            (A . Y)
                            (A . X)
                            (A . Z)
                            (C . Y)
                            (C . X)
                            (C . X)
                            (C . Z)
                            (C . X)
                            (C . Y)
                            (B . X)
                            (B . Y)
                            (A . X)
                            (B . Y)
                            (A . X)
                            (C . X)
                            (B . Y)
                            (A . Y)
                            (B . Y)
                            (B . X)
                            (B . Y)
                            (A . X)
                            (B . Y)
                            (B . Z)
                            (B . Z)
                            (B . X)
                            (B . Z)
                            (C . X)
                            (A . X)
                            (B . Y)
                            (B . Y)
                            (B . Y)
                            (A . X)
                            (C . X)
                            (C . X)
                            (C . X)
                            (B . Y)
                            (C . Y)
                            (A . X)
                            (B . Y)
                            (C . Y)
                            (B . X)
                            (B . Z)
                            (A . X)
                            (B . Y)
                            (A . X)
                            (C . X)
                            (C . Y)
                            (C . Y)
                            (B . Y)
                            (C . Y)
                            (C . X)
                            (B . Z)
                            (B . Y)
                            (B . Y)
                            (A . X)
                            (A . X)
                            (B . Y)
                            (B . Y)
                            (B . Z)
                            (C . X)
                            (C . X)
                            (C . Y)
                            (C . X)
                            (C . Z)
                            (A . Z)
                            (C . X)
                            (B . Y)
                            (A . Z)
                            (B . Y)
                            (A . X)
                            (B . Y)
                            (C . X)
                            (B . Y)
                            (B . Y)
                            (B . Z)
                            (C . Y)
                            (B . Y)
                            (A . Z)
                            (A . X)
                            (A . X)
                            (C . X)
                            (A . Y)
                            (B . Y)
                            (B . Y)
                            (A . X)
                            (A . X)
                            (B . Z)
                            (B . Z)
                            (B . Y)
                            (C . X)
                            (C . Y)
                            (C . Z)
                            (A . Z)
                            (B . Z)
                            (A . X)
                            (A . Z)
                            (A . X)
                            (C . Y)
                            (C . X)
                            (A . X)
                            (A . X)
                            (C . Z)
                            (C . X)
                            (A . X)
                            (C . Y)
                            (C . X)
                            (A . X)
                            (B . Z)
                            (B . Z)
                            (B . Y)
                            (B . Y)
                            (B . Y)
                            (B . Y)
                            (B . Y)
                            (C . Y)
                            (C . X)
                            (B . X)
                            (C . X)
                            (B . Y)
                            (B . Y)
                            (A . X)
                            (B . Y)
                            (A . X)
                            (A . Y)
                            (B . Z)
                            (B . Y)
                            (A . X)
                            (A . Y)
                            (B . X)
                            (B . Y)
                            (C . Y)
                            (B . Y)
                            (C . X)
                            (C . Z)
                            (B . X)
                            (B . Z)
                            (B . Y)
                            (C . Z)
                            (B . Y)
                            (C . Y)
                            (A . X)
                            (B . Y)
                            (B . Y)
                            (B . Y)
                            (B . Z)
                            (C . Y)
                            (A . Z)
                            (C . X)
                            (B . Y)
                            (B . Z)
                            (C . X)
                            (B . Y)
                            (A . X)
                            (C . Y)
                            (B . X)
                            (C . X)
                            (A . X)
                            (B . Y)
                            (B . Y)
                            (C . X)
                            (B . X)
                            (B . Y)
                            (B . Z)
                            (B . Y)
                            (A . X)
                            (B . Y)
                            (B . X)
                            (A . X)
                            (A . X)
                            (A . X)
                            (B . Y)
                            (C . Y)
                            (C . X)
                            (B . Y)
                            (A . X)
                            (A . Z)
                            (B . Z)
                            (A . X)
                            (C . X)
                            (B . Y)
                            (B . Y)
                            (C . Y)
                            (B . Z)
                            (B . Y)
                            (C . X)
                            (C . Y)
                            (B . Y)
                            (C . Y)
                            (B . Y)
                            (B . Y)
                            (C . X)
                            (A . X)
                            (A . X)
                            (A . X)
                            (B . Y)
                            (B . Y)
                            (B . Y)
                            (C . X)
                            (A . Z)
                            (B . Y)
                            (B . Z)
                            (B . X)
                            (B . Z)
                            (B . Y)
                            (B . Y)
                            (C . X)
                            (A . X)
                            (B . Y)
                            (B . Y)
                            (B . X)
                            (B . X)
                            (C . X)
                            (C . X)
                            (A . X)
                            (C . Y)
                            (B . Y)
                            (C . X)
                            (B . Y)
                            (C . Y)
                            (C . X)
                            (B . Y)
                            (C . X)
                            (B . Y)
                            (A . X)
                            (B . Z)
                            (C . Z)
                            (C . Y)
                            (A . X)
                            (B . Z)
                            (A . X)
                            (C . Y)
                            (C . Y)
                            (B . Z)
                            (B . Z)
                            (A . X)
                            (C . X)
                            (B . Y)
                            (C . Z)
                            (B . X)
                            (B . Z)
                            (B . Y)
                            (B . Y)
                            (B . Y)
                            (C . Y)
                            (B . Y)
                            (C . X)
                            (A . X)
                            (B . Y)
                            (C . Y)
                            (B . Y)
                            (A . X)
                            (B . Y)
                            (B . Y)
                            (C . X)
                            (A . X)
                            (B . X)
                            (B . X)
                            (B . Z)
                            (C . Z)
                            (B . Y)
                            (C . Y)
                            (C . Y)
                            (B . X)
                            (C . X)
                            (C . X)
                            (B . Z)
                            (B . Z)
                            (C . X)
                            (C . X)
                            (B . Y)
                            (C . X)
                            (B . Y)
                            (B . Y)
                            (B . Z)
                            (B . Y)
                            (B . X)
                            (B . Y)
                            (C . X)
                            (C . Y)
                            (C . Y)
                            (B . Y)
                            (A . X)
                            (B . Y)
                            (A . X)
                            (C . Y)
                            (C . Z)
                            (C . X)
                            (C . Y)
                            (B . Y)
                            (B . Y)
                            (B . Z)
                            (B . Z)
                            (A . Y)
                            (C . X)
                            (B . Y)
                            (B . Z)
                            (A . Z)
                            (B . X)
                            (C . X)
                            (B . Y)
                            (B . Z)
                            (B . Y)
                            (C . X)
                            (A . X)
                            (B . Z)
                            (C . X)
                            (B . Z)
                            (B . Z)
                            (B . Z)
                            (B . Y)
                            (C . X)
                            (B . Y)
                            (B . Y)
                            (B . Y)
                            (A . Z)
                            (B . Y)
                            (B . X)
                            (C . X)
                            (B . Y)
                            (C . Y)
                            (A . Z)
                            (B . Z)
                            (A . X)
                            (A . X)
                            (B . Z)
                            (A . X)
                            (B . Z)
                            (A . X)
                            (A . X)
                            (C . X)
                            (C . X)
                            (A . Z)
                            (C . X)
                            (B . Z)
                            (B . Z)
                            (B . Y)
                            (B . X)
                            (B . Y)
                            (B . Y)
                            (B . Z)
                            (B . Y)
                            (C . Y)
                            (A . X)
                            (C . Y)
                            (B . X)
                            (B . Y)
                            (B . Z)
                            (C . X)
                            (A . Z)
                            (A . X)
                            (B . Y)
                            (A . X)
                            (A . X)
                            (C . X)
                            (A . X)
                            (B . Y)
                            (A . Z)
                            (B . Y)
                            (C . Y)
                            (A . X)
                            (B . Y)
                            (A . X)
                            (B . Z)
                            (A . Z)
                            (C . X)
                            (B . Z)
                            (B . Y)
                            (B . Z)
                            (B . X)
                            (A . X)
                            (B . Z)
                            (C . X)
                            (B . X)
                            (B . Z)
                            (B . Z)
                            (C . X)
                            (C . X)
                            (C . X)
                            (B . Y)
                            (B . Z)
                            (C . X)
                            (B . X)
                            (B . Y)
                            (C . Y)
                            (B . Z)
                            (A . Z)
                            (C . X)
                            (B . Z)
                            (B . Z)
                            (B . X)
                            (C . Y)
                            (B . Z)
                            (B . Y)
                            (A . X)
                            (B . Y)
                            (B . X)
                            (B . Y)
                            (B . Y)
                            (B . Y)
                            (B . Y)
                            (B . Z)
                            (A . X)
                            (B . Y)
                            (B . Y)
                            (B . Y)
                            (B . Y)
                            (C . Y)
                            (A . Z)
                            (C . X)
                            (B . X)
                            (A . Y)
                            (B . Y)
                            (A . X)
                            (A . X)
                            (B . Y)
                            (A . X)
                            (C . Z)
                            (B . Z)
                            (C . Z)
                            (B . Y)
                            (C . Y)
                            (A . X)
                            (C . Y)
                            (C . Y)
                            (C . Y)
                            (B . Y)
                            (C . Y)
                            (B . X)
                            (B . X)
                            (C . Y)
                            (A . X)
                            (C . Y)
                            (C . X)
                            (C . X)
                            (B . Y)
                            (B . Z)
                            (B . X)
                            (B . Z)
                            (B . Z)
                            (B . Y)
                            (C . Y)
                            (B . Y)
                            (C . Y)
                            (B . Y)
                            (B . Z)
                            (B . Y)
                            (A . X)
                            (B . Y)
                            (C . Z)
                            (B . X)
                            (B . Y)
                            (C . Z)
                            (C . X)
                            (B . Y)
                            (C . Y)
                            (C . X)
                            (A . X)
                            (B . Y)
                            (A . X)
                            (B . X)
                            (B . Z)
                            (B . Y)
                            (B . Z)
                            (C . X)
                            (B . Y)
                            (A . X)
                            (B . Z)
                            (B . Y)
                            (B . Z)
                            (B . X)
                            (B . Z)
                            (B . Z)
                            (A . X)
                            (A . Z)
                            (B . Y)
                            (C . Y)
                            (A . X)
                            (B . Z)
                            (B . X)
                            (A . X)
                            (A . X)
                            (C . X)
                            (B . Y)
                            (C . X)
                            (C . Z)
                            (B . Z)
                            (B . Z)
                            (B . Y)
                            (C . Y)
                            (C . X)
                            (B . Y)
                            (B . Y)
                            (A . X)
                            (B . Y)
                            (C . Z)
                            (B . Y)
                            (B . Y)
                            (C . Y)
                            (B . X)
                            (B . Y)
                            (B . Y)
                            (B . Z)
                            (B . X)
                            (B . Y)
                            (B . X)
                            (B . Y)
                            (B . Z)
                            (B . Z)
                            (B . Z)
                            (B . Z)
                            (B . Z)
                            (C . Y)
                            (B . Y)
                            (C . Y)
                            (A . Y)
                            (C . Y)
                            (C . Z)
                            (A . X)
                            (B . Y)
                            (C . Y)
                            (B . Y)
                            (A . X)
                            (C . Y)
                            (B . Z)
                            (A . X)
                            (A . X)
                            (B . Z)
                            (C . Y)
                            (B . Y)
                            (C . X)
                            (B . Z)
                            (B . Y)
                            (A . X)
                            (B . Y)
                            (C . X)
                            (B . Y)
                            (B . Z)
                            (A . X)
                            (C . X)
                            (B . X)
                            (B . Y)
                            (A . Y)
                            (C . Y)
                            (C . X)
                            (B . Z)
                            (C . Z)
                            (B . X)
                            (B . X)
                            (C . Y)
                            (A . X)
                            (A . X)
                            (B . Y)
                            (C . Y)
                            (C . X)
                            (C . Y)
                            (B . Z)
                            (C . X)
                            (B . Y)
                            (B . X)
                            (B . Y)
                            (C . X)
                            (B . Z)
                            (B . Z)
                            (B . Y)
                            (C . X)
                            (C . Z)
                            (B . Y)
                            (B . Z)
                            (B . Z)
                            (B . Z)
                            (A . Y)
                            (B . Y)
                            (A . X)
                            (B . Z)
                            (C . X)
                            (C . Z)
                            (A . X)
                            (B . Y)
                            (C . X)
                            (A . X)
                            (C . Y)
                            (C . Y)
                            (B . Y)
                            (B . Y)
                            (B . Y)
                            (B . X)
                            (B . Y)
                            (B . Y)
                            (C . X)
                            (A . X)
                            (B . X)
                            (B . Z)
                            (C . X)
                            (B . Y)
                            (C . X)
                            (C . Y)
                            (B . Y)
                            (A . X)
                            (B . Y)
                            (B . Y)
                            (A . X)
                            (B . Y)
                            (A . X)
                            (C . X)
                            (A . X)
                            (B . Y)
                            (A . Y)
                            (A . X)
                            (B . Y)
                            (C . X)
                            (C . Y)
                            (B . Z)
                            (A . X)
                            (B . Y)
                            (C . X)
                            (A . X)
                            (B . Z)
                            (C . Y)
                            (A . X)
                            (C . X)
                            (B . Y)
                            (C . X)
                            (C . Z)
                            (B . Y)
                            (B . Z)
                            (C . Z)
                            (C . Y)
                            (B . Y)
                            (B . Y)
                            (B . Y)
                            (B . Y)
                            (B . Y)
                            (B . Y)
                            (A . X)
                            (A . X)
                            (B . X)
                            (A . X)
                            (C . Y)
                            (B . Z)
                            (B . Y)
                            (B . Y)
                            (B . Y)
                            (B . Y)
                            (C . X)
                            (B . Z)
                            (A . X)
                            (A . X)
                            (B . X)
                            (B . Y)
                            (B . Z)
                            (B . Z)
                            (B . Y)
                            (C . X)
                            (A . X)
                            (B . Y)
                            (B . Y)
                            (B . Y)
                            (B . Y)
                            (A . X)
                            (B . Z)
                            (C . Z)
                            (B . Z)
                            (B . Y)
                            (A . X)
                            (A . X)
                            (B . Z)
                            (B . Y)
                            (B . Y)
                            (B . Y)
                            (C . X)
                            (B . Z)
                            (B . Y)
                            (B . Y)
                            (B . Y)
                            (B . Z)
                            (C . X)
                            (A . X)
                            (B . Z)
                            (C . X)
                            (B . Z)
                            (A . X)
                            (A . X)
                            (A . X)
                            (C . X)
                            (C . X)
                            (B . Z)
                            (C . X)
                            (C . X)
                            (C . X)
                            (B . Y)
                            (B . Y)
                            (C . X)
                            (A . X)
                            (C . X)
                            (C . Y)
                            (B . Z)
                            (B . Y)
                            (B . Z)
                            (A . X)
                            (B . Y)
                            (B . Z)
                            (B . Y)
                            (A . X)
                            (B . Z)
                            (B . Y)
                            (B . Z)
                            (A . X)
                            (B . Y)
                            (B . X)
                            (C . Y)
                            (C . Y)
                            (B . Y)
                            (C . Y)
                            (C . X)
                            (B . Z)
                            (B . Z)
                            (C . Y)
                            (A . X)
                            (B . Y)
                            (B . Y)
                            (C . Y)
                            (C . Y)
                            (A . Z)
                            (B . Y)
                            (B . X)
                            (C . X)
                            (B . Y)
                            (C . X)
                            (C . Z)
                            (C . X)
                            (C . X)
                            (C . Y)
                            (A . X)
                            (C . Z)
                            (C . Z)
                            (B . Z)
                            (B . Y)
                            (A . X)
                            (B . Y)
                            (B . Z)
                            (B . Z)
                            (C . Y)
                            (C . Y)
                            (B . Y)
                            (B . X)
                            (B . Z)
                            (A . X)
                            (C . X)
                            (C . X)
                            (A . X)
                            (B . Y)
                            (C . Y)
                            (C . X)
                            (B . Y)
                            (B . Z)
                            (A . Y)
                            (B . Y)
                            (B . Y)
                            (B . Y)
                            (B . Y)
                            (C . Y)
                            (B . Y)
                            (C . Y)
                            (B . Z)
                            (C . Y)
                            (B . Y)
                            (B . Z)
                            (B . Y)
                            (B . Y)
                            (C . X)
                            (C . X)
                            (B . Z)
                            (B . Z)
                            (B . Z)
                            (B . Y)
                            (B . Z)
                            (A . X)
                            (A . Y)
                            (C . X)
                            (B . Z)
                            (A . X)
                            (A . X)
                            (A . X)
                            (C . Y)
                            (A . X)
                            (B . Y)
                            (A . Y)
                            (B . Y)
                            (B . Y)
                            (C . X)
                            (B . Y)
                            (B . Y)
                            (A . X)
                            (B . X)
                            (A . X)
                            (B . Y)
                            (B . Y)
                            (B . X)
                            (A . X)
                            (B . X)
                            (B . Z)
                            (C . X)
                            (A . X)
                            (B . Y)
                            (B . Z)
                            (C . Y)
                            (C . Z)
                            (B . Y)
                            (C . Y)
                            (C . Z)
                            (B . X)
                            (B . Y)
                            (C . Y)
                            (A . X)
                            (B . Y)
                            (C . Y)
                            (C . X)
                            (B . X)
                            (C . X)
                            (A . X)
                            (C . Y)
                            (C . Z)
                            (B . Y)
                            (A . X)
                            (C . Z)
                            (C . X)
                            (B . Y)
                            (B . Y)
                            (C . Y)
                            (C . Z)
                            (C . Y)
                            (A . X)
                            (A . X)
                            (C . Y)
                            (A . Y)
                            (A . Z)
                            (A . Y)
                            (C . X)
                            (C . Y)
                            (B . Z)
                            (B . Y)
                            (B . Y)
                            (B . Z)
                            (A . X)
                            (C . X)
                            (C . X)
                            (B . Y)
                            (A . Z)
                            (B . Y)
                            (B . X)
                            (B . Y)
                            (B . Y)
                            (C . Y)
                            (C . Z)
                            (A . Y)
                            (B . Y)
                            (B . Y)
                            (B . Y)
                            (B . Z)
                            (B . Y)
                            (C . Y)
                            (B . X)
                            (B . Y)
                            (C . X)
                            (A . X)
                            (B . X)
                            (B . Y)
                            (B . Y)
                            (A . X)
                            (B . Z)
                            (C . Z)
                            (C . X)
                            (B . Y)
                            (A . X)
                            (A . X)
                            (C . Y)
                            (B . Y)
                            (A . X)
                            (B . Y)
                            (B . Y)
                            (C . Z)
                            (A . X)
                            (A . X)
                            (B . Z)
                            (C . Y)
                            (B . Y)
                            (B . Y)
                            (A . X)
                            (B . Z)
                            (A . X)
                            (C . Z)
                            (B . Y)
                            (A . Z)
                            (B . Y)
                            (A . Z)
                            (C . Z)
                            (B . Z)
                            (B . Y)
                            (C . Z)
                            (B . Y)
                            (C . Y)
                            (A . X)
                            (B . Y)
                            (B . Z)
                            (C . Y)
                            (A . X)
                            (C . Y)
                            (C . Z)
                            (B . Z)
                            (A . Z)
                            (B . X)
                            (A . Z)
                            (C . Z)
                            (A . X)
                            (C . X)
                            (B . Y)
                            (B . Y)
                            (B . Y)
                            (B . Y)
                            (B . Y)
                            (B . Y)
                            (C . X)
                            (B . X)
                            (B . Y)
                            (C . X)
                            (B . Y)
                            (C . Y)
                            (A . X)
                            (B . Y)
                            (C . X)
                            (A . X)
                            (B . Z)
                            (B . Y)
                            (A . X)
                            (B . Y)
                            (C . X)
                            (C . X)
                            (B . Y)
                            (A . X)
                            (B . Y)
                            (C . X)
                            (C . X)
                            (B . Y)
                            (B . Y)
                            (B . X)
                            (C . Y)
                            (B . X)
                            (C . X)
                            (A . X)
                            (B . Y)
                            (A . Z)
                            (B . X)
                            (B . Z)
                            (A . Z)
                            (A . X)
                            (B . Y)
                            (C . Y)
                            (B . Y)
                            (B . Y)
                            (B . Y)
                            (C . Z)
                            (A . X)
                            (B . Z)
                            (C . Y)
                            (C . Y)
                            (C . X)
                            (A . Z)
                            (B . X)
                            (C . X)
                            (C . Z)
                            (B . Y)
                            (B . Y)
                            (C . Y)
                            (C . X)
                            (B . Y)
                            (C . Y)
                            (B . Y)
                            (C . Y)
                            (B . Z)
                            (C . X)
                            (B . X)
                            (B . X)
                            (C . Y)
                            (B . Z)
                            (B . Y)
                            (B . Y)
                            (B . Z)
                            (B . Y)
                            (A . X)
                            (C . Y)
                            (B . Y)
                            (B . Y)
                            (B . Z)
                            (B . Y)
                            (C . X)
                            (B . Y)
                            (C . X)
                            (B . X)
                            (A . X)
                            (A . X)
                            (C . X)
                            (B . X)
                            (B . Y)
                            (B . X)
                            (A . X)
                            (C . X)
                            (B . X)
                            (B . Z)
                            (B . Y)
                            (A . X)
                            (A . Y)
                            (B . Y)
                            (C . Y)
                            (B . Y)
                            (A . Z)
                            (B . Y)
                            (B . Y)
                            (C . Y)
                            (A . X)
                            (C . Y)
                            (B . Z)
                            (C . X)
                            (C . X)
                            (A . X)
                            (C . Y)
                            (C . Y)
                            (A . Y)
                            (B . Y)
                            (B . Z)
                            (B . Y)
                            (C . X)
                            (B . X)
                            (C . Y)
                            (C . Y)
                            (A . Y)
                            (C . Y)
                            (B . Y)
                            (B . X)
                            (B . Y)
                            (C . Y)
                            (B . Z)
                            (C . X)
                            (B . Y)
                            (C . Y)
                            (B . Y)
                            (B . Y)
                            (B . Y)
                            (A . X)
                            (C . Y)
                            (A . X)
                            (B . X)
                            (B . X)
                            (C . X)
                            (C . Y)
                            (B . Y)
                            (A . Z)
                            (B . Y)
                            (A . X)
                            (B . Z)
                            (B . Y)
                            (C . Z)
                            (B . Y)
                            (C . X)
                            (C . X)
                            (C . X)
                            (C . X)
                            (B . X)
                            (C . X)
                            (B . Z)
                            (A . X)
                            (C . Z)
                            (B . Y)
                            (A . X)
                            (C . Y)
                            (A . Z)
                            (B . Y)
                            (C . Y)
                            (B . Y)
                            (B . Z)
                            (A . X)
                            (B . Y)
                            (B . Y)
                            (B . Y)
                            (A . X)
                            (B . Z)
                            (C . Y)
                            (B . Y)
                            (B . Y)
                            (B . X)
                            (B . Y)
                            (B . Y)
                            (A . Z)
                            (C . Y)
                            (B . X)
                            (C . X)
                            (B . Y)
                            (B . Z)
                            (B . Y)
                            (B . Y)
                            (C . X)
                            (B . Z)
                            (B . Y)
                            (C . Y)
                            (B . Y)
                            (B . Y)
                            (A . X)
                            (C . X)
                            (A . X)
                            (B . Z)
                            (A . X)
                            (C . X)
                            (B . Z)
                            (A . X)
                            (B . Z)
                            (C . Z)
                            (A . X)
                            (B . Z)
                            (C . X)
                            (B . Y)
                            (B . Y)
                            (B . Y)
                            (C . X)
                            (B . X)
                            (A . X)
                            (B . Y)
                            (B . Z)
                            (C . X)
                            (B . X)
                            (B . Z)
                            (C . Y)
                            (B . X)
                            (B . Y)
                            (C . Y)
                            (B . Y)
                            (C . X)
                            (B . Z)
                            (A . Z)
                            (B . Y)
                            (B . Z)
                            (C . X)
                            (B . Z)
                            (B . Y)
                            (C . Y)
                            (C . Y)
                            (A . X)
                            (C . Y)
                            (B . Y)
                            (A . Z)
                            (C . X)
                            (C . X)
                            (C . X)
                            (B . Y)
                            (C . X)
                            (B . X)
                            (B . Y)
                            (B . Y)
                            (A . X)
                            (A . X)
                            (B . Z)
                            (A . X)
                            (C . Y)
                            (C . X)
                            (B . Y)
                            (C . Z)
                            (B . Y)
                            (B . Y)
                            (C . X)
                            (B . Z)
                            (C . Y)
                            (A . X)
                            (B . Y)
                            (A . X)
                            (A . X)
                            (B . Y)
                            (B . Y)
                            (B . Y)
                            (B . Z)
                            (A . Z)
                            (B . Z)
                            (B . Y)
                            (A . X)
                            (C . X)
                            (A . X)
                            (A . Z)
                            (C . Y)
                            (A . X)
                            (C . X)
                            (C . X)
                            (A . X)
                            (C . Z)
                            (B . Y)
                            (B . Y)
                            (B . X)
                            (B . Y)
                            (C . X)
                            (A . X)
                            (A . X)
                            (B . Y)
                            (A . Z)
                            (C . Z)
                            (B . Z)
                            (B . Y)
                            (B . Y)
                            (B . Y)
                            (C . Y)
                            (C . Y)
                            (B . Y)
                            (A . X)
                            (B . Y)
                            (B . Y)
                            (C . Z)
                            (B . Y)
                            (A . X)
                            (C . Z)
                            (B . Y)
                            (C . X)
                            (B . X)
                            (B . Y)
                            (B . Z)
                            (C . X)
                            (C . Y)
                            (B . Y)
                            (B . Z)
                            (B . Z)
                            (A . X)
                            (A . X)
                            (B . Y)
                            (B . Y)
                            (C . Y)
                            (C . X)
                            (C . X)
                            (A . Z)
                            (C . Z)
                            (B . Y)
                            (B . Y)
                            (A . X)
                            (B . Y)
                            (B . Y)
                            (A . X)
                            (C . Y)
                            (C . X)
                            (C . X)
                            (C . Y)
                            (C . Y)
                            (B . X)
                            (B . Z)
                            (C . X)
                            (B . Y)
                            (C . Y)
                            (B . X)
                            (B . Y)
                            (A . X)
                            (C . Z)
                            (C . Y)
                            (C . Y)
                            (A . X)
                            (C . Z)
                            (C . X)
                            (B . Y)
                            (B . Y)
                            (C . Y)
                            (C . X)
                            (C . X)
                            (C . X)
                            (C . Z)
                            (C . Y)
                            (A . X)
                            (B . Y)
                            (C . X)
                            (B . Y)
                            (B . X)
                            (C . X)
                            (B . Z)
                            (C . X)
                            (C . Z)
                            (B . Z)
                            (B . Y)
                            (A . X)
                            (B . Z)
                            (B . X)
                            (C . Y)
                            (B . X)
                            (B . Y)
                            (B . Z)
                            (B . Y)
                            (A . Y)
                            (B . Y)
                            (A . X)
                            (A . X)
                            (B . Y)
                            (A . X)
                            (C . X)
                            (C . Z)
                            (B . Z)
                            (B . Y)
                            (B . Y)
                            (B . Y)
                            (A . X)
                            (C . Z)
                            (B . Y)
                            (C . Z)
                            (C . X)
                            (A . X)
                            (B . Y)
                            (A . X)
                            (B . Y)
                            (C . Y)
                            (B . Y)
                            (A . X)
                            (B . Y)
                            (C . Z)
                            (B . Z)
                            (A . Y)
                            (C . X)
                            (A . X)
                            (A . Z)
                            (C . X)
                            (B . X)
                            (B . Y)
                            (B . X)
                            (C . Y)
                            (B . Y)
                            (B . Y)
                            (C . Y)
                            (C . Y)
                            (B . Y)
                            (A . X)
                            (B . Y)
                            (B . Y)
                            (B . Y)
                            (C . X)
                            (C . Y)
                            (B . X)
                            (B . X)
                            (B . X)
                            (A . X)
                            (B . Z)
                            (B . Y)
                            (C . Y)
                            (B . Y)
                            (C . X)
                            (B . X)
                            (C . X)
                            (C . X)
                            (B . Y)
                            (C . X)
                            (B . Z)
                            (B . Z)
                            (C . X)
                            (B . Y)
                            (B . Y)
                            (B . Z)
                            (C . X)
                            (C . Z)
                            (B . Y)
                            (A . X)
                            (A . X)
                            (A . Y)
                            (C . X)
                            (B . Z)
                            (B . X)
                            (B . Y)
                            (B . Y)
                            (C . X)
                            (B . Z)
                            (A . X)
                            (C . X)
                            (A . Y)
                            (A . X)
                            (C . X)
                            (C . Z)
                            (B . Y)
                            (B . Y)
                            (B . Z)
                            (C . X)
                            (B . Z)
                            (B . X)
                            (A . Z)
                            (C . Z)
                            (A . X)
                            (B . Y)
                            (A . X)
                            (B . Z)
                            (A . X)
                            (B . X)
                            (B . Z)
                            (B . Y)
                            (B . Y)
                            (C . X)
                            (B . Y)
                            (B . Y)
                            (A . X)
                            (B . Z)
                            (C . Y)
                            (C . X)
                            (B . Y)
                            (C . X)
                            (A . Y)
                            (B . Y)
                            (B . Y)
                            (B . Y)
                            (B . Z)
                            (C . Y)
                            (B . Y)
                            (C . X)
                            (B . Y)
                            (A . Z)
                            (C . X)
                            (B . X)
                            (A . X)
                            (C . Z)
                            (B . Y)
                            (A . X)
                            (B . Z)
                            (B . Z)
                            (C . X)
                            (A . Y)
                            (A . X)
                            (B . Z)
                            (B . Z)
                            (B . X)
                            (B . Z)
                            (C . Z)
                            (C . Y)
                            (B . Y)
                            (C . X)
                            (B . X)
                            (B . Y)
                            (A . Y)
                            (C . X)
                            (B . Z)
                            (B . Y)
                            (C . X)
                            (B . X)
                            (C . X)
                            (A . X)
                            (B . Z)))
#+END_SRC

#+RESULTS: 2022-day2-input
: aoc22/day2input

#+CALL: 2022-day2-input
#+NAME: 2022-day2-solution
#+BEGIN_SRC emacs-lisp :session "day2"
(defun aoc22/day2-part1 (input)
  "This function takes INPUT and produces the score of Rock Papers Scissors session.
  For car, A = Rock, B = Paper and C = Scissors
  For cadr X = Rock, Y = Paper and Z = Scissors
  Scoring is as follows:
  Shape selected -> X=1, Y=2, Z=3
  Result of game -> L=0, D=3, W=6
  Final score = Shape + Result

  The INPUT is given as a list of pairs"
  (let ((score 0))
    (dolist (pair input)
      (let ((elf (car pair))
            (me (cdr pair)))
        ;; Add score of selected shape
        (cond
         ((eq me 'X) (cl-incf score 1))
         ((eq me 'Y) (cl-incf score 2))
         ((eq me 'Z) (cl-incf score 3)))
        ;; Add result of single match
        (cond
         ((eq elf 'A)
          (cond
           ((eq me 'X) (cl-incf score 3))
           ((eq me 'Y) (cl-incf score 6))))
         ((eq elf 'B)
          (cond
           ((eq me 'Y) (cl-incf score 3))
           ((eq me 'Z) (cl-incf score 6))))
         ((eq elf 'C)
          (cond
           ((eq me 'Z) (cl-incf score 3))
           ((eq me 'X) (cl-incf score 6)))))
        ))
    score))

(defun aoc22/day2-part2 (input)
  "This function takes INPUT and produces the score of Rock Papers Scissors session.
  For car, A = Rock, B = Paper and C = Scissors
  For cadr X = Lose, Y = Draw and Z = Win
  Scoring is as follows:
  Shape selected -> Rock=1, Paper=2, Scissors=3
  Result of game -> Lose=0, Draw=3, Win=6
  Final score = Shape + Result

  The INPUT is given as a list of pairs"
  (let ((score 0))
    (dolist (pair input)
      (let ((elf (car pair))
            (me (cdr pair)))
        ;; Add score of requested outcome
        (cond
         ((eq me 'Y) (cl-incf score 3))
         ((eq me 'Z) (cl-incf score 6)))
        ;; Add score of selected item (according to requested outcome)
        (cond
         ((eq me 'X)
          (cond
           ((eq elf 'A) (cl-incf score 3))
           ((eq elf 'B) (cl-incf score 1))
           ((eq elf 'C) (cl-incf score 2))))
         ((eq me 'Y)
          (cond
           ((eq elf 'A) (cl-incf score 1))
           ((eq elf 'B) (cl-incf score 2))
           ((eq elf 'C) (cl-incf score 3))))
         ((eq me 'Z)
          (cond
           ((eq elf 'A) (cl-incf score 2))
           ((eq elf 'B) (cl-incf score 3))
           ((eq elf 'C) (cl-incf score 1)))))
        ))
    score))

;;; Results vector
(vector (aoc22/day2-part1 aoc22/day2test)
        (aoc22/day2-part1 aoc22/day2input)
        (aoc22/day2-part2 aoc22/day2test)
        (aoc22/day2-part2 aoc22/day2input))
#+END_SRC

#+RESULTS:
: [15 12740 12 11980]

** day 3
#+NAME: 2022-day3-input
#+BEGIN_SRC emacs-lisp :session "day3"
  (defconst aoc22/day3test '( "vJrwpWtwJgWrhcsFMMfFFhFp"
    "jqHRNqRjqzjGDLGLrsFMfFZSrLrFZsSL" "PmmdzqPrVvPwwTWBwg"
    "wMqvLMZHhHMvwLHjbvcjnnSBnvTQFn" "ttgJtRGJQctTZtZT"
    "CrZsJsPPZsGzwwsLwLmpwMDw"))

  (defconst aoc22/day3input '( "lflZfgnSnlmmlgGfjGthQPtLNsQhvbHLLpSS"
    "zrCVDVFMJTCTcCJMwCThWbtbpbWpPbtbHPLQssLsHP"
    "rBFcrwFzFwwVDcDrzTzJfnRGjllBdGZnnZfhqmdn"
    "FjpnFRDmbRtnbJrFJmSTsGShWVhGqGVVsmqs"
    "ZwPvNPdzNZwfzBNLdNNNNcLvhnQhqMTVsTGSWSqGqTdVWhMT"
    "vgLZHfvLffNLPbggnrbFpJnCbC" "hzJzGjGfqmGtDQtDSvVV"
    "plpcMBNBcCTlTgCMbvtrsSVsVJDJlrwDQr" "McHBMMcTTHgJnWqnRqjzZnnRzR"
    "ppvsGZhDGprrSjSllwfZ" "TTFMMFJMgMHmHmdqdSvNqlSSSNJv"
    "mgBPHTRWFRVcpvsVttppbv" "ZZDssfMDMtqqppZLLJzmzSTwNJplTSgpgm"
    "BdCRRHFRbccWWBvBHCdcJVngNVSvTgVNzgNNVmnz" "QHFFrBdcGtqPmmQh"
    "qLvQFRgLSSNgqQvRrqLTQvLttwDBFWDwjwFttDdlBBwBwM"
    "nbsmZnbmHbZVCGPVmHWtwlStBDtwBMtwWHMj"
    "CnCbhGCPpPCSnZmrgRNRqNRrLNgrzh"
    "vgLWWHRNLnWwLggWzwLFFzMmBMRMhMhTbhsmmsbbmQTm"
    "rScpJJDDpjtSDPPPJDpjqPCHBBtlTdblmmlhBsMMmTsbmtsl"
    "GHZHCPprSSwgvWNVwVZv" "dMrCMJMqvtdFwcjczjQzThtm"
    "gGbLblLpZlHvllQhlQwcjT" "GHRWvPRbPHPRvNGbvdRBqdqBBfRqBqnrfF"
    "VsHcljlbhmHbHHlcjVcVShJSCdJCfMrMMQDfRNFCfMRGfNrQ"
    "tGtvLtpgBTGvDMMRdMMgdCNM" "pnGnGqGtvtzTLjWqmSSjHhWhWs"
    "NJTDntDNDVjNnjBfjjjcCZCZcVqCSCLqcSScCc"
    "zvhgRgQvvdllgQbHghlvHrRHSScBCRqqwCLGqSMCZCGGGqMZ"
    "pvvrHzdgvlgzQphQsDFmnsNTTtjfjJJmPB"
    "ScnSZSZZlmjmHjjWHHWZftJVJpppwtVVnLJtnptnwt"
    "CFFlQBbbPQqrBwJrJJrGJD"
    "PgTqRddFzgdRPFFbFgqQFgsSjfHWfSHmSMWcjZlmZmjTZM"
    "lzBRtctbnBRBRBBWnDnDWjlLVvwGMrvwrHHQHGmDvHQvHGrV"
    "FsTgFCTSgsCNspzhCGMfTHQVwVMfMmMmrH" "hSdSFgghhqpRbLqjntqnPz"
    "DCDnNGFFDQdQmVDNdFVNFccpJLHWSvPLrvvvPtGGhSttLv"
    "sBgTzzZqrBlfljslWBhvHSvPBhSBJSSL" "lRlTgMzlzrwRrnmbCMCFnNVMnc"
    "MJQJMJHBrsdrHwts" "dbbSVGgbjVqGTVfqddCTpmWWcprgNgWmcWwWswpN"
    "LPdGGdVGPCVdLBlBMlDRRRMD" "vdcwZLTdTFFRDHVgmpppMmqZ"
    "jGPzCnQPjlsDVqDpqDHbgP"
    "BjWJrlGQQzrCzBzlzBCGBznzwNRNcwLJdwTJFTHRSTvtLcNN"
    "ngrgqTjJJZnjFJpnqnnVTLzBbbHbLQdLHLHbrdHdHG"
    "lNcltCCtvftfWssPbMQdMBzhbbcBDLdh"
    "PRtWsQCmWsmSsCNCSvCSWlspwgqjqmqjTpnJZwnZVpFwgq"
    "PjWjGDCjmrmWPNmvWDWFmgCNfVJRLfJRfLDLJQlfHplpRbfR"
    "MtZMtcSbccZshTtQTVVTpzHlLRRQLV"
    "cZhbwMnwqsqnhnqtMBnvNFrnGPNPPmgPGCgW" "WBjWjWjqZwQJnJZCZZbf"
    "StHSDRPHHcTrTrJpLCCMbrqnJn"
    "RvTTvGqcqTFvSvSRDHvRjlhgWBWBdhjwjGgNjhlj"
    "FSbCqcFsbCPtrcrqhCScbshMjHDGGWBLHBnjGLPBHGGBGnHj"
    "flQdlsgQgGnQHBHjDn"
    "vllgRZdmvsvpgdwZgzJdwRmprqccSFcSShJbTSttqMCrCCch"
    "GwwgCtvHgwcHVVDqpWdfnqVv" "sllBsSNBjSrLfqhLgjfqhL"
    "ZbQbZQzgQQPSblBggNQRHGZHHCmwmHFGGcwtJm"
    "CmGVGBTVTmmTWTNLLCVgCSFvDQppQQDDnDQDJpMggfnQft"
    "RrtdqtldPbHzRbnjRfQZjJfMDnMj" "wcwhccqrdrrlFmLGCwCtSwtL"
    "pzZznZphZnpcNWSwGwVVPzrPrG" "lgFllLLltgbDsrBCwrjWGmwmtw"
    "MgJbDLlMQRJccchrhc" "wbbjzZhdGDwLzZSBWqqHmZgssCWqFtMZ"
    "VRJccfvPlTTlQlHQCWQhMMhCCHqQ"
    "RlVfVJcPTVTfvvvJfNJVlcBjGjwhSLdBNGGnjLLBwzGb"
    "bvpqHMVTTpZnqnWRQQQw" "tfhFFdSFggfhbldhhZcnRscRcQmnRs"
    "DPzgFJzFLfFbFSgPFgdPglMHpvBpHTCMGpjvMMpLvvNG"
    "JggGLQgQpLpSPRJgGPSnGlFTDBjjRFvRjtBFjWvFjqRj" "cmHhZcMHcWjrTBjrvm"
    "dbHwdNNHhwTNThZHdlwQJJwngpgnJGnSPw" "DbZjVfjVLhZDLpWPHpMZPmmGNp"
    "lFcJJGcFqnBFqwJCHHMmNHPsdCNp" "BlwccRQtBwBrwLGbGhGggzLgzR"
    "RBhZPjlWqgbNbgGLBr" "MzSmSzpFdHwpswzzHnzjnvLCbgtrtLGLbJLLJNtJtbwJ"
    "MsSHdmMdpFfmFjpfcPWRhRVZfWQThZ" "mqmssPCFhhsJccVg"
    "FTttfwdjjHznJgfngpnc"
    "dNFTjQNRtRNQldRNrRdHMRrlPZqCGlGBCqqZmmbPqDmDCmGW"
    "ZJVRRZZJRcvmPhCJrvhm" "PPWQDTfWbnnstlCGvjGrWMGMvr"
    "TbbwddndsnsfDpwFqZFVHBVPqc" "tFmpJmgJJgmFDWgRgFrrlGSltSQvZChMtCMM"
    "TLcZHsjLVNBwGQCCGlsCShvh" "nqNdwwccBwVLwjjDznZzppbgzFZfDF"
    "qsTqCCCszjlqTssBShlQSSZFgZZhgB"
    "LDPmVgDDJdLPrPgLgPZSFZQfhQGGBQJcSFJS"
    "mvmVbVvtggVtvgdLVvtmptCsNTtjRnpRTTjpsqCp"
    "BdNPLnmFvLFNgnmBmnFGnwSZZZWwqWgqjwWssTHWSS"
    "bJhMzhbVMbDCcVpZtjHMqTMwtttSjH"
    "hzclfCppVqQfbzQVbpzPQLNFBdrvdNGGBnmrmP"
    "nLVLzBDJCCHqdLncqVJgSsDlGsbssmvvvbvbff"
    "jMNHFWNTZZNwMPrPWrrPMMrrvSllbgsllfgbgvQsvGmglZbv"
    "RjPjrjRPtNrwHhBtncCJtJtL" "jbhhjhNjvqNbmjMjqhtCFdmPFdlzJzfFfJQJfR"
    "GBBZWrZWgpSsnSngrrSgHzFzFFdClzfFQFlRZftQPR"
    "TrGTrGWHpHWGHWVWsngprHpLbLLVvcqMcNbVNLhwVNbtNb"
    "sQDvDmDLQFDRsdchzhBczLhhPhVz"
    "MbGGMjjGZSjvfHvHSbfwBqcPnqqcPVhPNnqnzjcn"
    "ZwMMHrWvSHbfJfTrbJwSMMfMsQDtsFRptlpdCRpWmptQDRmC"
    "TwMHdcTznLqzTrHdzzzHTdgMRQWRhJhNjjvgQvQQWNjl"
    "tbfsVbDCVSSDtSPQJWPvRNhQtghN"
    "FVGBpGCVFCbfCbVbZCSHqmwqcqLcdHJGwHqqTd" "lTlGfjLGwHNMggscsDRwsC"
    "MrFtrzZZPZrtVQtnrrFdQhhDPDSphgDRhDcsCCgWpW" "ZJmJVzVVJFHfGbqJGMLv"
    "zsFZVjzlHPfTzGfLGt" "mdrrmdMMcBcmNqNbPqfRDLPWPlqTWD"
    "BNQhmmrBrQghgSmNBQQSmvwssjZZSJHljJFFHZJvZV"
    "rLZCsZdMJfdNCsfZMrLdFmssnwgTRQgBBwgRwcngTNVRVQjV"
    "StqDHlStDPgRTqcwjT"
    "GlDGDhbpHhvSHWlzbWlhpzhJdrFLrCLmvdmFZsmJJjJfdv"
    "pJHJMJsJjSMFdHhszFvMhlmmGNlSmmBGllWmVlwcTw"
    "ZqZRDrZCZDtPDPDrCngrnnPQGVmGHVBWGWtGmWVwVlmTlGNl"
    "ZQPgRqrrQPqLnrLMvLphHdvdjpJddb" "NwbBjljFbcjtTcccqW"
    "RHZrPHPpNgZTzTqc" "sfrPdmPdpsmPPPrfQPVGlwGVBwbGVnFlNQCG"
    "hQdNTlzhdTvrhdnTBqcWBLsBHgWQgBPg" "zwzRDbDfqZBLHDLB"
    "wFbFmjjRzfmjGGMGMfmJwwGCCnvNhpvSCNnrvJvCprnnSp"
    "zshNNJbwGFJfGJzzzNRnHGnCnRHcRPgTmPmn"
    "LMDVtZLStrrZClBrVDllLSBWRPTPPRRPmgWPVmPTPHTWgR"
    "SDSqLMlrtLlLtrBqBdlMZjvffCNzwvhjvvzhdfNhvf"
    "SLQmGBmhLSLQTBGBGwdwpJjwwQjwcVpJZJ"
    "sNrWrWPNbHghrbgnNNzbWbFWdZpMpzVpdMZMzMMVZcwwJdwd"
    "frrPNNWshWhhHDvDGDRSBSRvttqv" "FJqpgvhJJRjFjZTqDsMHrzwjsSsSszMrMm"
    "PPPQWGtnbbfBmPsFswwsMrcc" "QfBtbldtWQfbWbnfGlFqZppvpFZZLhFlpq"
    "ZqSMZHHCMpHTZTWmFTFZPZQJBgVGVJQvVVSDBvBtcBBG"
    "RNsndwsNjsbsgGCgjQBttcBg"
    "NRszRRNzLNNNwNfhCCrfdmTqFZllFFHFFpWhlTmWpq"
    "llbbzDmSspGRpHpzsldzRRsVtFBBFJMMVVFLTTTMVtLTDM"
    "cqgjqvNgvqCjQZqgGGnhMTnMJVLBLMtFhhVFWB"
    "PfGGvQrPCjvjZgGCCCZZZbSmmmHlRpprlHrHwssSRr" "mRmpFpWpfMMgLnmS"
    "CdCsqzdRzqStLjSqfMnL" "wQRHdTzCQbzCwsTrZBlFZGpVlpFGQD"
    "qnMTnTVSTPTHTHcMZMvVpmppmFmVzFLLFLlFpG"
    "gBjDsjRRwhDDghthwwWZwLmpmwWWLWLbGZ" "NhZtZtBgPTNJJNTS"
    "jLjjmpHvzvZrfzQjmfHHWrfbqblLsSlTsqsgqPJbPqVglb"
    "FBcCwDwtwgcgnCwcGchtJSsRqVRVJPPqDlbSDRPq"
    "MBhthFNtMGCwhcwnpQfWjNrQprpvzpgQ" "RfCnWfnhCbwHgWjzBgzB"
    "PsVqDsSTshsgszpsph" "DPDvTVtTShhSZhmqSvLlQJFnQJJZnbCnlCCZ"
    "pRRdJngltnwwvTNSWqWffqgBqD" "HQGcsdrjzMDDBfGMGG"
    "FLhsdbzCLLHjhntpVnRPRvZV" "gZNwQHHNRlGvhvhGRvRb"
    "dpSSBDrzdCfcSzfrzZrfCfMbthWWWPttDthvMFWvvvPj"
    "ZdpBpZCrssBJZfSJBzBdCTcnmQwmnVVlmqTQTTQlHLwNnN"
    "ssCpTttVVVpzZDVvRpCsRtDgWBWBBFBJvvJHMBghGghrMJ"
    "lwLmNNLwSblbmSQLfhJHZgHrHhhJJhHHmW"
    "QLSdbdPqndlNlLdSLNQncpRtRTcRVTPPZRCjVCcc"
    "wzzJclzcTThvWSSCqRlQSsNN" "rDpVjpVVDpsQSRDRfQmm"
    "GLbjrLpFbgLVLLgdbjVpchcFZhvBwJvtvtJcZwRB"
    "wPgZgLVMfWVTgmTZZZftJjtfjtJCcdpjdCqc"
    "zGGbQQnQGvBBhGQvvvBBSBvQdhdqqCpdddDmJlCcDjCtJdmJ"
    "HszzHBzQBSmGSwTWgswZPWTVgZ" "GDFvzCFdrszSdNJrFfjjfqZjRfsjpqmcwZ"
    "WbbVtVnBPWMgBLMBnQQnBQHcjfjpZRwqcwMfcNTZRqqNmT"
    "WQQnVVPHtggLghWWhHnPVQbvlJhSlrvJDlFGJDdDCzGNFF"
    "dVhTBjBHtTVqWRJZRqhJZQ" "brSDTbDfcCwDzfCSbwMQnlqCRJnMgWWnZngM"
    "DFwNSrwNwbDzbFTTFtjmBpVdGpHs" "dPQfdfTzDrFDmFDBgBFj"
    "RlJRclcswJRvnwPcpjbjbbCZjFjbBmsbFZ"
    "pqncGlcRJpHGpllGHhvPhRTHrQrttVVfrdQzfrTdftfV"
    "RCzTzRMTfCfRRDzRfhSmZZlCslBbZZBVtZBZsqBL"
    "nvvJPpdcFnPcWnFnVZvBqVlZMbZBNVlV" "FpWPMdjdPhSTmwfSjD"
    "NDJjNHLLNWjcLLWCLJLZjLDtRqqtgtMqgtqnRqnSRgggtZ"
    "BwrlfFwmQwhwfPBFhsBdFmbQggCgqQVtbRSqttqMngnp"
    "llPPwsPlGshBJGWJLcHvCzNv" "rBvTmwdTSbnrvVWsWVftGfJQGT"
    "gNRLLjlPRWnFVRFDFW" "lpCpPNZqZCdvdppnSnBr" "ShRdCrJgHClZJtZDGMMz"
    "LvqVVTTNbVPLQNFTnwwMtzFZGDDwmtnM"
    "VLbNvpPvTNVqVbbNpbVPGNLPrRWrcRCWdSrCjWSHcHSdWpCh"
    "tNmZnLSZPFLDnLTmhJMWczQdhmWhWH" "bGqbgrpsCsWhcChNQfJz"
    "vwlNbppsRGRRSSSDvjTjLZjZ" "zgMZhgfBtftSZQQmLHpSWH"
    "cdqcqnrJVGjjqPVjrPnfpJmsQHQQpsSsbsSDmm" "NNnrNqNlrNcPTlBvBvgggfMv"
    "llPrrLHBHCrRRBjrHCjBdrPmvJZzZgZbmgJlZmZhMhhmvh"
    "pNDstVtNtGFNSDFScQtfwzzFJwmJhgqzbMwqZJmh"
    "fpNsptGtQcTsSTccprddCWPrWdTRBMMCMd" "TTtDVqTsTcJFgbCqmbCq"
    "NWZQnllzfBFZPBGWQGzFPFRNNgHbHrrwbNrmCbggJRHR"
    "nBZjGFjMQBMPZnjfWjstpcctttvVtcTttMpL"
    "qphVCCwnHqhnRVznFwvLtBTLDTWZtwLWWS" "JmdlsdlsjfJfrtjTcvtctDZSSB"
    "rsmfPGbrPbPJfPmrsgMrdJdlFTHhFCqhNqVHnNHHCFznhphG"
    "JsWFMJJzrhSSdFdldmmdmdQc" "qLLgCVTgLbBvqsQPVdQGcRRmQmdc"
    "bBCBgCCDbLDqTvqqjpShHfzrzMfjtHHSHsfz"
    "nvFSBFlvvgQFFBzQnlQglmRRzqwsrrMJJMrsMqrfrwzf"
    "CjZNCNhLDNbPZZLZZhwVjpcfrqRhsdJqdsshRTTdqJrJ"
    "jNNDDppjpjDWNVLCVVDpGVVPBFtlSQFWvvQvSSQHSgwQnvtB"
    "WhrQWBRWwhzgmpnSpH" "LqMVsJVvFMJLJMsfNjsTJvCgFbSmzgpSHzmngHbGPCbm"
    "jvMjjtqVjTRnwZQwBWwt" "jfTWSGSTTWhgcngQfbtJfNzztBQBzz"
    "pVVwsdppRVPLVmPsVVHsjPLPzQdzBzQFzFBNNrJZZQBzbbFF"
    "VmsqHmjHmpvGDSWDvlclSl" "PNZfTFSFfTFGCHqqmbFm"
    "WjzRWrjVgnjzplrWWjJVppgGPGsgstmPCCtcmssQqGQt"
    "pzjzJVvnzJjWvpPlnVRVrvnlTDLNNhwfdNZLfMZLwLhTNvTw"
    "QFrQZMFVrVpVszzcNTdMRCCb" "SvljGmlvLfwLhLLLHlHdNzsRthhbbRccRCRNbC"
    "LfwlDmlvGBSjjlLLgpPpFJqgQndQgZBJ" "RBjPRHdjPfqQcfhcdv"
    "SngFcJZJlcnctSlhhsQvGsDGDsDnfs"
    "pSmFgSWNJFNtStrmNtpCCjPVcbjjHbcWTBHBHL"
    "vGjqCPqNPGFGNftLwmZwfQNTLp" "hrdBCSHcCJJcCBShJswmLQpLbbQZTLLJmmZp"
    "BdHHSzrBWdzchzzCcdzHddcDVWFnjPjllGggVlWljPFFFWPM"
    "hBtZZnpbhbPZJbnhDtPnpBtpfjfNNzrrCzjFzFzFTjfjjWzJ"
    "gHllMqRSmqcqMTdggMqHlcFzRrFQWNfvrRvzQrWjWvWf"
    "gwqlgHmmdsgwlwMHZtpsbBbtDBThbBht"
    "CsDLFFLFCvczsCsJrCrJJLRgbQQgmMmPbDDQbPnMgMmg"
    "VlwNBNVhjNVNWBwWjtbRMRZzPmQnfQMPnlZP"
    "VWWSSwGTwtwWWNVwwpqJJrcJGvzqCJCqJF" "wLwSSbzwCvddlvvlSj"
    "THnQnnHttcvpQzrZRllZ" "sTntBHTnVbPbgzsbgL"
    "FwHgrHvFQQwpHhNhTBLdpNNNLd"
    "fCGqCVtszfSslCSzSGsfCssjNTqLTdmjNLBLdnTTTMTjTg"
    "DccfslfgRSSVVzlcSVtzDRVHwQZFrwwvwFWbbbRRWwrFJb"
    "CwwWwwFNRpFFpZQHtsmfqbQDTQTTqb"
    "VcjzLjGjzGjGjVjLdzqmDqHrsmsqGRrHqGqH" "RjdVlgdnljlBnSgPCpNwwMWwMM"
    "tCCtqtbPGzsSQVzQTq" "mzMmHMpRsRQTsFFV"
    "DpzDwgdMzMLppNmNpDpfgrbhLcGtPrbtrbrbhnbBcC"
    "BvsQBBBLvDQGjDvSQLTvrHprHlRpVlVllgRbRbHPqq"
    "MMMMCpfJFZZMmCzwpVPCWRtHgqWgqClgtt" "FwzmfzhFFdFcpvSDSBDThs"
    "fQrGQbFFFrHHtlHPclzzPLvc"
    "mTnwpNCCqMqjmCThpTpSvvtBczstlLznvsztsPPP"
    "mCpTNhmmpCqCmjmpTjmLCpSJQZVfFVrDVfffFFgfgJQFdbgG"
    "GmWjRBSfttcGfRcSclVVJqsTMllsgJVMVZwV" "pPFNpfNCdNzCVMTTNqVssqJN"
    "dzPfHCLLhdjjLGRnmnmr"
    "GPhPfGWgggfslffPsVPGsqJMzLQJtBprwQJJGQwLpQrw"
    "ZNdmvbDDbNvHbmZCcJQwMmzMwWWQrrwttp"
    "bvdDNdnvNbnHDdnDHHRSbnqhqhWfjWFVTVhRVjfjFTfP"
    "hTThfWNCDRfsVCDhpgzgbpPZZwbnZQns"
    "GSjGGcCBGmdjdSlGBcmZwzJzpPpJzwPwQbzgPd"
    "BGmcrcStcMMMmrSLmSMCvFVRFDhfFhhNDWWTqFqTvf" "ZmjDTTbmqQCCQQSwvhsL"
    "FGVJPmPmtRVRsCvvRLwwhC" "JgdHJgmfbjzTpTMf" "fTbsVCsssgLNrfNrgm"
    "zQvzZlRvddvpNLpZrMNNLZ"
    "HLvWFHHlFQvzHnnlnvQqhzWvstBwbGVtstjGqjjwqGGCcwGq"
    "JNpNdzzdJhNnfNGBZLqZqlhvSZSG" "QswtcmmwwmTmwwcwZSLlZLDSvSvlBZQD"
    "FsVFBbFgFsPwtVBTwgTPcsmpzdNngfzfpCzJdzCJzNCndn"
    "qcvrLBppgpWWWgLcpzPfhNDqdzqwDDzwhV"
    "MZFjFnHFMHbMntMtnwStfddPhDffDfzDfS"
    "QmnjMZnlHjmnMGFnFlMmjlZWzLgsGgcrspBBLCBcgvgBRC" "sdfWHjZfrZrSPMCQ"
    "zqtWRDDDRMbrQJPQ" "zwhwzmqwzmFpWzvFqBmFvjNHlHfgVLBgdfVfNVjLsl"
    "lRlBTlvlZfhtbGBWtFBz"
    "cqCNjjqjrNrcNjwDqNPCVrSQStSWshFhtQhbQzGzmFCG"
    "HjPPzMcdNqjcNHMqPjdpgpZflfdgnTfdlvlJ"
    "VpwQJVRtHplnnwtppHhqWBCfVdNNPqPBPWsBDq"
    "jzLZCrvvrZjZvqNffvDNDcWDWd"
    "LTrZZLFZbgTzgjZZjFClJhTHTplQpmnQlpmpQR"
    "JGJnSWLGSpWHVHwGGJHpZdwPdTTPMdTMDdlzccPMPv"
    "gqrrmtbrbgggqgBtqmRSrFgNCzvMDvlMPDdddvzBcPMMMDBd"
    "gjrmRgmtRggFtqjbhgbjrtnJJHWLHQWZZLhZsLLGHhSL" "BtTDNggLRPdWQHqggg"
    "wrVpVVlCJVGMMJVdHWSdPSqqRwSQSP" "vCVrpvvGjlphBRmZBhmBhBND"
    "lqDcZGcSSqSqbDnccSLJgHgLRfnvvJRLmvWJ"
    "FVCFPChQzVhmsFBgddRgJBfdNfJdfv" "FzCpmTQzjQCThppTSttqDccMTDGcDG"
    "QCSGBGCrCsMBTCQwMGSfvvLNNnnVLDlNVNDdVdlr"
    "ZHtPffjWbqgtmnNdvljFnFhdVv" "JRWbmgmRJtmJMGGwSBBRRRfQ"
    "LqNrCfCQQhtgnPnc" "JWBrWrVlbWgbbtcb" "VwvTBprdrVJVNLNMNNqfqpjN"
    "bjVqdHrdqVHPsPNbqHbqNdjFGRwRGlttRtMtRtFFGMLHJw"
    "cfSpZnBZWQBZJlGRJJcwGMGL" "WWBhTMgDTZghVjgjssbrbddd" ))

#+END_SRC

#+RESULTS: 2022-day3-input
: aoc22/day3input

#+CALL: 2022-day3-input
#+NAME: 2022-day3-solution
#+BEGIN_SRC emacs-lisp :session "day3"
;;; Code:

(defun aoc22/day3-part1 (input)
  "Takes INPUT list of strings and computes the priority.
  Each string is split in the middle and the common letter among
  the strings is computed.  This common letter gives a priority
  value, and these priorities need to be added for the final value
  to be computed.  Priority values are as follows:
  a through z have priorities 1 through 26
  A through Z have priorities 27 through 52.

  The final result is the sum of all priorities."

  (let ((priority 0))
    (dolist (rucksack input)
      (let* ((room (/ (length rucksack) 2))
             (left-compartment (aoc22/compartment rucksack 0 room))
             (right-compartment (aoc22/compartment rucksack room nil))
             (priority-char (car (cl-intersection left-compartment right-compartment))))
        (cl-incf priority (aoc22/compute-priority priority-char))))
    priority))

(defun aoc22/day3-part2 (rucksacks)
  "Take the RUCKSACKS and find the sticker priorities.
  Now I have to find the common character among three lines, which
  is going to be the sticker that the elves must have, and from
  this common character I will have to compute the priority."
  (let ((priority 0))
    (dolist (triad (number-sequence 0 (1- (length rucksacks)) 3))
      (let* ((first-compartment (aoc22/compartment (nth triad rucksacks) nil nil))
             (second-compartment (aoc22/compartment (nth (+ triad 1) rucksacks) nil nil))
             (third-compartment (aoc22/compartment (nth (+ triad 2) rucksacks) nil nil))
             (priority-char (car (cl-intersection first-compartment (cl-intersection
                                                                     second-compartment
                                                                     third-compartment)))))
        (cl-incf priority (aoc22/compute-priority priority-char))))
    priority))

;;; Helper functions

(defun aoc22/compute-priority (character)
  "Take a CHARACTER and return the priority of the character.
  This is defined as follows:
  a through z have priorities 1 through 26
  A through Z have priorities 27 through 52"
  (if (> character 96)
      (- character 96)
    (- character 38)))

(defun aoc22/compartment (rucksack start end)
  "Get RUCKSACK, START and END and return a compartment.
  This is basically a helper function to get the code outside the
  priority functions."
  (mapcar #'string-to-char
          (split-string (substring rucksack start end) "" t)))

;;; Results vector

(vector (aoc22/day3-part1 aoc22/day3test)
        (aoc22/day3-part1 aoc22/day3input)
        (aoc22/day3-part2 aoc22/day3test)
        (aoc22/day3-part2 aoc22/day3input))
#+END_SRC

#+RESULTS:
: [157 8401 70 2641]

#+RESULTS: 2022-day3-solution
: [157 8401 70 2641]

** day 4
#+NAME: 2022-day4-input
#+BEGIN_SRC emacs-lisp :session "day4"
(defconst aoc22/day4test '(((2 4).(6 8))
                           ((2 3).(4 5))
                           ((5 7).(7 9))
                           ((2 8).(3 7))
                           ((6 6).(4 6))
                           ((2 6).(4 8))))

(defconst aoc22/day4input '(((30 31).(2 31))
                            ((6 92).(4 5))
                            ((35 39).(42 44))
                            ((35 95).(35 95))
                            ((12 98).(99 99))
                            ((10 15).(16 94))
                            ((37 85).(84 84))
                            ((2 23).(31 56))
                            ((52 68).(51 69))
                            ((47 62).(25 52))
                            ((9 62).(61 61))
                            ((78 99).(77 99))
                            ((92 94).(11 93))
                            ((77 83).(62 76))
                            ((3 7).(29 59))
                            ((12 96).(96 97))
                            ((48 48).(12 47))
                            ((72 86).(71 86))
                            ((6 90).(90 95))
                            ((5 92).(2 4))
                            ((11 63).(1 64))
                            ((72 72).(72 82))
                            ((65 68).(68 69))
                            ((3 99).(5 99))
                            ((5 80).(5 5))
                            ((40 93).(41 93))
                            ((27 31).(25 58))
                            ((6 93).(93 93))
                            ((25 75).(75 76))
                            ((31 78).(79 79))
                            ((16 60).(33 86))
                            ((38 65).(39 97))
                            ((46 52).(45 88))
                            ((13 64).(12 80))
                            ((53 53).(35 52))
                            ((32 38).(12 30))
                            ((43 49).(42 96))
                            ((4 23).(24 77))
                            ((32 63).(27 64))
                            ((46 72).(23 73))
                            ((78 89).(56 88))
                            ((42 78).(79 79))
                            ((2 87).(2 88))
                            ((51 57).(57 58))
                            ((56 63).(55 63))
                            ((2 12).(21 62))
                            ((5 7).(6 41))
                            ((57 86).(87 92))
                            ((17 18).(17 42))
                            ((11 84).(7 10))
                            ((13 75).(4 75))
                            ((15 76).(14 14))
                            ((96 96).(2 97))
                            ((68 94).(43 95))
                            ((57 66).(67 85))
                            ((5 52).(20 88))
                            ((25 62).(25 62))
                            ((3 82).(81 83))
                            ((88 89).(85 88))
                            ((31 49).(30 68))
                            ((58 60).(59 61))
                            ((16 33).(15 16))
                            ((13 97).(13 66))
                            ((4 87).(10 86))
                            ((6 6).(7 99))
                            ((33 35).(34 98))
                            ((48 88).(82 89))
                            ((31 73).(30 74))
                            ((1 95).(2 95))
                            ((11 87).(10 86))
                            ((60 61).(21 60))
                            ((51 91).(51 52))
                            ((15 37).(16 38))
                            ((5 10).(10 32))
                            ((23 25).(24 34))
                            ((21 40).(21 40))
                            ((12 52).(13 31))
                            ((10 10).(10 94))
                            ((41 82).(4 82))
                            ((5 48).(6 34))
                            ((73 81).(42 72))
                            ((62 77).(76 82))
                            ((41 82).(56 83))
                            ((19 52).(18 39))
                            ((19 92).(54 93))
                            ((2 39).(2 40))
                            ((95 96).(3 95))
                            ((7 70).(6 92))
                            ((7 89).(6 58))
                            ((67 88).(68 80))
                            ((14 74).(73 86))
                            ((41 41).(33 40))
                            ((2 91).(8 90))
                            ((69 81).(11 80))
                            ((8 90).(9 98))
                            ((62 87).(86 86))
                            ((7 70).(39 69))
                            ((4 9).(3 12))
                            ((4 96).(11 95))
                            ((1 21).(3 22))
                            ((18 24).(92 99))
                            ((34 87).(7 90))
                            ((96 99).(82 88))
                            ((6 50).(6 34))
                            ((13 53).(12 54))
                            ((2 98).(3 95))
                            ((8 11).(17 91))
                            ((26 92).(3 56))
                            ((36 61).(46 84))
                            ((86 86).(22 85))
                            ((20 76).(76 76))
                            ((21 80).(21 30))
                            ((34 78).(55 90))
                            ((12 96).(11 95))
                            ((43 43).(15 44))
                            ((54 88).(53 89))
                            ((37 37).(50 66))
                            ((23 95).(7 11))
                            ((7 58).(21 59))
                            ((3 5).(4 68))
                            ((5 75).(8 76))
                            ((42 68).(42 67))
                            ((36 36).(36 47))
                            ((9 69).(9 92))
                            ((30 56).(36 80))
                            ((12 85).(13 84))
                            ((11 64).(65 87))
                            ((41 60).(60 61))
                            ((2 30).(31 41))
                            ((23 60).(9 35))
                            ((87 89).(15 88))
                            ((4 97).(96 98))
                            ((9 92).(9 91))
                            ((40 66).(66 66))
                            ((39 95).(69 96))
                            ((48 87).(23 47))
                            ((5 96).(6 95))
                            ((18 66).(19 65))
                            ((5 38).(39 61))
                            ((12 92).(93 93))
                            ((9 97).(10 97))
                            ((16 51).(50 67))
                            ((3 14).(14 28))
                            ((7 7).(8 88))
                            ((6 45).(5 36))
                            ((58 58).(40 58))
                            ((8 56).(7 56))
                            ((5 15).(6 14))
                            ((97 97).(7 96))
                            ((26 70).(27 94))
                            ((20 21).(20 91))
                            ((3 16).(3 13))
                            ((9 10).(9 92))
                            ((16 81).(67 94))
                            ((72 88).(6 73))
                            ((4 88).(3 68))
                            ((25 53).(24 54))
                            ((63 75).(63 74))
                            ((31 31).(31 56))
                            ((1 84).(1 83))
                            ((41 89).(40 67))
                            ((4 53).(5 54))
                            ((13 83).(13 14))
                            ((11 87).(11 86))
                            ((4 63).(4 63))
                            ((9 96).(8 97))
                            ((2 74).(1 88))
                            ((40 83).(39 83))
                            ((46 71).(45 75))
                            ((4 74).(74 75))
                            ((99 99).(72 98))
                            ((33 51).(52 82))
                            ((22 69).(22 23))
                            ((35 36).(36 91))
                            ((8 97).(97 98))
                            ((18 20).(19 94))
                            ((6 16).(7 17))
                            ((35 36).(36 97))
                            ((4 78).(79 79))
                            ((14 69).(4 14))
                            ((50 64).(19 51))
                            ((10 31).(15 17))
                            ((52 74).(74 74))
                            ((42 91).(90 91))
                            ((35 69).(10 70))
                            ((1 3).(4 4))
                            ((37 66).(67 67))
                            ((6 92).(73 74))
                            ((21 96).(21 97))
                            ((6 37).(6 68))
                            ((25 78).(79 92))
                            ((78 88).(65 75))
                            ((14 99).(8 8))
                            ((39 66).(54 67))
                            ((33 80).(79 91))
                            ((15 83).(84 84))
                            ((51 51).(10 50))
                            ((72 80).(72 81))
                            ((4 92).(2 24))
                            ((33 93).(92 94))
                            ((4 10).(4 68))
                            ((8 94).(7 96))
                            ((1 39).(38 69))
                            ((6 36).(36 37))
                            ((86 86).(31 85))
                            ((77 94).(76 96))
                            ((8 75).(17 76))
                            ((7 93).(7 45))
                            ((8 61).(40 70))
                            ((17 29).(32 94))
                            ((26 26).(12 25))
                            ((14 94).(10 12))
                            ((29 42).(32 39))
                            ((2 91).(2 3))
                            ((12 85).(28 86))
                            ((57 70).(71 90))
                            ((9 16).(17 87))
                            ((17 55).(18 55))
                            ((18 98).(19 19))
                            ((88 88).(22 87))
                            ((5 93).(4 92))
                            ((75 76).(76 84))
                            ((5 6).(6 41))
                            ((42 94).(36 41))
                            ((52 66).(1 62))
                            ((5 82).(4 4))
                            ((1 87).(3 88))
                            ((47 58).(56 61))
                            ((7 57).(7 97))
                            ((39 93).(33 93))
                            ((31 48).(20 32))
                            ((18 81).(19 82))
                            ((16 77).(17 78))
                            ((2 2).(4 43))
                            ((22 23).(23 93))
                            ((10 11).(15 68))
                            ((89 95).(15 88))
                            ((19 69).(18 18))
                            ((85 98).(34 84))
                            ((47 73).(29 52))
                            ((56 56).(23 55))
                            ((2 97).(2 94))
                            ((34 64).(17 63))
                            ((46 46).(47 75))
                            ((15 90).(91 91))
                            ((63 63).(35 62))
                            ((46 56).(52 89))
                            ((82 90).(82 90))
                            ((17 23).(5 7))
                            ((7 79).(8 79))
                            ((40 76).(39 71))
                            ((81 82).(11 99))
                            ((31 41).(37 44))
                            ((97 98).(1 98))
                            ((13 92).(11 16))
                            ((63 63).(3 62))
                            ((10 23).(27 46))
                            ((18 99).(19 80))
                            ((43 65).(55 56))
                            ((14 14).(14 20))
                            ((14 75).(15 74))
                            ((24 75).(12 45))
                            ((32 32).(33 83))
                            ((4 92).(2 3))
                            ((35 50).(34 72))
                            ((11 90).(91 91))
                            ((62 84).(78 97))
                            ((64 64).(24 65))
                            ((13 93).(12 94))
                            ((70 89).(58 88))
                            ((35 44).(36 43))
                            ((57 90).(91 91))
                            ((19 20).(20 96))
                            ((33 96).(26 87))
                            ((9 61).(10 62))
                            ((2 81).(1 3))
                            ((69 98).(69 98))
                            ((60 66).(64 97))
                            ((8 8).(4 7))
                            ((33 76).(32 77))
                            ((35 96).(34 86))
                            ((87 92).(66 86))
                            ((5 39).(8 67))
                            ((27 78).(79 80))
                            ((5 98).(1 1))
                            ((6 79).(5 95))
                            ((65 87).(88 88))
                            ((50 98).(49 49))
                            ((55 58).(54 60))
                            ((13 97).(12 96))
                            ((74 74).(1 73))
                            ((12 61).(64 74))
                            ((10 98).(10 11))
                            ((68 70).(17 69))
                            ((41 58).(13 65))
                            ((7 77).(6 77))
                            ((50 95).(41 49))
                            ((4 68).(2 4))
                            ((14 54).(14 40))
                            ((59 93).(60 82))
                            ((21 95).(26 95))
                            ((41 81).(41 62))
                            ((41 89).(40 88))
                            ((21 39).(22 40))
                            ((30 94).(29 88))
                            ((1 93).(1 93))
                            ((5 78).(4 79))
                            ((15 86).(85 87))
                            ((89 90).(17 89))
                            ((47 85).(48 85))
                            ((84 84).(83 85))
                            ((6 98).(6 6))
                            ((3 92).(3 93))
                            ((9 9).(8 60))
                            ((36 90).(6 35))
                            ((57 61).(56 58))
                            ((4 92).(3 93))
                            ((7 69).(8 69))
                            ((78 78).(4 79))
                            ((52 93).(53 93))
                            ((30 90).(30 91))
                            ((58 78).(77 79))
                            ((21 41).(42 53))
                            ((16 37).(6 38))
                            ((2 77).(3 77))
                            ((6 55).(17 69))
                            ((36 73).(37 71))
                            ((93 94).(26 93))
                            ((22 79).(22 79))
                            ((11 92).(91 93))
                            ((1 62).(3 65))
                            ((9 65).(8 64))
                            ((11 32).(7 33))
                            ((5 94).(2 5))
                            ((80 82).(80 81))
                            ((46 77).(45 76))
                            ((2 98).(1 99))
                            ((2 4).(6 68))
                            ((56 83).(55 82))
                            ((12 14).(13 98))
                            ((78 90).(5 80))
                            ((3 69).(2 2))
                            ((83 83).(76 82))
                            ((3 99).(1 1))
                            ((28 72).(28 50))
                            ((57 67).(32 54))
                            ((4 99).(7 98))
                            ((18 18).(19 48))
                            ((79 85).(84 84))
                            ((83 89).(81 87))
                            ((31 89).(30 87))
                            ((49 72).(49 71))
                            ((28 29).(28 51))
                            ((48 97).(1 47))
                            ((13 45).(8 12))
                            ((24 75).(25 75))
                            ((63 89).(76 86))
                            ((16 23).(15 16))
                            ((25 49).(26 48))
                            ((17 94).(16 88))
                            ((6 95).(7 96))
                            ((87 90).(86 89))
                            ((11 93).(3 95))
                            ((6 66).(5 65))
                            ((97 99).(39 98))
                            ((23 66).(24 65))
                            ((54 56).(55 70))
                            ((92 97).(26 90))
                            ((7 86).(7 87))
                            ((60 78).(77 79))
                            ((90 95).(71 94))
                            ((32 87).(33 87))
                            ((13 13).(14 72))
                            ((12 86).(6 87))
                            ((24 44).(45 75))
                            ((5 96).(5 97))
                            ((2 83).(7 79))
                            ((95 97).(1 90))
                            ((72 80).(73 75))
                            ((11 85).(12 86))
                            ((7 50).(8 8))
                            ((35 99).(55 79))
                            ((56 98).(57 99))
                            ((6 87).(7 87))
                            ((28 72).(27 71))
                            ((20 77).(78 83))
                            ((8 67).(68 83))
                            ((10 68).(9 9))
                            ((35 63).(35 64))
                            ((90 90).(90 90))
                            ((5 97).(1 99))
                            ((10 93).(9 19))
                            ((6 90).(4 77))
                            ((46 75).(80 97))
                            ((9 77).(10 82))
                            ((73 88).(74 81))
                            ((43 65).(43 44))
                            ((66 82).(66 81))
                            ((62 63).(63 77))
                            ((35 76).(11 77))
                            ((22 93).(89 90))
                            ((3 96).(2 3))
                            ((11 29).(2 33))
                            ((75 82).(62 81))
                            ((46 47).(46 53))
                            ((9 99).(8 98))
                            ((32 93).(33 87))
                            ((47 51).(52 60))
                            ((18 83).(84 84))
                            ((31 70).(31 69))
                            ((26 93).(19 92))
                            ((93 93).(4 92))
                            ((2 14).(4 35))
                            ((1 98).(36 99))
                            ((7 83).(82 96))
                            ((95 95).(32 95))
                            ((34 39).(9 38))
                            ((2 63).(62 93))
                            ((24 98).(99 99))
                            ((26 50).(89 93))
                            ((82 97).(35 81))
                            ((22 33).(16 33))
                            ((1 5).(11 66))
                            ((9 63).(9 63))
                            ((36 36).(36 77))
                            ((5 98).(6 99))
                            ((22 93).(50 92))
                            ((89 92).(89 93))
                            ((48 90).(91 91))
                            ((6 88).(7 89))
                            ((27 38).(38 84))
                            ((9 87).(11 40))
                            ((24 83).(23 82))
                            ((1 69).(1 68))
                            ((16 67).(62 65))
                            ((13 15).(1 85))
                            ((41 65).(40 42))
                            ((19 77).(20 77))
                            ((44 93).(45 93))
                            ((27 94).(94 97))
                            ((12 97).(12 96))
                            ((9 38).(8 48))
                            ((22 49).(6 49))
                            ((12 18).(13 52))
                            ((14 52).(13 14))
                            ((12 51).(13 52))
                            ((10 36).(37 37))
                            ((14 72).(13 15))
                            ((2 99).(72 81))
                            ((21 34).(22 22))
                            ((86 86).(60 85))
                            ((20 36).(20 20))
                            ((10 96).(11 96))
                            ((14 24).(15 23))
                            ((8 96).(8 95))
                            ((16 22).(22 23))
                            ((32 90).(33 97))
                            ((7 31).(32 67))
                            ((35 68).(22 77))
                            ((3 69).(5 69))
                            ((13 62).(12 61))
                            ((26 32).(27 32))
                            ((68 77).(67 76))
                            ((5 99).(6 98))
                            ((2 56).(8 65))
                            ((96 99).(11 67))
                            ((3 25).(15 24))
                            ((25 91).(84 90))
                            ((9 39).(10 38))
                            ((24 94).(23 24))
                            ((78 80).(29 79))
                            ((4 47).(5 85))
                            ((39 81).(81 82))
                            ((33 33).(13 32))
                            ((31 69).(32 83))
                            ((19 95).(17 21))
                            ((75 75).(74 74))
                            ((14 89).(15 98))
                            ((4 99).(6 98))
                            ((60 90).(59 66))
                            ((50 72).(46 73))
                            ((26 84).(25 49))
                            ((9 77).(8 77))
                            ((48 99).(49 94))
                            ((91 95).(10 90))
                            ((7 63).(24 64))
                            ((79 85).(11 80))
                            ((98 99).(20 82))
                            ((2 98).(1 97))
                            ((56 68).(54 67))
                            ((30 30).(31 87))
                            ((89 96).(58 88))
                            ((6 56).(3 5))
                            ((12 49).(15 62))
                            ((26 33).(26 66))
                            ((18 18).(19 98))
                            ((13 27).(14 26))
                            ((12 15).(3 19))
                            ((5 98).(46 98))
                            ((4 89).(3 90))
                            ((5 15).(5 19))
                            ((85 88).(45 87))
                            ((94 97).(97 98))
                            ((24 34).(34 77))
                            ((55 56).(2 55))
                            ((6 86).(7 87))
                            ((42 50).(43 50))
                            ((16 57).(17 58))
                            ((3 22).(2 3))
                            ((56 57).(56 96))
                            ((5 91).(82 92))
                            ((30 53).(53 54))
                            ((12 25).(13 47))
                            ((72 90).(90 91))
                            ((15 49).(49 89))
                            ((5 81).(6 37))
                            ((57 58).(58 82))
                            ((11 65).(2 10))
                            ((41 97).(42 96))
                            ((55 71).(54 70))
                            ((4 81).(1 98))
                            ((2 65).(1 49))
                            ((7 45).(6 45))
                            ((98 98).(8 98))
                            ((8 93).(41 92))
                            ((1 90).(2 98))
                            ((14 93).(43 92))
                            ((66 97).(98 98))
                            ((36 87).(87 88))
                            ((2 62).(4 61))
                            ((22 76).(23 76))
                            ((49 54).(50 55))
                            ((50 53).(52 94))
                            ((45 95).(75 96))
                            ((22 77).(78 78))
                            ((71 73).(72 86))
                            ((9 83).(10 82))
                            ((1 56).(53 54))
                            ((71 71).(63 70))
                            ((7 73).(7 8))
                            ((6 9).(6 66))
                            ((10 98).(97 98))
                            ((4 50).(50 50))
                            ((7 95).(7 91))
                            ((6 7).(7 96))
                            ((73 73).(1 73))
                            ((43 68).(44 77))
                            ((26 30).(25 31))
                            ((92 92).(9 92))
                            ((88 89).(1 88))
                            ((12 97).(96 98))
                            ((91 91).(59 90))
                            ((4 9).(3 16))
                            ((16 97).(96 96))
                            ((50 89).(49 90))
                            ((94 96).(84 95))
                            ((55 71).(70 72))
                            ((16 90).(5 16))
                            ((1 96).(3 95))
                            ((5 35).(7 34))
                            ((16 72).(16 54))
                            ((3 99).(1 2))
                            ((8 87).(10 88))
                            ((10 98).(10 98))
                            ((8 67).(4 69))
                            ((23 79).(72 72))
                            ((17 74).(17 75))
                            ((57 77).(77 78))
                            ((74 84).(85 98))
                            ((22 64).(30 65))
                            ((3 73).(1 72))
                            ((1 78).(31 91))
                            ((4 93).(4 94))
                            ((51 88).(51 79))
                            ((5 19).(19 99))
                            ((68 68).(31 67))
                            ((2 98).(3 3))
                            ((48 63).(47 64))
                            ((67 71).(72 73))
                            ((9 42).(9 54))
                            ((2 50).(2 39))
                            ((53 53).(3 54))
                            ((36 37).(36 69))
                            ((63 74).(64 73))
                            ((14 65).(13 65))
                            ((41 94).(98 98))
                            ((1 60).(6 99))
                            ((95 98).(80 94))
                            ((71 74).(32 78))
                            ((31 31).(31 31))
                            ((6 7).(6 33))
                            ((5 95).(96 98))
                            ((5 93).(6 94))
                            ((52 88).(51 89))
                            ((55 76).(55 77))
                            ((4 98).(3 96))
                            ((59 89).(58 94))
                            ((10 88).(9 86))
                            ((13 97).(13 96))
                            ((18 97).(10 16))
                            ((7 98).(4 97))
                            ((84 85).(14 84))
                            ((26 88).(76 87))
                            ((52 72).(71 81))
                            ((38 52).(39 52))
                            ((22 88).(1 89))
                            ((7 97).(2 7))
                            ((4 25).(3 25))
                            ((43 73).(42 74))
                            ((26 26).(25 47))
                            ((34 84).(40 84))
                            ((8 69).(7 68))
                            ((2 52).(1 85))
                            ((52 60).(52 61))
                            ((38 71).(37 70))
                            ((28 86).(27 85))
                            ((99 99).(7 98))
                            ((45 67).(8 81))
                            ((7 93).(7 58))
                            ((37 56).(28 56))
                            ((29 99).(66 98))
                            ((78 98).(7 97))
                            ((4 72).(3 77))
                            ((1 3).(2 73))
                            ((1 14).(2 35))
                            ((12 13).(12 95))
                            ((40 84).(84 84))
                            ((12 56).(28 47))
                            ((3 96).(1 39))
                            ((58 74).(74 74))
                            ((24 32).(24 32))
                            ((11 91).(5 10))
                            ((41 69).(36 97))
                            ((9 92).(8 59))
                            ((40 51).(39 52))
                            ((97 99).(16 96))
                            ((34 96).(33 69))
                            ((68 86).(30 87))
                            ((45 96).(44 98))
                            ((12 89).(6 12))
                            ((5 81).(32 89))
                            ((5 8).(6 9))
                            ((4 42).(1 2))
                            ((32 42).(79 96))
                            ((5 96).(4 95))
                            ((54 62).(12 62))
                            ((30 86).(86 86))
                            ((50 58).(58 58))
                            ((41 61).(40 62))
                            ((1 99).(2 99))
                            ((21 52).(20 20))
                            ((17 69).(1 17))
                            ((3 97).(2 96))
                            ((35 37).(36 57))
                            ((8 32).(9 11))
                            ((3 4).(4 99))
                            ((92 96).(72 92))
                            ((2 3).(2 90))
                            ((34 40).(41 69))
                            ((81 98).(65 80))
                            ((12 57).(58 58))
                            ((39 40).(14 39))
                            ((47 77).(78 93))
                            ((5 5).(6 91))
                            ((24 87).(86 93))
                            ((31 80).(30 80))
                            ((32 82).(33 55))
                            ((61 75).(62 74))
                            ((16 98).(16 99))
                            ((19 21).(22 86))
                            ((54 54).(16 53))
                            ((40 74).(21 28))
                            ((20 28).(28 76))
                            ((94 96).(47 71))
                            ((25 74).(74 75))
                            ((39 81).(3 67))
                            ((5 97).(2 52))
                            ((21 63).(62 62))
                            ((7 53).(6 84))
                            ((60 88).(59 60))
                            ((23 61).(24 61))
                            ((76 93).(77 94))
                            ((17 30).(30 86))
                            ((10 23).(9 77))
                            ((6 90).(5 96))
                            ((38 69).(37 39))
                            ((1 3).(4 94))
                            ((73 74).(3 74))
                            ((70 83).(41 84))
                            ((72 79).(78 83))
                            ((56 76).(15 67))
                            ((92 92).(6 93))
                            ((2 90).(89 89))
                            ((19 19).(20 90))
                            ((18 79).(17 80))
                            ((11 11).(2 16))
                            ((95 95).(57 95))
                            ((51 93).(52 86))
                            ((47 52).(53 96))
                            ((1 5).(13 43))
                            ((44 63).(62 64))
                            ((43 97).(42 42))
                            ((46 54).(45 53))
                            ((7 61).(8 21))
                            ((18 79).(41 80))
                            ((54 56).(28 55))
                            ((7 54).(11 54))
                            ((12 61).(62 62))
                            ((80 81).(80 94))
                            ((38 39).(38 76))
                            ((8 94).(26 83))
                            ((3 66).(2 4))
                            ((6 27).(7 26))
                            ((2 96).(71 86))
                            ((67 99).(66 98))
                            ((28 73).(27 90))
                            ((2 93).(1 93))
                            ((80 95).(72 94))
                            ((88 90).(24 89))
                            ((93 93).(22 93))
                            ((36 86).(51 92))
                            ((25 63).(24 63))
                            ((90 91).(12 84))
                            ((9 46).(10 46))
                            ((31 31).(17 31))
                            ((51 52).(49 51))
                            ((14 18).(2 12))
                            ((72 73).(64 73))
                            ((6 82).(10 81))
                            ((58 84).(15 15))
                            ((51 78).(52 68))
                            ((54 56).(60 68))
                            ((78 79).(6 78))
                            ((96 96).(95 96))
                            ((28 81).(43 82))
                            ((5 95).(5 5))
                            ((2 17).(1 99))
                            ((10 94).(9 61))
                            ((85 87).(3 91))
                            ((2 73).(14 72))
                            ((95 95).(21 94))
                            ((17 57).(37 81))
                            ((95 95).(4 95))
                            ((28 84).(12 93))
                            ((4 98).(1 1))
                            ((96 97).(7 97))
                            ((60 99).(61 99))
                            ((97 97).(7 98))
                            ((73 74).(5 74))
                            ((59 94).(60 60))
                            ((83 85).(84 91))
                            ((2 5).(5 40))
                            ((29 79).(28 78))
                            ((37 67).(26 54))
                            ((28 39).(10 41))
                            ((84 84).(85 85))
                            ((19 69).(12 68))
                            ((29 31).(30 32))
                            ((58 77).(57 59))
                            ((17 25).(24 26))
                            ((37 80).(36 81))
                            ((16 84).(16 97))
                            ((3 97).(1 96))
                            ((7 63).(7 64))
                            ((7 54).(6 54))
                            ((14 47).(13 46))
                            ((13 64).(55 67))
                            ((19 36).(35 35))
                            ((67 80).(67 79))
                            ((8 66).(5 35))
                            ((56 93).(44 55))
                            ((6 74).(15 90))
                            ((64 85).(21 71))
                            ((22 22).(23 27))
                            ((16 87).(87 88))
                            ((80 82).(81 84))
                            ((3 89).(2 89))
                            ((43 95).(16 96))
                            ((67 69).(3 88))
                            ((8 82).(4 95))
                            ((28 93).(28 93))
                            ((23 62).(22 24))
                            ((73 98).(73 73))
                            ((84 92).(91 91))
                            ((55 81).(54 55))
                            ((52 60).(40 59))
                            ((19 20).(20 95))
                            ((30 90).(29 90))
                            ((57 72).(23 71))
                            ((71 74).(74 75))
                            ((9 88).(38 92))
                            ((44 89).(43 90))
                            ((17 80).(79 85))
                            ((60 67).(59 67))
                            ((44 51).(31 84))
                            ((79 80).(15 79))
                            ((79 84).(68 85))
                            ((97 98).(30 96))
                            ((22 94).(23 95))
                            ((95 95).(1 95))
                            ((11 98).(11 99))
                            ((49 92).(82 91))
                            ((43 52).(44 51))
                            ((76 86).(51 81))
                            ((23 68).(32 69))
                            ((22 40).(22 23))
                            ((65 94).(81 94))
                            ((36 89).(88 90))
                            ((7 96).(4 97))
                            ((6 6).(9 19))
                            ((82 85).(33 85))
                            ((65 67).(66 93))
                            ((94 95).(67 89))
                            ((85 85).(77 84))
                            ((60 89).(83 90))
                            ((6 21).(2 75))
                            ((20 91).(16 19))
                            ((95 97).(51 94))
                            ((21 82).(8 8))
                            ((16 19).(20 83))
                            ((96 97).(8 81))
                            ((34 90).(5 94))
                            ((94 95).(70 94))
                            ((27 80).(27 81))
                            ((12 83).(13 13))
                            ((91 94).(8 92))
                            ((6 80).(5 79))
                            ((12 21).(12 20))
                            ((29 64).(28 63))
                            ((32 72).(23 71))
                            ((54 56).(54 57))
                            ((68 69).(11 68))
                            ((5 99).(4 95))
                            ((34 55).(35 56))
                            ((42 71).(42 72))
                            ((21 94).(93 96))
                            ((8 8).(8 96))
                            ((26 99).(25 97))
                            ((30 75).(2 29))
                            ((27 58).(28 52))
                            ((29 75).(28 76))
                            ((3 77).(3 78))
                            ((11 35).(11 36))
                            ((26 43).(38 41))
                            ((51 56).(33 57))
                            ((19 21).(20 98))
                            ((48 93).(47 48))
                            ((2 81).(31 75))
                            ((17 75).(16 16))
                            ((57 82).(48 48))
                            ((24 74).(25 65))
                            ((20 20).(21 21))
                            ((78 96).(77 79))
                            ((4 97).(4 98))
                            ((4 30).(19 31))
                            ((11 97).(10 89))
                            ((21 64).(1 64))
                            ((31 99).(16 98))
                            ((38 47).(40 40))
                            ((27 95).(12 17))
                            ((51 93).(51 92))
                            ((90 91).(6 91))
                            ((26 27).(16 26))
                            ((3 78).(1 1))
                            ((51 51).(52 92))
                            ((38 42).(32 36))
                            ((36 46).(10 67))
                            ((7 70).(6 71))
                            ((52 81).(51 81))
                            ((74 74).(75 84))
                            ((28 64).(29 29))
                            ((15 47).(15 16))
                            ((4 94).(95 95))
                            ((15 65).(15 97))
                            ((98 98).(1 99))
                            ((41 97).(42 98))
                            ((84 94).(90 95))
                            ((15 82).(83 83))
                            ((3 10).(10 73))
                            ((90 97).(5 96))
                            ((29 81).(29 45))
                            ((64 93).(5 99))
                            ((26 95).(25 26))
                            ((37 49).(38 50))
                            ((32 96).(10 33))
                            ((28 30).(28 31))
                            ((18 75).(19 75))
                            ((49 51).(17 50))
                            ((16 46).(15 17))
                            ((3 4).(3 95))
                            ((7 30).(30 31))
                            ((9 96).(9 95))
                            ((22 38).(18 39))
                            ((29 32).(50 89))
                            ((98 99).(1 99))
                            ((81 97).(9 83))
                            ((32 38).(64 69))
                            ((35 52).(51 53))
                            ((17 96).(17 98))
                            ((14 97).(98 98))
                            ((10 66).(11 65))
                            ((4 91).(4 91))
                            ((52 76).(73 74))
                            ((17 17).(16 17))
                            ((6 73).(7 74))
                            ((9 90).(9 89))
                            ((42 74).(42 84))
                            ((68 77).(69 77))
                            ((42 79).(40 51))
                            ((15 89).(15 90))
                            ((4 86).(3 3))
                            ((43 46).(40 46))
                            ((3 97).(2 98))
                            ((13 26).(12 97))
                            ((91 93).(15 92))
                            ((4 89).(4 99))
                            ((41 66).(14 40))
                            ((30 71).(31 71))
                            ((57 61).(38 60))
                            ((36 99).(35 98))
                            ((36 91).(20 36))
                            ((80 81).(16 80))
                            ((1 99).(4 96))
                            ((24 80).(25 80))
                            ((1 98).(2 99))
                            ((17 43).(17 44))
                            ((4 99).(2 2))
                            ((11 46).(11 45))
                            ((70 92).(69 86))
                            ((15 15).(3 14))
                            ((5 80).(7 81))
                            ((33 91).(52 60))
                            ((62 68).(4 62))
                            ((23 33).(22 33))
                            ((21 71).(7 72))
                            ((41 63).(40 62))
                            ((19 20).(20 26))
                            ((9 87).(8 86))
                            ((90 90).(91 96))
                            ((31 32).(50 68))
                            ((21 35).(31 85))
                            ((14 98).(15 15))
                            ((95 96).(46 95))
                            ((9 64).(10 21))
                            ((92 98).(30 66))
                            ((66 86).(79 95))
                            ((1 71).(34 71))
                            ((31 92).(91 93))
                            ((21 25).(8 17))
                            ((17 49).(1 69))
                            ((3 88).(2 98))
                            ((54 86).(53 55))
                            ((29 79).(95 96))
                            ((4 25).(3 25))
                            ((2 44).(3 61))
                            ((34 85).(33 35))
                            ((8 10).(8 11))
                            ((95 97).(45 98))
                            ((63 92).(62 93))
                            ((61 79).(60 80))
                            ((36 85).(20 36))
                            ((45 71).(10 53))
                            ((56 85).(52 84))
                            ((40 86).(41 86))
                            ((6 83).(4 78))
                            ((18 53).(19 54))
                            ((69 73).(69 72))
                            ((3 76).(75 75))
                            ((28 88).(19 60))
                            ((3 85).(10 85))
                            ((36 69).(35 69))
                            ((58 82).(57 82))
                            ((16 98).(15 99))
                            ((71 84).(84 85))
                            ((7 68).(42 67))
                            ((3 69).(70 70))
                            ((2 10).(7 11))
                            ((59 91).(27 91))
                            ((4 99).(5 94))
                            ((71 84).(30 70))
                            ((28 28).(12 27))
                            ((52 88).(14 26))
                            ((91 91).(42 90))
                            ((6 56).(5 42))
                            ((15 37).(17 53))
                            ((10 86).(86 87))
                            ((11 91).(4 92))
                            ((46 46).(19 45))
                            ((37 92).(37 96))
                            ((58 60).(35 59))
                            ((6 33).(5 33))
                            ((34 34).(13 34))
                            ((3 62).(1 1))
                            ((33 64).(49 61))
                            ((37 45).(36 52))
                            ((13 96).(8 82))
                            ((3 99).(2 3))
                            ((41 66).(27 67))
                            ((85 87).(20 86))
                            ((9 26).(8 25))))
#+END_SRC

#+RESULTS: 2022-day4-input
: aoc22/day4input

#+NAME: 2022-day4-solution
#+BEGIN_SRC emacs-lisp :session "day4"
;;; Code:

(defun aoc22/day4-part1 (input)
  "Takes INPUT a list of list pairs and counts which pair contain each other.
In order for a pair to be eligible for inclusion, one of them
should include the other in whole.  The comparison of pair edges
should include equality also."
  (let ((pairs 0))
    (dolist (pair input)
      (let ((left (car pair))
            (right (cdr pair)))
        (cond
         ((= (car left) (car right))
          (cl-incf pairs))
         ((= (cadr left) (cadr right))
          (cl-incf pairs))
         ((< (car left) (car right))
          (if (> (cadr left) (cadr right))
              (cl-incf pairs)))
         (t
          (if (< (cadr left) (cadr right))
              (cl-incf pairs))))))
    pairs))

(defun aoc22/day4-part2 (input)
  "Takes INPUT and solve the puzzle.
To be replaced with actual docstring."
  (let ((pairs 0))
    (dolist (pair input)
      (let ((left (car pair))
            (right (cdr pair)))
        (if (not (or (< (cadr left) (car right)) (< (cadr right) (car left))))
            (cl-incf pairs))))
    pairs))

;;; Helper functions:

;;; Results vector

(vector (aoc22/day4-part1 aoc22/day4test)
        (aoc22/day4-part1 aoc22/day4input)
        (aoc22/day4-part2 aoc22/day4test)
        (aoc22/day4-part2 aoc22/day4input))
#+END_SRC

#+RESULTS: 2022-day4-solution
: [2 444 4 801]
** day 5
#+NAME: 2022-day5-input
#+BEGIN_SRC emacs-lisp :session "day5"
(defconst aoc22/day5test '((N Z)
                           (D C M)
                           (P)))

(defconst aoc22/day5test-inst '((1 2 1)
                                (3 1 3)
                                (2 2 1)
                                (1 1 2)))

(defconst aoc22/day5input '((F G V R J L D)
                            (S J H V B M P T)
                            (C P G D F M H V)
                            (Q G N P D M)
                            (F N H L J)
                            (Z T G D Q V F N)
                            (L B D F)
                            (N D V S B J M)
                            (D L G)))

(defconst aoc22/day5input-inst '((3 4 6)
                                 (1 5 8)
                                 (3 7 3)
                                 (4 5 7)
                                 (1 7 8)
                                 (3 9 4)
                                 (2 8 2)
                                 (4 4 5)
                                 (2 5 1)
                                 (2 5 6)
                                 (7 8 1)
                                 (9 3 9)
                                 (11 6 5)
                                 (2 6 7)
                                 (12 1 4)
                                 (10 2 9)
                                 (2 3 9)
                                 (1 7 5)
                                 (4 7 6)
                                 (2 6 1)
                                 (5 1 6)
                                 (10 9 1)
                                 (9 9 8)
                                 (13 4 3)
                                 (7 6 2)
                                 (2 8 5)
                                 (9 3 9)
                                 (8 9 8)
                                 (4 8 4)
                                 (1 7 5)
                                 (3 9 1)
                                 (7 2 1)
                                 (1 3 1)
                                 (1 3 6)
                                 (1 6 1)
                                 (2 3 6)
                                 (5 4 1)
                                 (1 6 1)
                                 (3 8 7)
                                 (8 8 4)
                                 (3 5 4)
                                 (1 6 7)
                                 (1 5 8)
                                 (4 5 2)
                                 (7 5 8)
                                 (3 2 7)
                                 (7 4 8)
                                 (11 8 4)
                                 (15 4 1)
                                 (25 1 6)
                                 (4 8 7)
                                 (1 2 4)
                                 (11 6 4)
                                 (12 6 3)
                                 (1 1 9)
                                 (1 9 8)
                                 (16 1 3)
                                 (1 8 7)
                                 (12 4 6)
                                 (9 6 5)
                                 (3 6 5)
                                 (6 7 5)
                                 (3 3 5)
                                 (2 6 3)
                                 (11 5 8)
                                 (2 8 3)
                                 (2 1 4)
                                 (7 3 1)
                                 (2 4 6)
                                 (2 6 2)
                                 (5 7 3)
                                 (1 1 6)
                                 (1 1 8)
                                 (2 2 5)
                                 (1 7 4)
                                 (1 1 2)
                                 (10 3 5)
                                 (11 3 6)
                                 (1 4 9)
                                 (1 9 4)
                                 (1 4 2)
                                 (2 5 9)
                                 (2 2 8)
                                 (2 1 6)
                                 (2 1 2)
                                 (2 3 6)
                                 (3 8 1)
                                 (3 1 4)
                                 (7 8 3)
                                 (2 9 5)
                                 (2 4 9)
                                 (7 5 6)
                                 (2 8 6)
                                 (1 4 8)
                                 (2 2 4)
                                 (21 6 3)
                                 (10 5 7)
                                 (7 7 6)
                                 (1 9 3)
                                 (1 4 9)
                                 (1 9 4)
                                 (1 8 4)
                                 (8 6 4)
                                 (1 4 5)
                                 (1 5 8)
                                 (4 3 6)
                                 (1 8 2)
                                 (1 4 2)
                                 (2 7 3)
                                 (2 2 7)
                                 (22 3 5)
                                 (4 6 2)
                                 (2 6 9)
                                 (7 3 9)
                                 (6 9 1)
                                 (18 5 3)
                                 (2 5 4)
                                 (20 3 5)
                                 (3 7 3)
                                 (5 1 2)
                                 (11 5 7)
                                 (1 1 7)
                                 (3 9 3)
                                 (16 5 8)
                                 (7 8 7)
                                 (1 9 2)
                                 (8 2 3)
                                 (2 2 4)
                                 (3 3 1)
                                 (9 3 8)
                                 (1 6 3)
                                 (9 7 3)
                                 (3 1 8)
                                 (1 7 9)
                                 (1 9 4)
                                 (1 7 5)
                                 (10 4 5)
                                 (2 4 2)
                                 (19 8 5)
                                 (1 8 3)
                                 (4 3 5)
                                 (2 4 8)
                                 (4 7 8)
                                 (4 3 9)
                                 (4 7 6)
                                 (2 2 5)
                                 (2 3 2)
                                 (6 8 7)
                                 (1 8 4)
                                 (2 6 4)
                                 (3 4 8)
                                 (3 9 2)
                                 (4 7 8)
                                 (28 5 8)
                                 (16 8 4)
                                 (11 8 4)
                                 (3 3 4)
                                 (7 5 8)
                                 (13 8 7)
                                 (1 5 6)
                                 (1 6 7)
                                 (1 9 2)
                                 (2 6 2)
                                 (12 4 9)
                                 (4 4 1)
                                 (2 9 8)
                                 (4 8 3)
                                 (3 4 5)
                                 (4 4 1)
                                 (4 4 7)
                                 (3 7 9)
                                 (5 9 7)
                                 (7 2 3)
                                 (1 5 7)
                                 (8 1 5)
                                 (1 2 4)
                                 (11 3 1)
                                 (10 5 3)
                                 (3 9 1)
                                 (3 9 6)
                                 (5 1 6)
                                 (7 6 9)
                                 (8 9 7)
                                 (9 3 4)
                                 (1 6 9)
                                 (8 7 1)
                                 (9 4 2)
                                 (2 1 6)
                                 (3 2 6)
                                 (4 4 6)
                                 (2 9 8)
                                 (2 1 2)
                                 (1 3 8)
                                 (2 8 4)
                                 (1 6 8)
                                 (11 1 6)
                                 (1 1 5)
                                 (3 2 9)
                                 (2 9 3)
                                 (1 1 7)
                                 (2 4 9)
                                 (4 2 9)
                                 (2 8 5)
                                 (10 6 1)
                                 (2 5 6)
                                 (5 9 8)
                                 (5 8 7)
                                 (1 2 1)
                                 (7 1 2)
                                 (2 9 4)
                                 (1 3 5)
                                 (15 7 2)
                                 (8 6 3)
                                 (2 4 3)
                                 (2 6 4)
                                 (4 7 1)
                                 (4 7 5)
                                 (1 6 4)
                                 (3 1 7)
                                 (5 7 6)
                                 (4 7 5)
                                 (18 2 4)
                                 (5 6 4)
                                 (4 1 2)
                                 (8 3 8)
                                 (2 8 4)
                                 (2 3 7)
                                 (1 5 7)
                                 (3 8 4)
                                 (2 7 2)
                                 (1 3 8)
                                 (9 2 6)
                                 (2 8 6)
                                 (1 7 3)
                                 (1 3 5)
                                 (3 6 8)
                                 (1 8 5)
                                 (1 5 9)
                                 (1 1 2)
                                 (5 4 6)
                                 (10 6 2)
                                 (5 2 6)
                                 (5 6 4)
                                 (1 6 3)
                                 (6 4 6)
                                 (3 2 6)
                                 (2 2 3)
                                 (11 4 6)
                                 (1 9 5)
                                 (4 6 7)
                                 (1 4 3)
                                 (12 4 3)
                                 (1 8 6)
                                 (9 5 7)
                                 (1 5 2)
                                 (1 8 5)
                                 (1 4 9)
                                 (9 7 9)
                                 (1 3 4)
                                 (2 3 6)
                                 (2 5 6)
                                 (2 8 5)
                                 (11 3 4)
                                 (2 3 1)
                                 (1 2 3)
                                 (1 3 8)
                                 (3 7 9)
                                 (5 4 2)
                                 (2 5 8)
                                 (6 4 2)
                                 (1 1 3)
                                 (12 9 1)
                                 (6 1 6)
                                 (1 8 4)
                                 (1 8 3)
                                 (5 2 7)
                                 (2 3 9)
                                 (5 7 1)
                                 (1 7 5)
                                 (2 9 1)
                                 (14 1 7)
                                 (2 4 7)
                                 (7 2 4)
                                 (1 2 1)
                                 (1 1 3)
                                 (1 5 4)
                                 (1 9 6)
                                 (16 6 5)
                                 (2 5 4)
                                 (12 6 8)
                                 (10 4 8)
                                 (9 7 3)
                                 (4 7 6)
                                 (11 5 8)
                                 (2 5 2)
                                 (14 8 9)
                                 (1 5 1)
                                 (3 9 4)
                                 (2 2 1)
                                 (7 8 3)
                                 (6 3 5)
                                 (8 9 8)
                                 (1 6 1)
                                 (1 4 2)
                                 (4 3 8)
                                 (1 7 2)
                                 (3 1 5)
                                 (2 5 7)
                                 (3 9 2)
                                 (1 1 8)
                                 (5 5 4)
                                 (2 7 8)
                                 (4 2 5)
                                 (1 2 4)
                                 (2 7 8)
                                 (4 6 2)
                                 (6 5 3)
                                 (1 6 5)
                                 (1 5 3)
                                 (1 3 8)
                                 (8 8 3)
                                 (9 8 5)
                                 (9 8 2)
                                 (2 8 9)
                                 (2 3 8)
                                 (5 5 8)
                                 (1 3 7)
                                 (2 9 5)
                                 (7 2 4)
                                 (14 4 6)
                                 (2 2 7)
                                 (1 7 3)
                                 (1 7 9)
                                 (3 5 2)
                                 (1 7 1)
                                 (3 2 4)
                                 (7 8 2)
                                 (3 6 1)
                                 (17 3 1)
                                 (2 8 3)
                                 (6 2 7)
                                 (2 7 9)
                                 (3 6 8)
                                 (2 8 6)
                                 (4 2 1)
                                 (3 4 7)
                                 (1 8 7)
                                 (1 8 9)
                                 (1 4 2)
                                 (3 5 7)
                                 (2 3 1)
                                 (2 3 5)
                                 (5 7 4)
                                 (5 7 3)
                                 (1 4 8)
                                 (3 3 1)
                                 (6 1 3)
                                 (1 7 5)
                                 (2 9 2)
                                 (3 5 8)
                                 (1 8 1)
                                 (8 3 5)
                                 (1 4 9)
                                 (3 6 5)
                                 (3 6 3)
                                 (2 3 7)
                                 (1 4 7)
                                 (3 6 4)
                                 (2 7 2)
                                 (1 7 8)
                                 (2 5 4)
                                 (1 6 1)
                                 (7 4 7)
                                 (7 5 2)
                                 (10 2 3)
                                 (3 2 6)
                                 (3 8 1)
                                 (1 8 7)
                                 (2 6 3)
                                 (1 6 9)
                                 (4 7 5)
                                 (16 1 5)
                                 (1 9 7)
                                 (3 7 6)
                                 (11 5 6)
                                 (2 7 9)
                                 (12 6 4)
                                 (2 6 9)
                                 (6 3 2)
                                 (1 5 7)
                                 (5 9 5)
                                 (1 9 6)
                                 (4 3 7)
                                 (1 4 2)
                                 (7 2 5)
                                 (3 5 2)
                                 (6 5 6)
                                 (3 2 6)
                                 (9 6 8)
                                 (5 5 9)
                                 (5 7 1)
                                 (4 1 9)
                                 (2 9 4)
                                 (1 6 7)
                                 (9 4 1)
                                 (7 5 9)
                                 (18 1 3)
                                 (9 9 5)
                                 (8 8 2)
                                 (1 2 5)
                                 (4 2 3)
                                 (4 9 6)
                                 (1 4 8)
                                 (2 5 7)
                                 (2 9 2)
                                 (10 3 9)
                                 (5 5 9)
                                 (1 7 2)
                                 (2 8 7)
                                 (2 3 5)
                                 (2 9 1)
                                 (2 7 3)
                                 (1 2 1)
                                 (5 5 8)
                                 (1 2 1)
                                 (15 3 6)
                                 (1 7 6)
                                 (10 6 5)
                                 (1 7 8)
                                 (4 1 6)
                                 (1 8 3)
                                 (2 1 5)
                                 (3 8 1)
                                 (1 4 6)
                                 (1 4 2)
                                 (4 9 7)
                                 (6 5 7)
                                 (3 1 9)
                                 (10 6 8)
                                 (2 1 3)
                                 (8 7 9)
                                 (1 9 6)
                                 (2 7 9)
                                 (3 3 5)
                                 (1 2 6)
                                 (2 6 5)
                                 (5 9 4)
                                 (4 8 2)
                                 (1 1 3)
                                 (4 5 9)
                                 (3 6 1)
                                 (2 1 5)
                                 (3 5 2)
                                 (8 8 3)
                                 (11 9 4)
                                 (13 4 8)
                                 (2 9 2)
                                 (2 3 1)
                                 (1 4 1)
                                 (1 3 8)
                                 (2 6 9)
                                 (7 8 1)
                                 (3 2 5)
                                 (7 2 5)
                                 (3 4 6)
                                 (4 9 2)
                                 (2 3 5)
                                 (9 5 6)
                                 (5 2 7)
                                 (2 9 2)
                                 (2 9 7)
                                 (12 6 8)
                                 (5 5 7)
                                 (1 9 8)
                                 (3 1 6)
                                 (5 5 8)
                                 (6 1 9)
                                 (2 1 5)
                                 (1 6 9)
                                 (5 9 7)
                                 (2 5 8)
                                 (11 7 6)
                                 (20 8 1)
                                 (2 9 8)
                                 (4 7 6)
                                 (6 8 3)
                                 (13 6 9)
                                 (4 3 2)
                                 (4 6 3)
                                 (2 3 6)
                                 (5 9 8)
                                 (2 7 1)
                                 (2 6 9)
                                 (6 8 3)
                                 (6 3 6)
                                 (5 2 9)
                                 (22 1 3)
                                 (3 2 1)
                                 (5 9 3)
                                 (1 1 6)
                                 (3 6 2)
                                 (1 2 4)
                                 (33 3 5)
                                 (1 8 7)))
#+END_SRC

#+RESULTS: 2022-day5-input
: aoc22/day5input

#+NAME: 2022-day5-solution
#+BEGIN_SRC emacs-lisp :session "day5" :var x=2022-day5-input
;;; Code:

(defun aoc22/day5-part1 (stacks instructions)
  "Follows INSTRUCTIONS to organize STACKS.
It follows all instructions pushing and popping on stacks and
finally prints out stacks to get the letters that are on top."
  (let ((stack (mapcar #'copy-sequence stacks)))
    (dolist (instr instructions)
      (let ((items (car instr))
            (source (1- (cadr instr)))
            (dest (1- (caddr instr))))
        (dotimes (it items)
          (push (pop (nth source stack)) (nth dest stack)))))
    (let (results)
      (dolist (result stack)
        (setq results (append results (list (car result)))))
      results)))

(defun aoc22/day5-part2 (stacks instructions)
  "Follows INSTRUCTIONS to organize STACKS.
The difference with previous function is that, items are not
moved one at a time, but all together in one instruction,
therefore keeping the order of them.  So we need an intermediate
move stack?"
  (let ((stack (mapcar #'copy-sequence stacks)))
    (dolist (instr instructions)
      (let ((items (car instr))
            (source (1- (cadr instr)))
            (dest (1- (caddr instr)))
            (intstack nil))
        (dotimes (it items)
          (push (pop (nth source stack)) intstack))
        (dotimes (it items)
          (push (pop intstack) (nth dest stack)))
        ))
    (let (results)
      (dolist (result stack)
        (setq results (append results (list (car result)))))
      results)))

;;; Helper functions:

;;; Results vector
(vector (aoc22/day5-part1 aoc22/day5test aoc22/day5test-inst)
        (aoc22/day5-part1 aoc22/day5input aoc22/day5input-inst)
        (aoc22/day5-part2 aoc22/day5test aoc22/day5test-inst)
        (aoc22/day5-part2 aoc22/day5input aoc22/day5input-inst))
#+END_SRC

#+RESULTS: 2022-day5-solution
: [(C M Z) (Q M B M J D F T D) (M C D) (N B T V T J N F J)]
** day 6
#+NAME: 2022-day6-input
#+BEGIN_SRC emacs-lisp :session "day6"
(defconst aoc22/day6test "nznrnfrfntjfmvfwmzdfjlvtqnbhcprsg")

(defconst aoc22/day6input "mgtgddtfdtffzvznvnrncrrbqqhlhhffzqqzpqqthhrhhfphfphhcppcddnwdnwwtmwttfvvthvvrrbvbmvmssrlslfslflppblllwrlrzlldwdllqblqbqbsscmsmwwffjpppnlnhllbblvbvsbbzvzrzzsmsjsddfpftfvtffgjjfzjfjqfqjfjsscvcccgttgtzgzmgmtmbbwzzjqzzdfzfmzmzfzwzvwvggqcqrrcwrcrzrccqcwwbgbqqwdqqzjzsjjwbjjssmmcfcbcddlhhtltmtlljffvjffhghmggmvvfgfqgfgppnpllmvmfvvzjjzrztztvvstsvvppqdpprjjmtmjtmjjdrdcrdccgsccnsccqsqzszqsqgqwggbhbllvclljrrlrqlljtjcjjlrlhrhjhjnnnpllwtwstttlnlqnlnmnqnpqpbqqbgbzzrhzrhzhrzhrzhzshhqvqgqgbbcqccqmcqccvgccrwrgwrgrdrhhbshbhwbhwbhhvthvttfrrqsstqssqmmpnpwpfpcffcdchhrsshrhggtcttmrrhvvjfvjvvclvllmqmvvhddrdjjhdhvhlvhlltlstltffbbqbwqbbbnsbnbwbssjwsjsfjjsjwwzttqzzsdspprlrblrltrrfrsfffwqwpwddddnqqtbtwwhwpwdwmmcrmrsmmwppjzpjpcpdpjpdpdqppmjjlqqjfqqhgqhhbddtccthhwjhhlfftvtppwzpwzpznpzpqpgqpgpnpdndnbnddqrrjdjwwdmmtnntvnnrhrfhfrfwfvwffmnfnlfldfdjjwgwqqwwsslrrvhhrqqsfqfllrmrqmrrbppwjppmlmggvppdhppspjjzljjrzzrlzrrlldllvlpvpfprfprrhdrdlllpqqfhqqhchzzzwpwjpjjgzzwqqtqdqbdbdgggbrgrzzznwwbvbnbpnbpprnrvvfvsscncrczcbchhjqhjjzrznndwnnvttmtthssgvvbvfvtvptpthhzggnjjhrjdqzjbtfpqdtwtmgnngqdzhdrfzqvcqggmcdbsdrdrmgqhmvfvdgbvrnlbhfsbpjhwgzfndqgcjdbpsffcslfcltsbclspdjhscqrncfrjrbjfzspccshtrdggjbhthrrhgnjvsptfnjvjvhhdjfbtfgpfgszhhbcvzplclrnsrpffpjhbthnfsfflqphhjjdpcfwzhfdpnsftrnfhrdhndlrnfrnvprtvnmgclzlrdjrzdcllvlwdlrcfbsgcbwcnbvjztzfsgcgqlmgcbsgwbbrmrcthfpvmbfvtbhqstccfntmphqpjwpbcdpnffqpszlnqdcqtfhvlvpgdpljvcschdtpvcswfzcbpqdhfjzzdjvgldspcvlnfnwffhjzdnbmjjtnrqlgnggsvdltnrpcfwqvphtsmrfzhflwjjbnpwlzhhmdnpqptgcjnrrgcnhwllqsbsjjvzmqsghlzvhdfbrnfhrqjswrpgcctsqvdwzgpqdssfmtgwvsznlbhsgppwdhhtjmscjfrjdgflwcrlbsfwrnvtnmcwpndhtttgqfvmvmfnwdrrvgmgdqlqvvlphwzgmwcphjvcfsqbbwttntmgvfmlmctggmtlwtmfsmczbgdvbsjstzgflnjplgrlhbbgldlchwmhclzbcwpqzlzbjzbplnvpbzjhmwfmrfnwlnsvpzhrgjdpqvnjtbfjfsvdqcfwdjftsmfqdrqllwlbnbmgtswrhbtbqlchznbgnphgntrtwbtmsjtphhqpbngwmmsdnsdqcctrsrzbrtpwtvhvqbrjldfldllpvspthdhdljfvjzcjsltwflscfqsrvzhgvzhqnnjwdwdtnsvgchzrnbzfscvsmrmqsqjmrjjdhtspbzpqtqqbfbzrddwqzwpqjbpbbbghlwmzhqvqdwwwwvltvvcpgzlwzvmqzfcgnjpjnpgsccvzpnzjwwnnjrcpbvwljfrjqzwsrvdmqwwfpldqcdwlchvggclmwnbhlrlzvsrtrqmzchqfqfhqfjgqsfvclnchdnnvdbqpcddnldggwrpbgrwwtssfndhrhnwtqmgrwpggntlqmfgbzjhwwsclvfmwgzzfrsccdfddntnlldpnwzhnzlssnnfbvjjhnrvclmphgfpvnwjzznbvgqnpljcrjpndgrlbdzsbfrrrfztbqcbphlppwcvhmrrmtrlvfjcddtznlmflrpsclgjpqczwrptfsccmdpzfvwnfsvshcnzrjrmstrslhgtrsmgplvcwptfqrgzgwhvtvrqlrjpcbztgtfwpnzqpmctvpdlgrtzzlsmgnftqvtvcmndspjqbdnmrttwhdrncsntntmrwjrqstdrptnhbqgtlqsdqfmbjtvgstndlvndqqsbqvcghwwjdzpszrsfpdzvnmnbzngczndtwtmprbzjdzbthslttzwwfptbphqwczsrqcbcbqnhbtcpjpbcqpjgjmhmfnggcbvctslpmqrpqzbcfrcgzmzpbpwzsjlrmpfzhgnnbqfrbslrfsthgtmsdfhzgdmjwwsgcdptssmbvffhlmfvwnmbpnzbvpsvnwsvsgrcmhpclwsbvtfqstnpzvgmgfcrmjhbccwcptssjhbfmzsqljjcrnnszvffzfwgcpnqrtjnqdltwnbglwlwpschvqwfdztvcwsqtwmgwccgsqbsvlwdhlnqphwtcmdpvvrqfwmlbptbvghvjntqbcsqjspwnmvdqcfbqzqchhhwqgdcmdhfvtzprscpshpbmzhwsznlpvzrwvmhtqsclzffgnvvrfbzmvqmnrrzjbmhdbspjprrmflgrwhnhcqpczchpnrnfjgdlnlrnzwnvjpmzgpfzspwmfnwcrrdczdhtnscmwqwqbcrdrsndpwbdvpgpbpsfzbmvjlsrdcgnwgrvmjnzlpnwtcrmnfcqgmlnhqbwlrnzlbdrnzfhnqddsfmnhnrrrdjgqprmgvrnhzrlccjthhfzdbltgrbrjpmbhvgrlwngdlfsljhfvwhvpmltdfnzwzcgzdpppnzcnpjttdgpzzqppnfzlmhrngbmcmshtgzbjllwstdbnmmwlrlllgfgshvcsjbpnggzrvvmvdqhjhvhmmpvrdqbrfpdtcdbqrvwhdrtqgftnwwzrcgzwmwjmdgmfswqwlgmvmvhscjmzshtbzmfmbqtbsjppzbczwcqpqhhqdggcntdchjgwsvfnzfqdzvhpnwbjhbqnldzbzmctcdqgjsmbqdzmmtjzvqzdqzsfpmncdmqlnpsrwcznbtzqtbcwwdqjftcdmmwdjdnwvpchffsmqmmwvqfgcnfhbjsttwnwppssmvrrhrbqwsncpfnbfggdqjwbgtvgtwsmlqbwzlghnzhjwphswjtbtptmhlzhvvrwqqcgwnmcqtcjlndwgjrpschhhsmrvvwtrjplwrtswhrjlgjhzgzrjhsbrjhtgnmfdvbjlntcrphsnmdcjzgwtvgldrfpcfgpzlgsfthdmpbnhmlsbnbqzpqvzzmvswbbnbtzvbsznqdgqlbbwzhjrzndltfgswtszsmmrhrcrcrcpgtqfcrmjrtflsbcbbmrsrfgnsrmbrpcvfpmqtmbrbbqtzrjntnvbvwjwqmwmcvmzccmwcnhrfpgghlqczcfszfhqgrdnfpnrrzpzbnjqjtvbglvqlhpstpzzcwrdgfhghqtsgzgsmgnpgvbsvsjtnwbvtqpcfdvhnjjvwjwglplthmghrwpmsgbdbfpvqsmsdvjgchlnlnczlzczqmjsnpgrgqgndwzdtlmmgzjpqvbqmcmhnhpqvpjjsftctwsrfmhrlctrvhczjbfsvqnshmchdsrmlrlqdnfsvhlblwghsdnrtwnpdtqgczmghqcmfzvsgqvrngjvbjsvnpzvpsplhvndvqpjjrtmrqscjrhvdmqcgwjmrgsdmgswgnbpdtgvvbrzrcwtvvwhpmcqwdtsmwwfgdpdrjsbvtbdvbhwftqznpssnsnjnclblslfgz")

#+END_SRC

#+RESULTS: 2022-day6-input
: aoc22/day6input

#+NAME: 2022-day6-solution
#+BEGIN_SRC emacs-lisp :session "day6" :val x=2022-day6-input
;;; Code:

(defun aoc22/day6-part1 (input)
  "Find in INPUT the start of packet marker.
This marker is the index of the last character in INPUT
that a four letter substring has all letters unique."
  (aoc22/find-uniq input 0 4))

(defun aoc22/day6-part2 (input)
  "Find in INPUT the start of message marker.
This marker is the index of the last character in INPUT that a
fourteen letter substring has all letters unique."
  (let ((index (aoc22/day6-part1 input)))
    (aoc22/find-uniq input (- index 4) 14)))

;;; Helper functions:
(defun aoc22/find-uniq (stream index step)
  "Find in STEP chars of STREAM, starting from INDEX, if they are all unique."
  (let ((buffer (aoc22/string-to-list (substring stream index (+ index step))))
        (space (aoc22/string-to-list (substring stream (+ index step)))))
    (cl-dolist (item space)
      (if (equal buffer (seq-uniq buffer))
          (cl-return (+ index step))
        (setq buffer (append buffer (list item)))
        (pop buffer)
        (cl-incf index)))))


(defun aoc22/string-to-list (stream)
  "Convert STREAM to a list of numbers.
STREAM is a string of ASCII letters."
  (mapcar #'string-to-char
          (split-string stream "" t)))
;;; Results vector

(vector (aoc22/day6-part1 aoc22/day6test)
        (aoc22/day6-part1 aoc22/day6input)
        (aoc22/day6-part2 aoc22/day6test)
        (aoc22/day6-part2 aoc22/day6input)
        )
#+END_SRC

#+RESULTS: 2022-day6-solution
: [10 1042 29 2980]
** day 7
#+NAME: 2022-day7-input
#+BEGIN_SRC emacs-lisp :session "day7"
(defconst aoc22/day7test '(($ cd /)
                           ($ ls)
                           (dir a)
                           (14848514 b.txt)
                           (8504156 c.dat)
                           (dir d)
                           ($ cd a)
                           ($ ls)
                           (dir e)
                           (29116 f)
                           (2557 g)
                           (62596 h.lst)
                           ($ cd e)
                           ($ ls)
                           (584 i)
                           ($ cd ..)
                           ($ cd ..)
                           ($ cd d)
                           ($ ls)
                           (4060174 j)
                           (8033020 d.log)
                           (5626152 d.ext)
                           (7214296 k)))

(defconst aoc22/day7input '(($ cd /)
                            ($ ls)
                            (dir plws)
                            (dir pwlbgbz)
                            (dir pwtpltr)
                            (dir szn)
                            ($ cd plws)
                            ($ ls)
                            (dir ffpzc)
                            (dir frcmjzts)
                            (92461 nbvnzg)
                            (dir phqcg)
                            (21621 vqgsglwq)
                            ($ cd ffpzc)
                            ($ ls)
                            (48459 dzdfc.vqq)
                            (143107 jql.jzl)
                            (208330 mmnvqn.hqb)
                            (290122 svjvhflz)
                            (218008 wjlmgq)
                            ($ cd ..)
                            ($ cd frcmjzts)
                            ($ ls)
                            (dir bsltmjz)
                            (dir jfzgrbm)
                            ($ cd bsltmjz)
                            ($ ls)
                            (34237 dzdfc.vqq)
                            (58741 mdgdhqgw)
                            ($ cd ..)
                            ($ cd jfzgrbm)
                            ($ ls)
                            (132811 fcmpng)
                            (103661 lgt.swt)
                            (173031 vqgsglwq)
                            (29134 wprjfg.zbr)
                            ($ cd ..)
                            ($ cd ..)
                            ($ cd phqcg)
                            ($ ls)
                            (955 jgfs.zjw)
                            ($ cd ..)
                            ($ cd ..)
                            ($ cd pwlbgbz)
                            ($ ls)
                            (dir gbg)
                            (dir mjzhcwrd)
                            (dir njcscpj)
                            (dir sphbzn)
                            (dir tbgjpphc)
                            (55938 tvrfpczc.djm)
                            (4840 twd)
                            ($ cd gbg)
                            ($ ls)
                            (287003 fcsjl.bzm)
                            (dir wgq)
                            ($ cd wgq)
                            ($ ls)
                            (22963 fcsjl.fcm)
                            ($ cd ..)
                            ($ cd ..)
                            ($ cd mjzhcwrd)
                            ($ ls)
                            (228632 clfnpmbq.zmb)
                            (28276 dzdfc.vqq)
                            (2982 tdbg.wgn)
                            ($ cd ..)
                            ($ cd njcscpj)
                            ($ ls)
                            (dir dqzgqgv)
                            (275186 ffpzc)
                            (192491 gjnflc.plq)
                            ($ cd dqzgqgv)
                            ($ ls)
                            (70309 dzdfc.vqq)
                            (56139 fcsjl)
                            (142095 sgwz.cdz)
                            (dir snjntth)
                            (dir sphbzn)
                            (284618 wjlmgq)
                            ($ cd snjntth)
                            ($ ls)
                            (51918 ffpzc)
                            (dir vrfgfds)
                            ($ cd vrfgfds)
                            ($ ls)
                            (155233 jlscz)
                            ($ cd ..)
                            ($ cd ..)
                            ($ cd sphbzn)
                            ($ ls)
                            (dir qbzwrrw)
                            (dir qwpzn)
                            ($ cd qbzwrrw)
                            ($ ls)
                            (278531 fcsjl.tqj)
                            (211591 snjntth.gpd)
                            ($ cd ..)
                            ($ cd qwpzn)
                            ($ ls)
                            (174183 vqgsglwq)
                            ($ cd ..)
                            ($ cd ..)
                            ($ cd ..)
                            ($ cd ..)
                            ($ cd sphbzn)
                            ($ ls)
                            (185471 bsltmjz.fqz)
                            (dir bsvh)
                            (dir fvzcs)
                            (dir ndw)
                            (dir nlml)
                            (dir pcbt)
                            (286260 zhcmrpvt)
                            ($ cd bsvh)
                            ($ ls)
                            (130814 wjlmgq)
                            ($ cd ..)
                            ($ cd fvzcs)
                            ($ ls)
                            (dir cgmv)
                            (dir ggzwljr)
                            (298241 qvzghdpw.lms)
                            (dir snjntth)
                            (dir sphbzn)
                            ($ cd cgmv)
                            ($ ls)
                            (46843 dzdfc.vqq)
                            (dir lmqcbbm)
                            (dir rstcqsmd)
                            (215261 snjntth)
                            ($ cd lmqcbbm)
                            ($ ls)
                            (229898 bdmbvgp)
                            (25529 ffpzc.stm)
                            (16871 lnpjzvg.qlj)
                            ($ cd ..)
                            ($ cd rstcqsmd)
                            ($ ls)
                            (289038 zrbbbwng.smf)
                            ($ cd ..)
                            ($ cd ..)
                            ($ cd ggzwljr)
                            ($ ls)
                            (198200 bcthn)
                            ($ cd ..)
                            ($ cd snjntth)
                            ($ ls)
                            (191672 fwp.phf)
                            (68229 hzs.zpg)
                            (dir pggcwb)
                            (222426 qbv.bwj)
                            (dir snjntth)
                            (155354 vmqcm)
                            ($ cd pggcwb)
                            ($ ls)
                            (154272 fqztwvnv.lvv)
                            (dir pdjg)
                            (62393 vqgsglwq)
                            (dir wjhrtg)
                            ($ cd pdjg)
                            ($ ls)
                            (260644 gvhlrcf)
                            (209906 wpls.pbd)
                            ($ cd ..)
                            ($ cd wjhrtg)
                            ($ ls)
                            (148640 dljf.zrq)
                            (172168 dzdfc.vqq)
                            (196203 hjdphcfm)
                            (247620 sgwz.cdz)
                            ($ cd ..)
                            ($ cd ..)
                            ($ cd snjntth)
                            ($ ls)
                            (37467 ndlshlmj.cjq)
                            (257404 snjntth.nsf)
                            ($ cd ..)
                            ($ cd ..)
                            ($ cd sphbzn)
                            ($ ls)
                            (64082 bfdv.lwv)
                            (dir bsltmjz)
                            (58942 dzdfc.vqq)
                            (dir snjntth)
                            ($ cd bsltmjz)
                            ($ ls)
                            (dir bsqqdr)
                            (266007 fcsjl.gfm)
                            (dir ffpzc)
                            (dir frsmrd)
                            (72122 nthnhzwf)
                            (286705 wjlmgq)
                            ($ cd bsqqdr)
                            ($ ls)
                            (117496 wcqt)
                            ($ cd ..)
                            ($ cd ffpzc)
                            ($ ls)
                            (280224 mmnvqn.hqb)
                            (105346 vrr)
                            ($ cd ..)
                            ($ cd frsmrd)
                            ($ ls)
                            (111509 sphbzn.shz)
                            ($ cd ..)
                            ($ cd ..)
                            ($ cd snjntth)
                            ($ ls)
                            (177491 mplj)
                            (9029 pvbz.jwn)
                            (92891 snjntth.zrv)
                            (203356 vnnnw.gql)
                            (134728 vqgsglwq)
                            ($ cd ..)
                            ($ cd ..)
                            ($ cd ..)
                            ($ cd ndw)
                            ($ ls)
                            (241303 bht.rpj)
                            (173068 vqgsglwq)
                            ($ cd ..)
                            ($ cd nlml)
                            ($ ls)
                            (228982 hzglfpvq.ftt)
                            (114981 sgwz.cdz)
                            ($ cd ..)
                            ($ cd pcbt)
                            ($ ls)
                            (dir bsltmjz)
                            (dir ffpzc)
                            (dir fjsjwfg)
                            (dir fwm)
                            (dir jvwt)
                            (227943 tmr.jdc)
                            (dir vwpqzdwh)
                            (31258 wjlmgq)
                            ($ cd bsltmjz)
                            ($ ls)
                            (177750 bsltmjz.spj)
                            (dir ffpzc)
                            (dir flrpwfs)
                            (138824 mtmdtcpv.cfj)
                            (165770 wzqwczj.qwn)
                            ($ cd ffpzc)
                            ($ ls)
                            (179645 snjntth.dss)
                            ($ cd ..)
                            ($ cd flrpwfs)
                            ($ ls)
                            (60566 wvjq.gmm)
                            ($ cd ..)
                            ($ cd ..)
                            ($ cd ffpzc)
                            ($ ls)
                            (97847 qzhhtmd.bhw)
                            (1197 vqgsglwq)
                            ($ cd ..)
                            ($ cd fjsjwfg)
                            ($ ls)
                            (152232 dnsdd.jgz)
                            (181301 gsb.wsh)
                            (dir jqpb)
                            (dir jscbg)
                            (dir snjntth)
                            (227677 snjntth.vvg)
                            (dir sphbzn)
                            (75358 vqgsglwq)
                            (2589 wjlmgq)
                            ($ cd jqpb)
                            ($ ls)
                            (253403 mmnvqn.hqb)
                            (108325 rvq.mrc)
                            ($ cd ..)
                            ($ cd jscbg)
                            ($ ls)
                            (dir dtm)
                            (dir gsdnz)
                            (208269 prh)
                            (25977 qdzljgh)
                            (169262 vmnq.mth)
                            ($ cd dtm)
                            ($ ls)
                            (80072 gzqnb)
                            ($ cd ..)
                            ($ cd gsdnz)
                            ($ ls)
                            (dir dsqzjs)
                            (297895 sgwz.cdz)
                            (129983 vqgsglwq)
                            ($ cd dsqzjs)
                            ($ ls)
                            (2621 jqrlsf.gzs)
                            (164844 snjntth)
                            ($ cd ..)
                            ($ cd ..)
                            ($ cd ..)
                            ($ cd snjntth)
                            ($ ls)
                            (118553 cbhql)
                            (dir ffpzc)
                            (dir snjntth)
                            ($ cd ffpzc)
                            ($ ls)
                            (dir lmn)
                            (12104 tvlwn.vhh)
                            ($ cd lmn)
                            ($ ls)
                            (46401 bsltmjz)
                            (96888 shrnqhvq)
                            ($ cd ..)
                            ($ cd ..)
                            ($ cd snjntth)
                            ($ ls)
                            (dir snjntth)
                            (dir vlnfhbq)
                            (dir wpwl)
                            ($ cd snjntth)
                            ($ ls)
                            (dir ctj)
                            ($ cd ctj)
                            ($ ls)
                            (82485 fcsjl.lfl)
                            ($ cd ..)
                            ($ cd ..)
                            ($ cd vlnfhbq)
                            ($ ls)
                            (250106 qvf)
                            ($ cd ..)
                            ($ cd wpwl)
                            ($ ls)
                            (153950 cmsd.rlg)
                            ($ cd ..)
                            ($ cd ..)
                            ($ cd ..)
                            ($ cd sphbzn)
                            ($ ls)
                            (dir glgq)
                            ($ cd glgq)
                            ($ ls)
                            (285182 wjlmgq)
                            ($ cd ..)
                            ($ cd ..)
                            ($ cd ..)
                            ($ cd fwm)
                            ($ ls)
                            (251865 ffpzc.qgb)
                            (279522 zvvpfqtp)
                            ($ cd ..)
                            ($ cd jvwt)
                            ($ ls)
                            (48990 bsltmjz.nzp)
                            (219604 ffpzc)
                            (69573 mvmdfzr.lwb)
                            ($ cd ..)
                            ($ cd vwpqzdwh)
                            ($ ls)
                            (267581 pvcch)
                            ($ cd ..)
                            ($ cd ..)
                            ($ cd ..)
                            ($ cd tbgjpphc)
                            ($ ls)
                            (255571 dstpcgr.tfq)
                            (dir fdbwbrpp)
                            (dir gjzwh)
                            (dir hjvrtjt)
                            (dir rhzczj)
                            (292888 sgwz.cdz)
                            (dir wlzhr)
                            (149395 wnfzrqgz.dtn)
                            ($ cd fdbwbrpp)
                            ($ ls)
                            (dir ffpzc)
                            (dir qbrth)
                            (51164 qprp)
                            (dir slpt)
                            (117026 sphbzn)
                            (295685 vqgsglwq)
                            (dir znmj)
                            ($ cd ffpzc)
                            ($ ls)
                            (dir jhnzrdvb)
                            ($ cd jhnzrdvb)
                            ($ ls)
                            (217775 ffpzc.sgw)
                            ($ cd ..)
                            ($ cd ..)
                            ($ cd qbrth)
                            ($ ls)
                            (183969 lpbwgfjv.vcg)
                            (47333 wjlmgq)
                            ($ cd ..)
                            ($ cd slpt)
                            ($ ls)
                            (32343 tqhtj.jwz)
                            ($ cd ..)
                            ($ cd znmj)
                            ($ ls)
                            (55058 mmnvqn.hqb)
                            ($ cd ..)
                            ($ cd ..)
                            ($ cd gjzwh)
                            ($ ls)
                            (dir dvcbcd)
                            (202530 dzdfc.vqq)
                            (dir fsgz)
                            (dir hfrrqq)
                            (54897 jlzn.qsn)
                            (16097 ldzqsbb.jzl)
                            (225078 pswccrd)
                            (dir rqqmldw)
                            (292464 rzrdhbp.vld)
                            (dir ssqbqqp)
                            (dir zsztqrc)
                            ($ cd dvcbcd)
                            ($ ls)
                            (187837 dzdfc.vqq)
                            (dir jlwtvf)
                            (dir jnjvshs)
                            (164053 nrf.fqd)
                            (5665 tlp.jmt)
                            (13801 wjlmgq)
                            ($ cd jlwtvf)
                            ($ ls)
                            (219985 sphbzn.dvj)
                            ($ cd ..)
                            ($ cd jnjvshs)
                            ($ ls)
                            (dir bsltmjz)
                            (dir nrpm)
                            ($ cd bsltmjz)
                            ($ ls)
                            (152972 qgdqj)
                            ($ cd ..)
                            ($ cd nrpm)
                            ($ ls)
                            (18509 wjlmgq)
                            ($ cd ..)
                            ($ cd ..)
                            ($ cd ..)
                            ($ cd fsgz)
                            ($ ls)
                            (224576 mmnvqn.hqb)
                            ($ cd ..)
                            ($ cd hfrrqq)
                            ($ ls)
                            (dir bwgsnfvb)
                            (dir fcsjl)
                            (294608 ffpzc.gvm)
                            (136880 qjcgtw)
                            (dir sphbzn)
                            ($ cd bwgsnfvb)
                            ($ ls)
                            (29735 dzdfc.vqq)
                            (dir wstmzfml)
                            ($ cd wstmzfml)
                            ($ ls)
                            (158447 bnvhbvvc.nrt)
                            (59889 jclclgd)
                            ($ cd ..)
                            ($ cd ..)
                            ($ cd fcsjl)
                            ($ ls)
                            (138297 ffpzc.szw)
                            ($ cd ..)
                            ($ cd sphbzn)
                            ($ ls)
                            (dir wqdths)
                            ($ cd wqdths)
                            ($ ls)
                            (8326 cgvtw.jpz)
                            ($ cd ..)
                            ($ cd ..)
                            ($ cd ..)
                            ($ cd rqqmldw)
                            ($ ls)
                            (226757 dzdfc.vqq)
                            (115055 mwb.btc)
                            (dir qpts)
                            (298524 sgwz.cdz)
                            ($ cd qpts)
                            ($ ls)
                            (60860 bsltmjz.frp)
                            (dir fcsjl)
                            (94904 sgwz.cdz)
                            (dir wnmqqspz)
                            ($ cd fcsjl)
                            ($ ls)
                            (25082 mmnvqn.hqb)
                            ($ cd ..)
                            ($ cd wnmqqspz)
                            ($ ls)
                            (165529 sgwz.cdz)
                            ($ cd ..)
                            ($ cd ..)
                            ($ cd ..)
                            ($ cd ssqbqqp)
                            ($ ls)
                            (192477 pvrgm)
                            ($ cd ..)
                            ($ cd zsztqrc)
                            ($ ls)
                            (254053 lht.htn)
                            ($ cd ..)
                            ($ cd ..)
                            ($ cd hjvrtjt)
                            ($ ls)
                            (189942 fwps)
                            ($ cd ..)
                            ($ cd rhzczj)
                            ($ ls)
                            (36502 bmtfr)
                            (dir ffjz)
                            (35148 nctfhmzm.vsz)
                            (dir qdgjzcz)
                            (208196 rwql)
                            (79863 sgwz.cdz)
                            (dir snjntth)
                            ($ cd ffjz)
                            ($ ls)
                            (dir grsvhwm)
                            ($ cd grsvhwm)
                            ($ ls)
                            (50231 fwj.rdv)
                            (dir snjntth)
                            ($ cd snjntth)
                            ($ ls)
                            (dir dtbgb)
                            ($ cd dtbgb)
                            ($ ls)
                            (150245 vdflm.lmq)
                            ($ cd ..)
                            ($ cd ..)
                            ($ cd ..)
                            ($ cd ..)
                            ($ cd qdgjzcz)
                            ($ ls)
                            (222389 dzdfc.vqq)
                            ($ cd ..)
                            ($ cd snjntth)
                            ($ ls)
                            (56794 mmnvqn.hqb)
                            ($ cd ..)
                            ($ cd ..)
                            ($ cd wlzhr)
                            ($ ls)
                            (116628 bsltmjz)
                            (60122 jqpbsgnr.fgb)
                            (252605 lfss)
                            (300065 qwjdl.vhr)
                            ($ cd ..)
                            ($ cd ..)
                            ($ cd ..)
                            ($ cd pwtpltr)
                            ($ ls)
                            (dir dplsvrhl)
                            (140951 gwtfzqvd.znb)
                            (dir jbvdb)
                            (dir jst)
                            (dir qhjv)
                            (dir snjntth)
                            ($ cd dplsvrhl)
                            ($ ls)
                            (272101 fcsjl)
                            (dir ffpzc)
                            (58852 mmnvqn.hqb)
                            (dir mnhntjz)
                            (91899 sgwz.cdz)
                            (228077 snjntth.btv)
                            ($ cd ffpzc)
                            ($ ls)
                            (5499 bsltmjz)
                            (dir qmfwpjhl)
                            (dir rsrb)
                            (dir wgt)
                            ($ cd qmfwpjhl)
                            ($ ls)
                            (300362 dzdfc.vqq)
                            ($ cd ..)
                            ($ cd rsrb)
                            ($ ls)
                            (252983 dzdfc.vqq)
                            (107744 ltssrgqb.zvj)
                            (214895 rhglgcwr.wpw)
                            (249727 sgwz.cdz)
                            ($ cd ..)
                            ($ cd wgt)
                            ($ ls)
                            (141984 dzdfc.vqq)
                            (194686 mmnvqn.hqb)
                            (258023 pgr)
                            ($ cd ..)
                            ($ cd ..)
                            ($ cd mnhntjz)
                            ($ ls)
                            (dir bdvght)
                            (dir jprwchh)
                            (dir snjntth)
                            ($ cd bdvght)
                            ($ ls)
                            (243166 vpsvjdq.wsn)
                            ($ cd ..)
                            ($ cd jprwchh)
                            ($ ls)
                            (178943 bmpc.bjb)
                            ($ cd ..)
                            ($ cd snjntth)
                            ($ ls)
                            (dir nlbm)
                            (dir zjmjntff)
                            ($ cd nlbm)
                            ($ ls)
                            (33050 fcsjl.rcc)
                            (dir sphbzn)
                            (17446 wjlmgq)
                            ($ cd sphbzn)
                            ($ ls)
                            (214563 prrfhff.pbp)
                            ($ cd ..)
                            ($ cd ..)
                            ($ cd zjmjntff)
                            ($ ls)
                            (82134 sgwz.cdz)
                            (52203 vrtlgdq.crp)
                            ($ cd ..)
                            ($ cd ..)
                            ($ cd ..)
                            ($ cd ..)
                            ($ cd jbvdb)
                            ($ ls)
                            (dir wmtjh)
                            ($ cd wmtjh)
                            ($ ls)
                            (dir ggvwn)
                            ($ cd ggvwn)
                            ($ ls)
                            (192285 spqvmf.sdh)
                            ($ cd ..)
                            ($ cd ..)
                            ($ cd ..)
                            ($ cd jst)
                            ($ ls)
                            (dir bsltmjz)
                            (212740 dzdfc.vqq)
                            (dir gncztvtb)
                            (dir jsqjcqnt)
                            (286257 jvs)
                            (36654 sdcsm.mbg)
                            (192040 sgwz.cdz)
                            (dir tbqphzb)
                            (dir vdcqgts)
                            (285843 wjlmgq)
                            ($ cd bsltmjz)
                            ($ ls)
                            (215705 snjntth.gpv)
                            (213665 wjlmgq)
                            ($ cd ..)
                            ($ cd gncztvtb)
                            ($ ls)
                            (229298 vqgsglwq)
                            ($ cd ..)
                            ($ cd jsqjcqnt)
                            ($ ls)
                            (dir bsltmjz)
                            (dir fcsjl)
                            (dir ffpzc)
                            (dir sphbzn)
                            (70864 vqgsglwq)
                            ($ cd bsltmjz)
                            ($ ls)
                            (14981 pqzffzjc)
                            ($ cd ..)
                            ($ cd fcsjl)
                            ($ ls)
                            (140328 jwhczwbc)
                            ($ cd ..)
                            ($ cd ffpzc)
                            ($ ls)
                            (213650 mmnvqn.hqb)
                            ($ cd ..)
                            ($ cd sphbzn)
                            ($ ls)
                            (dir psmtphhq)
                            (dir sphbzn)
                            ($ cd psmtphhq)
                            ($ ls)
                            (dir ffpzc)
                            (123131 tzgwd)
                            ($ cd ffpzc)
                            ($ ls)
                            (49737 cfngvmd)
                            (dir gcnrp)
                            (172799 gmd.cwl)
                            (dir llnztjf)
                            (dir nbqs)
                            (79661 rrqz)
                            ($ cd gcnrp)
                            ($ ls)
                            (283 vqnrgl.vwp)
                            ($ cd ..)
                            ($ cd llnztjf)
                            ($ ls)
                            (63263 tjhm.bwh)
                            ($ cd ..)
                            ($ cd nbqs)
                            ($ ls)
                            (dir vssmq)
                            ($ cd vssmq)
                            ($ ls)
                            (88980 dzdfc.vqq)
                            ($ cd ..)
                            ($ cd ..)
                            ($ cd ..)
                            ($ cd ..)
                            ($ cd sphbzn)
                            ($ ls)
                            (20140 fcsjl.zrs)
                            (260579 snjntth)
                            ($ cd ..)
                            ($ cd ..)
                            ($ cd ..)
                            ($ cd tbqphzb)
                            ($ ls)
                            (93470 sgwz.cdz)
                            ($ cd ..)
                            ($ cd vdcqgts)
                            ($ ls)
                            (223564 dzdfc.vqq)
                            (dir ffpzc)
                            (dir gwhfgwf)
                            (dir nbjtqnng)
                            (dir snjntth)
                            ($ cd ffpzc)
                            ($ ls)
                            (42813 qwwmw.nmt)
                            ($ cd ..)
                            ($ cd gwhfgwf)
                            ($ ls)
                            (59918 jvfv.mpm)
                            (dir mjl)
                            (211039 pcwl)
                            ($ cd mjl)
                            ($ ls)
                            (13004 pgjb.tpq)
                            (195995 tms.fjz)
                            ($ cd ..)
                            ($ cd ..)
                            ($ cd nbjtqnng)
                            ($ ls)
                            (107058 dzdfc.vqq)
                            (dir ldrsd)
                            (111631 vqgsglwq)
                            (104599 wbzmdljw.tjq)
                            (155747 wjlmgq)
                            ($ cd ldrsd)
                            ($ ls)
                            (107439 jvjm)
                            ($ cd ..)
                            ($ cd ..)
                            ($ cd snjntth)
                            ($ ls)
                            (242680 fgrt.gng)
                            ($ cd ..)
                            ($ cd ..)
                            ($ cd ..)
                            ($ cd qhjv)
                            ($ ls)
                            (dir bmnm)
                            (68453 hjjpdgn.hwl)
                            (dir sjlbj)
                            (dir vqnrj)
                            ($ cd bmnm)
                            ($ ls)
                            (1238 vqgsglwq)
                            ($ cd ..)
                            ($ cd sjlbj)
                            ($ ls)
                            (44239 wzzbtmrz.gml)
                            ($ cd ..)
                            ($ cd vqnrj)
                            ($ ls)
                            (3286 bsltmjz.qlc)
                            ($ cd ..)
                            ($ cd ..)
                            ($ cd snjntth)
                            ($ ls)
                            (130833 blm.wmt)
                            (dir snjntth)
                            (dir tcnmbcgg)
                            (218869 wjlmgq)
                            ($ cd snjntth)
                            ($ ls)
                            (dir snmrdfbt)
                            ($ cd snmrdfbt)
                            ($ ls)
                            (281025 bzrsds.lfg)
                            ($ cd ..)
                            ($ cd ..)
                            ($ cd tcnmbcgg)
                            ($ ls)
                            (194998 fcsjl)
                            (dir qdrmpqgn)
                            (dir rzqd)
                            (dir tcsds)
                            ($ cd qdrmpqgn)
                            ($ ls)
                            (165713 qmzgt.tnc)
                            ($ cd ..)
                            ($ cd rzqd)
                            ($ ls)
                            (dir cwhnmlv)
                            (57819 fcsjl)
                            (246864 pjnzdvd.gjm)
                            ($ cd cwhnmlv)
                            ($ ls)
                            (287539 mmnvqn.hqb)
                            (215636 pbnjt.zbn)
                            (124638 sqd)
                            ($ cd ..)
                            ($ cd ..)
                            ($ cd tcsds)
                            ($ ls)
                            (78812 gfmgb.wqj)
                            (218987 hnhfvz.dln)
                            (209640 mzzhqlq.zqp)
                            (102492 nml.ppg)
                            ($ cd ..)
                            ($ cd ..)
                            ($ cd ..)
                            ($ cd ..)
                            ($ cd szn)
                            ($ ls)
                            (dir fcsjl)
                            (dir snjntth)
                            (dir zjbp)
                            ($ cd fcsjl)
                            ($ ls)
                            (158019 jsv.pmz)
                            ($ cd ..)
                            ($ cd snjntth)
                            ($ ls)
                            (229510 dfvpvp)
                            (191061 fgplbptq.jlt)
                            (dir lfb)
                            (234911 lfsrwr.wcb)
                            (dir lrfcgzl)
                            (48031 stbbw)
                            (219691 vqgsglwq)
                            (dir zshh)
                            ($ cd lfb)
                            ($ ls)
                            (dir btj)
                            (99591 dhrjbvvg.gwm)
                            (137224 dzdfc.vqq)
                            (201972 jtzmqsvj.wnd)
                            (9704 mmnvqn.hqb)
                            (dir pwg)
                            (200308 snjntth.css)
                            (dir wcmhcfm)
                            (dir zwhvmln)
                            ($ cd btj)
                            ($ ls)
                            (dir rnbzdfgn)
                            (51799 wdhsm)
                            (dir wvf)
                            ($ cd rnbzdfgn)
                            ($ ls)
                            (117095 bsltmjz.tlv)
                            ($ cd ..)
                            ($ cd wvf)
                            ($ ls)
                            (dir ffpzc)
                            (dir ncbmgpsc)
                            (dir wtwrmjnt)
                            ($ cd ffpzc)
                            ($ ls)
                            (249919 lsth.fmf)
                            ($ cd ..)
                            ($ cd ncbmgpsc)
                            ($ ls)
                            (147899 dzdfc.vqq)
                            ($ cd ..)
                            ($ cd wtwrmjnt)
                            ($ ls)
                            (252366 pvpdv.jwz)
                            ($ cd ..)
                            ($ cd ..)
                            ($ cd ..)
                            ($ cd pwg)
                            ($ ls)
                            (280845 fcsjl.fjz)
                            (44300 sgwz.cdz)
                            (dir snjntth)
                            (229605 vqgsglwq)
                            ($ cd snjntth)
                            ($ ls)
                            (2053 pflvsnzs)
                            (143522 sgwz.cdz)
                            ($ cd ..)
                            ($ cd ..)
                            ($ cd wcmhcfm)
                            ($ ls)
                            (229329 qsznhwlw.vjg)
                            ($ cd ..)
                            ($ cd zwhvmln)
                            ($ ls)
                            (dir ffpzc)
                            (dir tjjzbf)
                            (dir wzcq)
                            ($ cd ffpzc)
                            ($ ls)
                            (dir ncnj)
                            (37497 vqgsglwq)
                            ($ cd ncnj)
                            ($ ls)
                            (40920 htbjhjq)
                            ($ cd ..)
                            ($ cd ..)
                            ($ cd tjjzbf)
                            ($ ls)
                            (47522 mczn.spd)
                            ($ cd ..)
                            ($ cd wzcq)
                            ($ ls)
                            (56662 ffpzc.vwp)
                            (dir snjntth)
                            ($ cd snjntth)
                            ($ ls)
                            (117276 wjlmgq)
                            ($ cd ..)
                            ($ cd ..)
                            ($ cd ..)
                            ($ cd ..)
                            ($ cd lrfcgzl)
                            ($ ls)
                            (267485 rsjmpph.qqz)
                            ($ cd ..)
                            ($ cd zshh)
                            ($ ls)
                            (dir ffpzc)
                            (dir gmn)
                            (dir snjntth)
                            (150048 tgtlh)
                            (32020 thfr)
                            (72152 vqgsglwq)
                            ($ cd ffpzc)
                            ($ ls)
                            (dir snjntth)
                            ($ cd snjntth)
                            ($ ls)
                            (224945 dpfpz)
                            ($ cd ..)
                            ($ cd ..)
                            ($ cd gmn)
                            ($ ls)
                            (238996 sgwz.cdz)
                            ($ cd ..)
                            ($ cd snjntth)
                            ($ ls)
                            (86775 dzdfc.vqq)
                            (19560 vshcmjj)
                            ($ cd ..)
                            ($ cd ..)
                            ($ cd ..)
                            ($ cd zjbp)
                            ($ ls)
                            (dir fcsjl)
                            (41522 nlvpb.fpf)
                            (dir nmtjtd)
                            ($ cd fcsjl)
                            ($ ls)
                            (276802 fcsjl.psm)
                            (197934 sgwz.cdz)
                            ($ cd ..)
                            ($ cd nmtjtd)
                            ($ ls)
                            (47477 dvqmqlgw.ths)
                            (51081 vqgsglwq)
                            ))

#+END_SRC


#+RESULTS: 2022-day7-input
: aoc22/day7input

#+NAME: 2022-day7-solution
#+BEGIN_SRC emacs-lisp :session "day7" :val day7=2022-day7-input
;;; Code:
(require 'cl-lib)
(defun aoc22/day7-part1 (commands)
  "Parse COMMANDS and return the sum of candidate dirs to delete.
I need to find all dirs with size at most 100000, and return the
sum of these sizes.  Directories that include directories also
get the size of the included directories, so I have to update the
size of the current directory and the size of all parent
directories."
  (let ((dirs (make-hash-table :test 'equal))
        (parents '("")))
    (dolist (entry commands)
      (let ((type (car entry)))
        (cond
         ((eq type '$)
          (let ((command (cadr entry)))
            (if (eq command 'cd)
                (let ((directory (symbol-name (caddr entry))))
                  (if (equal directory "..")
                      (pop parents)
                    (push (concat (car parents) "/" directory) parents))))))
         ((numberp type)
          (dolist (dire parents)
            (let ((current (gethash dire dirs 0)))
              (puthash dire (+ current type) dirs)))))))
    (let ((sum 0))
      (dolist (value (hash-table-values dirs))
        (if (<= value 100000)
            (setq sum (+ sum value))))
      sum)))

(defun aoc22/day7-part2 (commands)
  "Parse COMMANDS, create the dirs and find the smallest to delete.
We need the smallest dir that we can delete, that will free
enough space to reach 70000000."
  (let ((dirs (make-hash-table :test 'equal))
        (parents '("")))
    (dolist (entry commands)
      (let ((type (car entry)))
        (cond
         ((eq type '$)
          (let ((command (cadr entry)))
            (if (eq command 'cd)
                (let ((directory (symbol-name (caddr entry))))
                  (if (equal directory "..")
                      (pop parents)
                    (push (concat (car parents) "/" directory) parents))))))
         ((numberp type)
          (dolist (dire parents)
            (let ((current (gethash dire dirs 0)))
              (puthash dire (+ current type) dirs)))))))
    (let* ((values (sort (hash-table-values dirs) '<))
           (dirs-size (nth (1- (length values)) values))
           (unused (- 70000000 dirs-size))
           (freeup (- 30000000 unused)))
      (cl-dolist (directory values)
        (if (> directory freeup)
            (cl-return directory))))))

;;; Helper functions:

;;; Results vector

(vector (aoc22/day7-part1 aoc22/day7test)
        (aoc22/day7-part1 aoc22/day7input)
        (aoc22/day7-part2 aoc22/day7test)
        (aoc22/day7-part2 aoc22/day7input))


#+END_SRC

#+RESULTS: 2022-day7-solution
: [95437 1432936 24933642 272298]
** day 8
#+NAME: 2022-day8-input
#+BEGIN_SRC emacs-lisp :session "day8"
(defconst aoc22/day8test [[3 0 3 7 3]
                          [2 5 5 1 2]
                          [6 5 3 3 2]
                          [3 3 5 4 9]
                          [3 5 3 9 0]])

(defconst aoc22/day8input
  [[1 0 0 0 2 1 1 1 2 1 1 0 2 0 2 3 1 2 0 2 2 0 1 0 3 3 0 2 0 4 3 1 2 0 4 0 0 0 0 1 1 1 0 1 2 1 4 3 4 4 5 1 4 2 2 2 1 4 1 4 2 4 0 2 2 0 2 4 0 4 4 2 3 3 2 0 4 0 0 1 0 3 2 0 1 3 3 1 2 0 2 3 0 0 1 1 0 2 0]
   [1 1 1 1 1 0 2 0 1 3 3 2 3 2 3 2 1 0 2 1 1 1 4 3 1 2 3 2 1 4 3 2 1 3 4 3 3 3 2 1 2 4 2 1 1 4 1 3 1 1 5 5 1 4 1 5 5 1 1 5 5 1 1 0 3 3 4 2 1 0 0 1 2 2 2 1 0 1 2 0 4 3 3 0 0 0 1 3 0 0 3 3 3 0 1 1 0 1 0]
   [2 2 2 1 0 0 1 2 3 3 0 0 2 3 1 2 3 0 1 2 2 2 0 3 4 3 2 3 1 0 2 2 4 4 4 1 5 5 1 4 3 4 2 3 1 3 5 2 1 1 2 5 3 2 3 5 4 2 5 2 2 4 4 3 3 4 4 1 0 0 4 2 2 1 2 4 4 1 2 3 3 2 4 3 2 2 0 1 0 2 0 3 3 1 1 0 0 2 0]
   [2 1 2 2 1 0 3 1 1 3 1 0 1 0 2 3 3 4 3 2 1 2 4 3 1 0 4 1 3 3 0 1 2 5 3 5 1 4 4 1 5 1 5 3 2 5 5 5 1 5 5 3 4 1 3 2 5 3 5 2 5 1 2 5 4 4 4 5 3 4 0 2 4 0 0 4 1 1 3 4 0 2 0 2 1 3 3 2 3 1 0 0 0 1 0 2 0 2 0]
   [1 1 2 0 0 2 1 0 2 3 2 2 0 0 1 0 0 3 3 0 4 2 3 3 3 0 2 0 4 0 1 2 4 5 4 4 4 1 1 2 2 5 5 2 3 5 3 3 5 3 4 2 3 5 1 1 3 3 5 3 5 2 2 2 3 3 5 3 5 5 5 0 4 3 2 2 3 2 2 0 2 4 0 1 2 2 1 0 2 2 1 1 0 3 1 1 1 1 0]
   [1 1 2 1 0 2 1 3 1 3 3 1 2 0 1 4 3 2 3 2 0 3 1 2 2 3 3 1 2 4 4 3 4 2 3 2 5 4 4 1 4 4 2 3 3 2 4 1 1 2 3 3 3 4 1 1 2 2 3 2 5 3 1 5 2 1 5 4 2 5 5 1 3 3 2 4 3 4 2 2 4 2 1 1 2 3 4 1 3 3 1 3 2 3 3 0 3 0 0]
   [2 0 1 2 1 2 2 3 1 0 0 1 3 1 4 0 0 1 2 3 2 0 2 0 0 1 1 5 2 1 5 4 3 4 4 5 1 5 2 2 5 1 4 1 3 2 2 5 3 3 4 1 5 1 1 5 5 3 3 2 4 4 3 1 4 4 3 1 5 4 3 3 4 4 4 3 2 1 4 0 3 0 2 2 3 0 1 1 1 0 2 3 1 1 3 3 3 2 0]
   [2 2 2 2 0 0 2 1 2 0 1 2 2 3 4 0 2 1 4 4 0 3 2 3 5 2 2 2 5 1 2 2 2 1 1 4 2 5 5 4 3 5 3 2 1 2 4 5 4 6 3 6 5 2 6 3 4 4 5 4 4 4 5 4 4 1 3 1 3 3 3 1 3 3 4 2 2 1 4 0 3 3 1 4 1 2 1 3 4 0 3 2 2 2 0 1 3 2 3]
   [0 1 1 1 0 1 3 1 3 0 3 0 1 2 4 0 3 4 0 1 1 0 5 3 1 3 2 4 1 1 3 5 2 3 1 3 1 3 5 4 3 2 2 6 5 2 2 3 5 6 4 6 4 4 5 6 3 4 3 5 5 4 1 3 1 4 3 1 4 4 5 3 5 1 1 3 5 5 1 3 2 4 4 1 2 4 2 2 2 0 2 1 2 3 0 1 2 1 0]
   [3 3 0 1 2 0 3 2 0 0 0 4 4 1 4 2 2 4 0 0 1 2 2 5 3 4 2 3 2 5 1 3 3 5 4 1 1 2 5 6 2 2 6 6 5 5 6 3 2 6 3 4 4 4 4 3 4 2 3 2 6 3 5 4 4 2 1 2 3 4 2 3 5 1 4 2 2 4 5 1 3 3 2 1 3 2 4 3 2 4 3 2 1 2 2 1 2 0 1]
   [2 3 2 2 0 1 0 0 2 2 0 3 1 4 2 0 1 3 2 1 3 5 4 1 4 1 5 5 2 1 3 3 1 1 3 6 2 5 2 3 6 5 3 4 2 5 4 4 5 5 2 3 6 5 4 4 2 6 2 5 3 2 2 5 5 5 5 1 5 2 3 4 3 1 5 2 5 1 3 3 4 1 4 3 1 1 0 1 1 4 4 3 3 0 1 1 3 3 0]
   [2 3 1 0 3 2 0 3 2 1 3 3 2 0 3 3 3 0 1 3 5 1 3 4 5 2 4 1 1 3 3 1 2 3 5 3 4 6 6 3 2 2 5 4 3 6 4 3 5 4 3 3 6 4 6 6 5 6 3 6 3 6 5 3 4 4 6 4 5 1 2 3 2 1 4 2 5 5 4 3 3 4 2 3 4 2 0 4 4 3 4 1 1 1 0 2 1 1 3]
   [3 2 3 2 1 0 1 3 4 4 1 4 1 3 1 3 2 4 3 2 5 5 5 4 2 4 5 2 2 4 6 5 3 4 3 5 3 6 5 4 5 3 3 6 4 4 5 6 2 4 3 2 4 3 4 2 6 5 2 6 4 3 2 4 6 2 3 4 4 5 5 1 4 4 2 4 3 3 2 2 4 5 5 4 1 1 0 3 4 2 3 4 3 1 0 3 0 0 2]
   [2 3 2 2 1 1 3 0 4 4 0 2 4 3 2 4 5 4 5 3 3 4 3 5 2 5 2 1 4 5 6 6 2 6 6 5 5 3 2 3 5 5 6 3 6 3 2 6 4 2 3 5 6 3 4 2 3 4 3 3 5 5 5 2 3 6 5 6 5 4 5 5 3 4 5 4 2 1 4 5 3 3 1 3 3 0 1 2 4 3 0 3 0 2 0 1 0 3 3]
   [3 0 1 3 3 4 4 0 4 4 4 4 1 1 3 4 3 2 4 4 4 1 5 4 5 2 6 6 2 2 5 6 5 5 3 4 6 2 2 4 5 3 4 5 2 4 6 5 6 5 6 3 7 3 3 6 3 3 4 6 2 3 6 3 5 2 2 6 4 4 3 2 2 4 2 2 5 5 5 1 1 4 4 1 5 3 1 3 0 1 2 0 1 4 3 0 3 1 0]
   [0 2 1 0 3 1 4 0 2 0 1 4 3 2 2 5 1 4 3 3 1 5 5 4 3 4 2 4 2 3 5 2 2 2 4 4 6 4 3 2 4 5 3 4 7 4 6 3 5 3 7 3 5 3 5 4 6 7 3 3 3 4 4 3 5 3 6 6 5 2 6 4 6 3 2 6 5 1 2 5 5 4 2 2 4 4 5 2 0 1 2 4 1 3 2 4 2 3 1]
   [3 1 1 3 4 1 4 3 3 4 2 3 1 4 3 5 2 5 3 3 2 4 2 4 2 4 3 2 2 6 6 5 3 3 2 4 5 5 4 4 5 5 4 4 4 3 3 7 6 6 4 3 7 5 7 4 6 5 6 6 6 4 4 3 6 3 3 4 2 2 5 4 5 2 4 3 6 5 5 4 4 4 5 4 5 1 2 5 3 3 4 1 2 2 2 1 0 0 3]
   [1 0 0 1 4 1 0 4 4 4 2 1 1 3 2 3 3 1 5 2 4 1 4 6 4 3 2 6 2 6 6 2 6 2 2 2 7 4 6 3 7 7 3 4 4 7 7 5 3 3 7 6 7 5 4 7 4 3 7 4 6 6 7 7 3 6 3 4 6 5 2 6 3 4 5 5 2 5 5 3 1 1 1 2 5 1 5 5 2 4 2 2 0 3 3 2 3 4 2]
   [1 0 3 1 0 0 4 2 4 0 1 3 3 5 5 2 4 3 4 2 3 5 3 2 3 6 3 6 5 3 5 6 3 3 5 5 7 6 3 6 4 6 6 6 7 3 4 5 6 5 7 7 5 4 3 6 6 3 7 4 6 4 6 5 3 5 6 2 6 6 4 2 3 2 6 3 6 6 6 5 5 3 3 1 5 5 2 5 1 1 4 1 3 2 3 2 0 3 3]
   [0 1 0 4 1 1 4 0 2 3 2 5 2 4 2 2 1 2 3 3 2 6 6 2 6 6 2 5 6 6 3 6 5 3 6 3 7 3 3 4 4 4 4 3 4 3 4 4 4 5 4 7 3 6 6 3 5 4 3 5 5 6 5 5 4 4 4 3 6 4 4 5 4 3 2 5 6 2 2 2 3 3 5 2 2 5 5 1 2 5 4 3 2 2 1 4 4 1 3]
   [3 2 1 3 1 3 0 2 3 2 3 1 1 4 1 2 3 2 5 3 6 4 4 2 2 6 3 5 3 4 7 7 3 7 7 5 5 3 7 4 5 4 3 4 6 4 5 4 6 6 3 6 5 6 6 5 6 3 6 5 3 6 4 5 5 7 3 3 4 3 6 3 3 6 2 4 4 6 4 6 3 5 3 1 5 5 3 4 4 5 1 0 1 2 1 4 4 1 4]
   [2 4 0 0 1 4 2 3 3 4 4 5 3 2 5 4 2 3 4 5 5 4 6 2 5 5 3 4 2 5 3 6 4 6 5 3 6 5 3 6 4 5 3 3 3 4 3 6 5 5 6 4 5 5 4 7 4 7 4 6 6 3 3 7 6 7 7 5 6 6 4 4 2 5 6 6 2 5 6 4 5 2 6 1 1 1 1 5 5 1 1 3 4 4 0 1 1 0 2]
   [1 4 1 2 4 3 1 0 3 1 2 1 4 4 1 4 5 2 4 5 3 3 2 2 3 3 4 2 7 4 3 5 6 6 3 4 4 5 3 6 7 4 6 5 4 4 7 5 7 7 4 7 7 6 6 6 5 7 6 6 7 5 5 3 3 5 4 7 3 6 3 7 6 5 5 3 5 5 3 2 4 5 5 2 4 4 2 4 4 1 5 5 5 4 0 4 4 2 2]
   [3 2 2 0 3 2 1 2 2 4 5 4 4 2 3 4 4 6 3 2 6 6 2 4 6 5 2 6 5 7 5 5 5 7 7 5 7 4 3 5 5 8 4 6 7 8 7 4 7 7 7 8 6 4 8 8 7 7 6 7 5 5 6 3 3 3 6 3 5 6 4 5 3 4 2 4 6 6 2 3 2 5 4 2 4 5 2 3 4 4 2 2 3 0 2 1 0 3 0]
   [3 4 1 0 1 2 0 3 5 4 4 2 5 4 5 2 6 6 6 6 6 5 4 2 4 5 5 5 6 3 5 3 3 5 7 7 7 3 5 8 8 5 8 6 6 7 8 4 8 6 8 6 8 4 4 8 6 8 6 8 8 6 4 6 5 7 3 6 7 5 7 4 5 5 7 5 4 3 6 3 4 6 3 4 4 4 5 4 3 2 3 5 2 1 0 1 3 3 3]
   [0 2 0 3 3 2 1 3 3 5 4 5 2 2 5 6 4 6 6 5 3 6 4 5 4 5 3 3 4 7 7 3 7 7 5 6 7 5 4 5 6 7 8 8 6 7 7 8 5 7 7 4 6 8 6 4 4 4 7 6 7 7 7 4 7 5 5 3 7 4 5 4 4 5 4 7 3 4 3 5 4 4 6 6 6 4 4 2 2 2 1 4 2 3 4 3 0 1 4]
   [4 4 3 3 1 2 4 2 5 1 4 4 1 2 3 2 3 5 5 6 4 3 2 5 3 6 3 4 3 4 3 7 7 4 8 6 6 8 5 5 8 8 4 8 4 4 8 8 4 5 7 8 8 8 7 4 8 8 5 4 7 5 6 6 6 8 6 4 6 7 4 5 4 6 5 3 6 6 6 3 5 4 4 5 2 2 6 1 4 3 5 3 5 3 5 0 4 0 3]
   [4 0 1 0 1 1 3 4 3 5 4 4 4 5 5 4 6 5 6 4 5 2 3 4 7 7 3 7 5 7 5 6 7 8 5 7 7 8 6 8 5 8 7 4 4 6 6 7 8 4 7 8 8 7 6 7 8 8 6 5 6 8 4 5 5 7 6 5 7 6 7 3 3 3 6 7 6 5 3 5 3 2 5 2 2 5 4 1 2 4 5 3 5 1 4 4 3 0 1]
   [2 3 1 0 2 3 1 1 1 5 4 1 2 3 2 6 4 6 6 5 4 3 6 4 6 7 6 6 5 5 5 5 4 4 7 8 4 4 8 8 8 7 4 4 7 7 8 8 6 5 6 5 8 6 8 5 8 6 8 6 8 7 4 5 5 5 5 4 4 7 5 6 3 5 5 3 5 5 4 2 5 6 6 3 6 3 4 4 4 5 4 4 4 2 3 1 0 4 1]
   [4 4 0 4 1 4 5 1 1 2 3 2 1 6 3 3 3 5 5 2 4 7 6 3 4 5 4 7 4 3 3 6 6 6 7 6 6 5 6 7 7 8 4 4 5 5 9 7 6 6 9 9 6 9 7 5 5 4 4 6 5 7 8 8 8 5 7 8 5 4 7 7 4 3 3 5 6 5 3 6 6 4 6 4 4 6 2 4 1 1 3 1 4 1 2 1 2 1 3]
   [4 2 3 1 3 3 1 1 5 3 1 1 2 4 2 2 3 2 2 2 6 3 3 4 3 5 6 6 7 6 5 7 7 5 4 6 8 6 7 4 4 5 7 9 9 8 6 8 8 6 6 9 5 8 5 5 6 6 7 7 6 4 4 5 6 4 8 5 8 5 7 3 5 3 7 4 5 5 6 5 3 3 5 5 2 2 6 4 4 5 1 5 5 2 3 3 3 0 1]
   [2 0 3 3 1 2 2 4 5 1 3 1 4 6 2 2 2 2 5 5 4 7 4 6 6 4 6 7 4 6 5 6 7 7 8 8 7 5 7 6 9 8 7 5 9 7 5 9 5 8 8 9 9 7 6 5 6 9 5 7 7 8 5 7 8 8 8 5 6 4 7 5 6 5 3 6 4 4 6 3 3 4 6 4 5 5 4 3 5 5 1 2 5 4 4 3 5 0 3]
   [2 3 2 5 1 5 1 1 4 5 2 5 3 3 5 6 5 4 4 5 7 5 4 3 4 4 3 5 5 5 5 6 5 8 6 8 7 8 6 5 7 6 5 9 5 8 7 8 5 7 5 8 7 6 5 9 8 9 6 6 8 5 8 5 4 7 6 6 6 8 4 6 4 5 5 3 7 3 7 6 5 7 4 5 4 2 4 4 4 4 1 2 4 4 5 3 5 2 1]
   [2 2 2 3 3 5 4 2 3 1 4 6 2 4 5 5 5 3 6 4 4 5 5 4 7 5 7 7 4 8 8 4 6 8 6 7 4 6 7 9 7 9 8 9 5 5 6 8 9 7 6 5 7 8 9 6 5 9 5 5 8 7 7 9 8 5 8 8 5 4 7 8 8 5 3 3 4 4 5 7 5 3 5 6 2 2 5 4 3 2 3 4 2 2 5 5 4 3 3]
   [1 0 1 5 4 2 4 1 4 3 4 5 6 4 2 5 2 3 3 5 3 5 6 7 5 6 5 7 7 4 6 8 7 6 6 8 9 9 6 5 8 6 8 5 7 8 5 7 6 6 7 8 7 8 7 8 6 8 7 9 9 8 5 7 9 8 8 7 5 7 6 8 5 4 7 7 4 5 6 4 3 4 5 6 5 6 4 2 6 6 3 1 3 3 3 2 2 2 4]
   [3 0 1 1 4 4 3 4 4 4 6 2 6 6 3 4 3 6 3 3 7 5 3 6 3 4 5 8 4 5 8 5 6 8 5 8 7 5 7 8 7 5 7 7 7 7 6 8 9 6 6 7 8 7 9 7 9 5 7 7 7 6 7 8 7 6 4 4 8 6 4 6 6 5 4 4 6 5 3 3 3 6 4 6 3 2 6 5 6 6 3 3 2 3 5 2 1 4 3]
   [4 2 1 5 2 4 3 5 1 2 3 2 4 6 5 4 3 4 6 5 4 5 7 6 5 6 5 7 6 7 4 4 6 5 7 5 6 6 6 7 5 5 9 6 8 6 8 7 9 8 6 9 6 9 6 7 5 6 7 6 8 7 5 5 6 9 8 4 6 4 8 8 6 7 6 7 5 4 7 5 3 3 5 7 4 4 2 3 3 2 4 4 2 4 3 3 4 1 1]
   [4 1 3 3 2 5 2 4 2 3 3 3 4 5 4 4 2 4 6 5 6 3 3 4 6 6 5 5 5 8 7 5 4 6 5 7 8 8 7 8 6 8 8 8 8 7 8 8 6 9 6 8 7 7 9 8 6 5 5 9 7 8 6 6 8 9 5 8 7 4 5 5 8 6 4 4 6 5 3 4 3 7 7 5 6 6 2 4 5 2 6 3 2 4 5 1 4 3 3]
   [1 5 4 2 4 4 5 4 3 4 4 2 4 6 4 6 7 4 6 3 3 3 4 6 6 5 7 8 5 6 8 6 8 9 9 7 8 7 7 9 8 5 6 9 8 8 7 7 8 6 7 8 7 6 9 6 6 9 9 7 8 5 9 9 5 7 8 7 9 6 4 6 6 6 4 8 4 4 3 4 3 3 6 4 3 2 3 3 2 2 4 4 3 5 2 2 4 3 5]
   [4 1 3 1 1 2 3 2 2 3 2 2 2 3 5 6 7 5 5 4 7 3 4 5 5 4 7 4 7 4 8 5 9 5 8 9 6 5 8 5 9 8 7 9 6 8 6 6 6 6 9 7 6 6 6 9 9 9 7 8 5 8 9 7 8 5 8 6 6 4 5 4 7 5 7 7 7 5 4 7 7 6 6 4 5 2 3 4 3 3 3 3 3 4 3 4 4 4 2]
   [4 2 4 3 3 3 1 2 2 4 3 4 6 2 6 4 5 6 7 7 7 6 3 5 7 6 8 5 7 8 6 8 6 8 6 8 7 5 9 6 9 6 6 8 7 6 8 8 9 6 7 9 7 7 6 8 8 9 9 6 6 7 8 7 9 5 6 8 5 5 8 6 5 5 7 4 7 5 5 5 4 4 5 4 6 5 2 2 3 5 5 6 6 3 3 3 1 2 3]
   [4 5 5 2 1 1 2 2 5 2 6 5 4 2 4 4 7 7 3 4 7 4 4 4 6 8 5 5 4 4 6 9 9 8 8 7 8 7 6 9 7 7 8 9 7 8 7 6 9 7 8 7 7 8 9 9 8 9 8 8 6 8 5 7 9 7 9 9 8 6 4 7 4 5 8 8 5 6 7 7 3 6 3 4 5 2 2 5 2 5 4 4 3 1 1 4 4 5 5]
   [2 1 5 2 5 4 1 4 6 3 6 6 3 6 3 7 4 7 4 7 3 7 5 5 8 8 7 4 4 5 8 7 7 8 6 8 6 5 6 7 8 9 9 6 6 7 6 6 6 7 6 8 9 8 7 9 9 6 8 8 7 8 6 5 6 7 5 6 9 8 5 5 5 7 4 6 8 4 6 7 3 7 3 3 5 3 3 2 4 3 6 2 6 1 4 5 2 5 4]
   [2 3 2 2 1 4 3 3 6 4 3 5 3 4 4 4 6 4 3 3 7 3 6 5 8 5 5 7 4 5 6 6 5 7 6 7 9 6 8 8 8 8 6 6 9 9 6 9 7 8 8 8 9 8 6 6 8 7 9 7 7 6 7 7 7 7 8 9 9 5 5 4 7 5 7 8 6 5 6 4 4 6 3 5 6 5 5 5 5 2 3 5 2 2 3 5 2 4 1]
   [4 3 1 4 4 5 5 1 3 2 4 2 6 4 2 6 3 4 3 7 3 3 8 7 4 4 4 4 6 6 6 5 6 5 8 5 6 8 6 7 7 6 9 7 9 7 8 7 9 9 8 7 7 8 7 7 8 8 7 6 6 8 8 7 9 7 7 7 6 9 8 7 5 7 5 7 8 5 5 4 7 4 3 4 6 3 6 4 3 6 2 5 2 1 3 5 4 2 5]
   [3 4 1 2 5 4 1 3 5 4 5 3 6 2 5 7 6 4 5 5 5 4 5 4 7 8 4 5 5 8 6 9 7 7 5 8 9 9 6 7 6 8 7 8 9 8 9 8 8 7 9 8 8 7 9 7 9 7 7 6 9 8 8 6 6 7 8 9 5 8 6 6 4 6 7 5 4 4 5 3 7 4 6 7 3 5 2 4 6 5 5 5 4 2 3 1 3 4 1]
   [3 5 3 5 1 1 3 5 6 5 2 2 2 3 2 7 5 4 3 3 3 6 6 5 8 4 6 8 7 5 7 5 6 8 8 5 5 9 7 9 7 9 9 8 7 9 7 9 7 9 7 9 9 8 7 8 8 8 6 7 8 9 8 7 5 5 9 6 6 9 6 6 7 4 7 7 7 7 8 6 3 3 3 5 4 6 5 6 5 3 6 2 2 3 1 2 5 2 1]
   [3 4 2 1 3 1 4 2 5 4 5 5 2 5 2 5 4 7 3 7 4 5 5 7 4 5 4 6 7 6 8 8 9 5 8 5 7 6 9 8 9 9 9 7 9 8 7 7 9 8 8 8 7 8 7 8 7 6 7 8 9 9 8 6 6 6 8 5 7 6 7 6 4 7 8 6 5 4 8 5 7 5 4 4 5 5 3 3 4 4 3 2 4 5 4 5 5 3 3]
   [4 2 3 5 1 4 5 5 4 6 2 2 2 6 5 3 6 4 5 3 5 7 5 8 6 5 6 7 5 7 7 7 9 5 8 6 6 7 7 8 6 8 6 6 8 8 9 7 7 8 9 7 8 9 8 8 8 8 8 7 9 8 7 8 8 5 7 6 6 7 7 5 4 8 4 6 4 7 4 6 6 7 3 3 7 6 6 5 4 4 4 4 4 6 4 1 3 1 1]
   [4 4 3 2 2 3 3 3 5 5 6 2 4 6 7 6 7 4 6 4 4 6 8 4 7 8 5 4 5 9 6 7 5 7 9 7 8 7 7 7 9 8 7 8 7 8 9 9 8 7 9 8 8 8 9 9 7 7 9 9 6 7 7 6 9 8 7 9 9 5 5 7 5 6 7 6 5 7 7 4 4 5 6 4 5 7 5 4 5 5 5 6 4 2 2 1 3 2 4]
   [4 3 4 3 3 4 5 2 5 5 5 6 6 2 5 3 3 5 5 6 5 4 4 5 7 4 4 4 4 9 6 7 9 7 6 6 8 7 9 8 8 7 8 9 8 7 9 9 8 8 8 7 7 9 7 7 7 9 6 9 7 9 7 6 6 6 6 7 7 8 9 7 8 7 6 6 6 6 5 7 7 3 5 3 5 3 4 6 6 5 4 4 4 6 3 3 5 2 5]
   [2 5 4 4 5 2 2 2 6 4 3 6 6 5 3 7 3 5 3 6 5 6 7 6 8 4 5 6 6 6 6 6 7 6 5 9 8 6 9 8 7 8 9 9 8 7 7 7 9 8 9 7 8 9 7 8 7 8 6 8 6 8 9 9 9 9 9 9 5 8 5 6 8 6 4 6 7 5 4 6 5 3 5 6 7 7 3 2 5 4 4 5 5 6 4 3 4 3 3]
   [5 4 1 3 4 3 2 3 5 6 6 4 6 2 6 4 5 3 4 5 4 4 5 4 8 5 8 5 6 7 7 7 8 5 5 9 8 8 8 9 7 6 6 6 7 8 7 7 7 9 7 7 8 8 9 8 9 9 8 9 9 7 8 8 7 9 8 8 7 5 9 6 7 8 7 8 6 5 6 4 6 3 5 4 3 5 6 2 4 5 3 4 2 4 2 1 3 2 3]
   [5 2 2 4 1 2 2 2 6 6 2 2 3 2 5 7 5 3 7 4 4 5 4 5 5 5 6 8 5 5 7 6 6 9 8 5 6 8 7 7 6 8 9 7 9 7 9 7 8 9 7 7 9 9 9 8 7 6 9 8 9 8 9 8 9 7 7 7 9 6 9 6 7 6 5 7 5 6 5 4 4 6 3 4 6 7 2 5 5 5 4 5 3 3 5 3 2 1 3]
   [4 1 2 5 2 2 2 5 4 4 4 4 5 6 4 6 3 5 7 3 7 6 7 7 8 4 5 5 4 5 9 5 6 6 9 8 8 8 9 6 9 8 6 7 7 8 8 9 7 9 9 9 7 9 9 8 9 7 7 9 8 9 8 9 5 6 9 7 6 7 7 7 7 5 8 8 7 8 5 3 7 6 3 4 6 4 2 4 2 5 5 2 6 2 4 1 5 5 1]
   [4 5 4 2 2 2 1 3 6 2 6 3 2 2 2 7 6 5 6 5 5 7 7 5 6 4 7 7 7 9 5 6 8 8 6 6 5 7 7 8 8 6 9 7 6 8 8 8 9 8 7 9 8 9 8 7 7 8 6 9 6 7 8 9 7 5 5 8 5 6 9 7 8 4 8 4 7 6 4 5 5 5 5 7 5 4 5 3 5 4 6 3 5 3 5 1 4 4 2]
   [1 3 5 1 2 1 5 5 2 5 3 5 4 6 5 3 6 3 7 3 6 4 7 4 6 6 8 8 7 8 9 7 9 5 9 9 6 7 9 9 9 6 9 6 7 9 7 8 7 7 8 9 8 8 7 6 7 7 7 9 6 6 8 6 5 5 5 9 9 5 5 7 5 6 8 5 7 8 8 6 7 6 6 6 4 4 6 3 3 2 3 6 3 5 4 1 2 4 1]
   [4 4 3 1 2 1 4 2 5 5 5 5 3 3 5 7 7 4 6 6 3 6 4 8 7 5 4 6 8 7 7 6 8 6 6 8 7 7 9 9 9 8 7 7 9 8 8 6 6 7 7 8 6 6 7 9 7 8 6 8 8 9 6 5 9 8 9 7 7 9 7 5 7 4 4 5 7 7 7 5 7 4 6 6 7 4 4 2 5 2 4 2 6 3 1 3 2 3 2]
   [4 1 3 5 4 4 2 3 5 5 4 4 6 2 3 4 7 4 4 4 5 6 3 6 7 8 5 8 8 6 8 6 5 8 5 6 9 7 8 9 7 7 8 9 8 8 8 6 9 7 9 8 6 7 6 6 7 6 8 7 9 7 9 6 6 5 5 5 9 7 8 5 8 5 6 8 8 4 3 5 4 3 5 5 3 7 3 4 5 6 5 3 3 4 3 3 4 4 4]
   [1 3 1 5 1 3 4 5 5 3 2 3 4 3 3 4 5 3 3 6 5 5 7 5 4 4 5 4 6 8 7 7 6 6 6 5 9 7 5 6 6 7 7 6 7 6 7 9 6 6 6 6 6 6 6 7 6 6 9 9 7 9 5 8 8 9 8 7 8 8 5 5 6 7 7 7 8 4 3 7 5 6 7 7 7 2 6 2 3 5 2 2 6 3 2 2 4 2 5]
   [4 3 4 4 4 2 2 1 5 6 2 5 3 6 4 4 5 6 4 6 4 6 6 7 5 6 4 8 6 6 6 9 7 9 8 6 9 8 5 6 9 8 7 6 8 6 9 8 8 6 7 7 9 7 8 8 8 9 6 9 9 7 6 9 7 6 5 5 7 9 7 4 4 7 7 4 5 6 6 4 5 5 5 3 4 5 4 5 6 3 4 3 3 5 1 5 2 4 1]
   [4 5 3 5 3 1 2 1 5 6 4 4 6 2 3 5 4 7 4 6 5 3 7 6 4 6 8 6 4 5 8 4 5 5 8 8 9 5 5 5 5 6 7 9 6 6 8 9 6 6 7 7 9 6 9 6 6 6 7 9 7 9 8 8 9 7 5 8 9 8 4 5 5 4 7 8 5 5 3 5 3 7 5 7 6 6 2 5 5 6 3 4 2 4 4 1 5 3 2]
   [3 3 2 3 5 5 4 3 5 6 3 5 6 5 4 4 4 5 7 5 5 3 6 6 5 4 6 6 6 8 8 5 7 7 7 7 9 9 5 8 9 7 8 7 7 8 6 6 6 7 6 9 8 9 7 7 9 6 7 9 6 9 8 5 5 6 6 7 5 6 4 8 6 6 5 8 6 3 7 6 7 4 5 4 3 2 4 4 4 3 2 3 5 1 5 1 2 2 5]
   [2 1 3 5 3 4 3 1 3 2 5 4 2 3 2 5 6 4 5 7 6 5 3 5 4 4 4 5 4 4 7 6 4 8 9 8 5 6 8 8 7 5 8 5 6 6 7 6 9 9 9 8 6 7 8 6 7 6 5 7 5 5 7 9 8 9 7 6 8 5 4 7 6 8 4 4 4 5 7 3 6 3 5 5 4 2 3 2 4 4 3 2 4 4 1 3 5 4 3]
   [1 2 4 5 2 2 5 2 2 2 3 5 2 4 4 3 4 6 5 6 7 7 4 7 5 8 4 5 4 4 5 5 7 7 6 9 5 7 9 7 9 6 8 7 8 5 8 9 7 6 6 9 9 6 7 6 8 7 8 8 6 8 5 9 9 5 8 7 5 4 4 4 6 4 5 8 3 5 3 7 3 4 3 7 3 6 2 3 5 5 6 5 2 1 4 4 2 4 5]
   [4 4 2 4 1 4 3 3 2 4 6 2 6 4 5 4 6 4 4 5 7 3 7 6 6 4 7 5 8 5 8 4 8 8 4 8 9 6 5 5 7 7 6 6 5 8 5 5 8 5 7 8 8 5 6 9 8 7 6 8 7 9 8 6 9 6 5 7 5 5 4 6 6 7 4 4 7 5 5 7 3 6 4 6 5 6 6 2 2 2 3 1 4 1 1 4 4 4 5]
   [1 1 2 3 1 5 2 3 3 2 5 6 6 5 2 3 4 3 7 3 7 6 6 7 6 3 7 8 5 8 4 5 8 5 7 6 9 6 8 7 7 7 5 5 9 8 6 8 5 9 7 5 7 9 9 6 7 7 5 9 6 7 7 5 8 8 4 5 8 8 4 6 6 4 8 6 5 5 4 5 4 3 3 4 2 4 5 2 4 5 3 4 5 5 5 4 2 2 4]
   [1 3 0 2 2 4 4 2 2 1 1 2 5 4 6 6 5 4 4 6 5 4 6 4 3 6 3 7 6 4 4 5 7 4 4 6 5 7 9 8 8 5 7 9 5 8 5 7 5 8 6 5 7 9 7 8 9 7 7 9 8 8 8 5 6 6 4 7 8 8 6 6 8 6 6 7 4 3 3 5 5 3 3 5 2 2 6 2 6 4 2 1 2 5 3 5 3 2 2]
   [2 4 3 1 5 5 5 5 3 5 5 5 3 4 2 6 2 4 6 7 6 4 3 6 4 5 5 3 7 5 8 7 4 7 6 5 4 8 9 6 8 7 6 9 9 5 8 8 7 9 8 7 9 6 7 5 9 7 6 6 6 7 5 6 7 5 5 6 7 7 7 4 6 4 6 7 5 3 6 3 4 3 5 5 3 4 6 4 5 4 4 2 4 4 3 1 2 5 3]
   [3 1 3 4 4 2 3 1 3 4 2 3 3 2 2 5 3 5 3 2 5 3 7 5 3 7 7 3 4 4 6 8 7 6 5 8 4 5 7 5 7 6 6 9 9 7 7 6 8 5 6 7 7 6 7 8 7 5 9 9 7 7 4 4 7 4 6 7 7 5 7 5 3 3 7 7 4 3 3 3 4 4 2 2 2 3 3 4 2 3 4 3 1 4 2 1 2 1 1]
   [2 3 4 0 5 1 1 3 1 4 1 1 5 2 2 6 2 3 3 3 7 4 7 4 7 5 7 6 7 7 8 5 7 6 8 5 4 6 4 8 5 7 5 9 6 6 6 7 5 5 7 5 7 9 6 6 6 7 8 7 5 5 5 7 4 4 4 8 7 5 7 4 5 4 4 6 7 3 3 6 4 6 6 3 6 4 3 4 3 5 2 1 1 2 5 5 2 4 0]
   [4 3 4 3 1 4 1 3 4 4 2 2 5 2 4 3 2 2 4 4 3 7 4 7 3 3 7 6 3 3 6 5 8 5 7 4 4 4 4 4 6 8 8 4 5 5 9 9 7 9 7 8 8 8 8 6 7 4 5 6 4 8 7 6 7 6 7 4 4 7 5 4 3 3 6 4 7 3 6 5 6 3 5 2 2 3 5 3 4 4 4 1 1 2 4 2 1 1 0]
   [0 0 4 1 0 1 1 4 5 2 1 5 3 3 5 2 2 2 3 2 5 4 7 5 5 4 6 3 4 3 7 4 5 8 5 5 4 8 4 8 4 8 8 7 7 5 7 5 5 4 6 8 4 5 8 6 7 8 8 5 8 4 5 4 5 5 7 4 6 4 5 7 4 3 3 4 5 7 4 3 6 4 6 6 5 6 5 3 3 2 3 5 2 1 2 4 1 2 3]
   [2 3 3 4 4 1 4 3 4 1 4 4 1 1 2 5 6 4 6 2 4 6 4 5 5 4 4 6 4 6 5 5 7 5 5 7 6 5 5 6 6 7 8 4 5 4 4 6 6 7 7 6 7 5 5 8 8 7 8 4 8 6 6 6 4 5 4 7 5 3 4 3 6 4 3 5 7 4 5 5 2 2 4 3 6 5 6 5 2 3 4 4 4 5 3 4 0 3 0]
   [1 2 1 2 2 4 1 4 3 5 5 5 1 3 5 5 5 5 5 6 4 5 4 4 7 7 6 7 3 4 5 5 5 4 5 5 6 7 4 5 5 6 5 7 5 7 5 4 6 7 5 4 8 6 8 8 8 4 6 5 8 4 5 4 5 8 8 3 5 7 4 3 3 6 7 3 3 3 4 2 5 3 5 4 5 2 6 3 3 1 4 3 4 4 4 4 0 3 1]
   [4 2 1 2 4 4 4 2 2 3 4 4 3 2 1 4 4 6 3 6 4 6 3 4 2 5 7 3 6 6 4 3 3 4 4 5 7 4 7 8 8 5 5 7 7 7 7 4 6 6 4 5 4 6 5 6 5 6 4 7 5 7 8 7 6 7 3 3 3 4 4 6 7 4 6 3 5 6 4 4 2 2 4 3 4 3 3 4 1 1 4 1 5 2 1 0 4 3 0]
   [1 3 4 2 1 4 2 4 3 5 2 2 2 3 1 1 4 4 4 6 2 4 6 5 3 5 3 5 6 6 5 7 7 7 6 3 5 3 6 7 4 6 4 7 8 8 5 5 8 7 6 8 4 8 4 6 8 8 4 6 6 8 7 6 4 4 6 6 3 7 5 6 3 6 4 2 2 4 2 2 4 4 6 4 6 3 5 4 5 1 2 3 4 2 1 4 1 1 1]
   [1 4 1 1 3 2 2 0 3 4 2 1 2 1 5 2 1 3 2 3 5 4 6 4 2 2 4 6 6 3 6 6 6 4 3 3 5 3 4 6 7 8 8 6 5 5 6 6 5 5 4 8 8 7 4 5 8 7 8 4 5 7 5 7 4 3 3 7 3 3 3 5 3 3 6 4 6 4 6 6 2 2 5 6 4 2 5 1 2 3 3 2 1 4 3 4 0 1 4]
   [2 1 3 2 3 1 3 3 3 4 1 1 3 5 1 4 1 2 3 4 4 3 5 2 5 2 4 2 7 7 7 6 3 6 6 5 5 4 3 7 7 4 6 7 4 7 7 5 5 4 5 8 7 5 7 4 4 7 5 4 5 7 6 3 6 7 4 6 4 7 3 7 6 6 3 5 6 4 2 6 2 6 6 3 1 1 2 5 4 4 4 1 5 1 3 1 1 1 3]
   [3 1 0 3 2 0 3 1 2 4 4 4 2 4 5 3 3 2 3 5 3 4 4 3 5 5 5 3 4 4 5 3 4 4 5 6 4 5 7 4 5 6 3 6 4 7 5 3 6 5 7 4 7 3 4 4 7 4 3 5 5 4 3 3 6 4 6 4 6 3 6 4 2 6 4 4 2 5 3 3 6 6 3 5 3 3 5 3 5 4 2 2 3 2 3 3 2 3 1]
   [3 1 4 2 4 2 3 3 2 1 2 3 4 3 4 3 4 5 2 6 6 4 5 6 2 2 6 2 2 5 3 6 7 6 7 7 7 3 7 3 5 6 5 6 3 3 3 6 7 6 5 7 3 5 5 5 5 5 5 4 5 4 6 7 6 4 5 5 6 5 4 3 6 5 2 3 6 4 5 5 5 6 3 2 4 3 5 4 1 5 4 1 1 3 4 2 3 3 4]
   [2 2 0 1 4 4 4 1 0 2 3 1 4 3 3 5 3 1 5 4 6 2 3 2 4 2 4 6 2 5 3 3 6 5 6 6 3 7 3 3 7 6 4 7 4 6 7 6 4 5 4 6 4 7 6 6 5 6 6 6 4 3 7 4 5 5 7 6 6 3 2 3 3 5 5 3 4 5 5 6 3 4 2 1 3 4 5 4 2 2 4 4 4 4 1 3 1 1 2]
   [3 3 1 4 4 2 4 3 4 4 2 1 1 4 2 2 5 2 2 1 2 4 6 6 5 6 3 3 5 2 2 6 6 5 4 5 3 3 4 6 3 3 3 7 4 6 3 7 7 3 5 3 7 6 6 4 3 4 3 5 6 7 5 5 5 3 5 4 4 3 6 6 5 6 4 2 4 4 5 2 5 1 3 2 1 5 1 2 2 3 0 1 1 3 4 2 2 0 2]
   [2 0 3 3 3 4 2 1 1 3 4 4 3 2 2 3 3 3 5 4 2 4 3 3 6 5 4 4 3 4 6 5 5 3 3 5 6 3 3 7 3 4 4 7 5 6 6 4 7 5 6 7 4 7 7 6 6 3 7 5 6 5 5 4 5 6 2 2 5 6 2 2 2 2 5 3 3 3 3 4 3 3 2 4 2 1 5 5 2 1 2 0 0 0 0 1 4 0 1]
   [1 3 3 0 0 1 0 4 4 1 3 0 0 2 5 2 1 1 4 3 3 3 3 5 6 2 6 5 5 2 5 2 5 2 6 6 3 6 7 3 3 4 3 7 7 7 3 6 4 6 6 4 7 3 3 6 4 4 4 4 5 4 3 2 3 6 4 4 6 6 5 3 2 5 3 6 6 2 2 2 2 3 2 2 4 1 5 4 1 2 0 0 4 4 0 4 2 0 3]
   [1 0 2 3 3 1 0 3 1 2 0 1 2 2 5 1 3 5 4 4 3 4 2 4 2 4 6 5 5 3 3 6 5 3 4 6 6 6 4 5 3 6 3 5 3 3 6 7 4 3 4 5 4 6 4 7 3 7 4 3 3 3 4 3 5 6 4 5 4 6 5 4 5 5 2 2 3 3 1 4 5 5 3 4 3 4 5 2 3 1 1 1 3 2 1 4 1 0 2]
   [2 1 2 2 3 0 0 1 0 3 4 2 1 3 1 5 5 3 5 3 2 4 5 1 5 2 6 3 2 2 2 5 5 6 6 6 6 6 3 2 2 3 3 6 6 3 3 2 6 7 4 6 5 3 6 3 3 4 4 6 4 5 6 5 2 5 2 6 2 5 4 3 2 4 6 5 1 1 3 1 2 2 1 5 1 2 3 1 4 3 1 0 0 4 1 4 3 2 2]
   [2 3 2 1 0 1 0 4 4 2 4 3 4 4 1 1 3 3 1 5 4 1 5 1 5 2 3 5 4 2 3 3 6 6 5 5 4 6 4 5 6 3 3 2 5 4 4 4 4 3 6 3 2 3 6 4 6 5 3 4 5 2 6 5 4 2 2 4 5 5 4 2 6 1 3 5 5 2 5 3 1 3 2 1 4 4 1 4 0 4 2 1 1 2 2 0 2 3 1]
   [2 3 0 2 1 0 1 1 3 1 3 4 2 3 1 4 4 2 3 1 2 1 3 3 5 2 3 2 3 1 4 2 6 4 2 3 6 4 5 5 6 2 2 3 3 5 2 2 6 6 2 3 2 2 6 4 5 5 5 6 3 2 5 5 5 5 4 2 4 5 6 5 2 2 5 5 5 3 1 3 3 1 1 5 0 2 0 2 3 1 1 4 2 4 2 2 3 0 3]
   [1 1 2 1 2 2 1 3 2 4 3 4 1 2 3 4 2 4 4 5 4 5 5 2 4 3 5 5 4 1 1 1 6 5 3 6 4 3 6 3 5 4 3 4 3 3 6 4 3 6 6 2 5 3 4 5 2 3 4 3 2 4 5 5 2 6 4 3 6 5 4 3 2 5 3 4 3 5 1 2 2 4 2 3 0 4 1 0 2 2 1 3 0 1 3 1 0 3 2]
   [3 0 3 3 3 3 0 1 1 0 2 4 1 2 2 0 1 1 4 3 5 4 5 5 2 4 1 1 3 4 3 2 1 3 3 2 5 5 5 6 6 4 3 5 2 6 5 2 5 2 3 2 5 6 2 5 5 6 4 3 2 2 4 2 2 5 6 4 4 4 2 5 2 3 3 2 2 1 3 4 4 0 1 4 2 2 0 4 4 4 4 0 0 3 3 0 0 2 3]
   [1 0 3 3 0 2 2 3 1 3 1 0 3 0 1 3 1 3 2 3 4 3 5 4 1 4 1 3 1 2 3 2 3 4 3 4 5 3 2 2 4 6 5 2 6 6 3 6 3 2 2 5 4 2 3 6 4 3 3 6 3 4 2 5 3 3 3 3 1 4 4 5 5 5 4 2 5 3 3 1 4 0 3 0 2 1 4 2 2 3 4 2 3 2 1 1 0 0 3]
   [1 1 0 1 2 3 1 2 2 3 2 1 4 2 4 3 0 1 4 0 3 3 4 5 3 2 5 4 2 5 1 1 5 5 4 4 5 5 1 4 4 5 4 6 2 6 3 6 3 6 2 3 3 6 4 4 4 4 2 5 4 3 5 3 1 2 2 3 3 5 4 1 5 5 2 2 1 2 1 4 3 2 3 1 0 4 3 3 2 0 2 1 1 1 0 0 2 1 3]
   [2 0 2 2 1 1 3 1 2 2 1 0 4 0 2 0 2 0 0 3 3 4 1 0 4 3 2 3 2 4 4 3 1 2 5 3 1 4 4 3 2 5 5 2 3 2 3 5 4 6 3 6 2 5 3 3 2 4 5 1 1 3 1 5 2 1 4 1 4 4 1 4 3 3 3 3 2 2 2 1 1 1 4 4 3 4 4 2 3 0 2 2 1 3 2 3 1 0 2]
   [2 1 0 1 0 0 1 1 2 0 3 0 1 1 4 4 3 0 3 2 3 3 2 4 0 0 2 5 5 4 1 2 5 4 3 5 3 2 1 1 2 3 3 3 4 3 4 2 5 5 1 2 3 5 4 5 1 4 5 3 4 4 2 5 1 2 1 5 3 4 1 1 1 1 2 4 2 3 4 1 1 4 2 4 1 2 3 3 2 2 3 0 0 3 2 0 1 0 2]
   [2 0 2 2 2 0 2 0 3 2 2 0 0 3 2 0 0 0 0 0 4 3 1 4 4 3 4 4 2 3 3 3 1 2 5 3 2 4 5 5 3 4 4 5 4 1 2 3 4 2 5 1 1 4 4 2 3 5 5 3 1 3 3 4 1 4 1 5 1 2 3 2 2 4 0 3 0 4 4 1 4 1 0 1 4 0 2 3 1 1 3 3 0 0 0 2 0 2 0]
   [0 1 2 2 1 1 1 3 1 0 0 1 2 0 1 0 0 0 1 3 4 4 3 3 1 4 2 0 2 1 5 1 1 2 5 3 3 1 4 4 1 3 3 5 3 1 5 2 5 5 3 4 4 3 4 4 3 3 4 2 4 2 5 4 3 5 4 2 1 1 3 2 0 2 4 2 4 2 0 2 4 2 1 4 3 2 2 3 3 0 3 1 3 3 0 0 1 1 0]
   [2 0 0 0 1 1 1 1 1 0 2 2 1 2 0 3 2 2 1 4 3 3 4 2 0 4 0 4 4 3 3 3 4 5 5 2 2 3 5 4 3 5 2 1 1 5 1 1 2 3 1 4 5 1 4 5 2 2 2 2 2 5 2 2 2 2 1 1 3 2 1 4 2 3 3 0 0 2 4 1 3 4 2 4 1 1 2 0 0 1 2 1 1 1 3 0 1 1 2]
   [2 0 2 0 0 0 2 1 3 3 3 1 3 1 1 2 2 2 1 4 2 2 0 3 2 4 2 1 1 0 3 2 1 1 2 3 2 3 4 5 5 2 5 4 5 3 2 1 4 2 5 1 2 2 1 4 5 4 2 4 4 5 1 3 2 1 3 0 4 2 0 0 3 3 2 1 2 3 0 4 2 0 1 3 1 2 0 3 2 3 0 2 2 2 1 1 0 1 2]])

#+END_SRC

#+RESULTS: 2022-day8-input
: aoc22/day8input

#+NAME: 2022-day8-solution
#+BEGIN_SRC emacs-lisp :session "day8" :val x=2022-day8-input
;;; Code:
(require 'cl-lib)
(defun aoc22/day8-part1 (forest)
  "Takes FOREST and solve the puzzle.
To be replaced with actual docstring."
  (let* ((rows (length forest))
         (cols (length (aref forest 0)))
         (lit (+ (* cols 2) (- (* rows 2) 4))))
    ;; check visibility inside
    (dolist (row (number-sequence 1 (- rows 2)))
      (dolist (column (number-sequence 1 (- cols 2)))
        (let ((cell (aref (aref forest row) column)))
          (cl-block CHECK

            ;; check to the left
            (if (> cell (aref (aref forest row) (1- column)))
                (let ((leftcol (- column 2)))
                  (while (and (>= leftcol 0) (> cell (aref (aref forest row) leftcol)))
                    (setq leftcol (1- leftcol)))
                  (if (< leftcol 0)
                      (progn (cl-incf lit)
                             (cl-return-from CHECK)))))

            ;; check upwards
            (if (> cell (aref (aref forest (1- row)) column))
                (let ((uprow (- row 2)))
                  (while (and (>= uprow 0) (> cell (aref (aref forest uprow) column)))
                    (setq uprow (1- uprow)))
                  (if (< uprow 0)
                      (progn (cl-incf lit)
                             (cl-return-from CHECK)))))

            ;; check to the right
            (if (> cell (aref (aref forest row) (1+ column)))
                (let ((rightcol (+ column 2)))
                  (while (and (<= rightcol (1- cols)) (> cell (aref (aref forest row) rightcol)))
                    (setq rightcol (1+ rightcol)))
                  (if (> rightcol (1- cols))
                      (progn (cl-incf lit)
                             (cl-return-from CHECK)))))

            ;; check downwards
            (if (> cell (aref (aref forest (1+ row)) column))
                (let ((downrow (+ row 2)))
                  (while (and (<= downrow (1- rows)) (> cell (aref (aref forest downrow) column)))
                    (setq downrow (1+ downrow)))
                  (if (> downrow (1- rows))
                      (progn (cl-incf lit)
                             (cl-return-from CHECK)))))))))
    lit))

(defun aoc22/day8-part2 (forest)
  "Takes INPUT and solve the puzzle.
To be replaced with actual docstring."
  (let* ((rows (length forest))
         (cols (length (aref forest 0)))
         (scenics ()))
    ;; check visibility inside
    (dolist (row (number-sequence 1 (- rows 2)))
      (dolist (column (number-sequence 1 (- cols 2)))
        (let ((cell (aref (aref forest row) column))
              (distance 1))

          ;; check to the left
          (let ((leftcol (1- column)))
            (while (and (> leftcol 0) (> cell (aref (aref forest row) leftcol)))
              (setq leftcol (1- leftcol)))
            (setq distance (* distance (- column leftcol))))

          ;; check upwards
          (let ((uprow (1- row)))
            (while (and (> uprow 0) (> cell (aref (aref forest uprow) column)))
              (setq uprow (1- uprow)))
            (setq distance (* distance (- row uprow))))

          ;; check to the right
          (let ((rightcol (1+ column)))
            (while (and (< rightcol (1- cols)) (> cell (aref (aref forest row) rightcol)))
              (setq rightcol (1+ rightcol)))
            (setq distance (* distance (- rightcol column))))

          ;; check downwards
          (let ((downrow (1+ row)))
            (while (and (< downrow (1- rows)) (> cell (aref (aref forest downrow) column)))
              (setq downrow (1+ downrow)))
            (setq distance (* distance (- downrow row))))
          (push distance scenics))))
    (cl-reduce #'max scenics)))

;;; Helper functions:

;;; Results vector

(vector (aoc22/day8-part1 aoc22/day8test)
        (aoc22/day8-part1 aoc22/day8input)
        (aoc22/day8-part2 aoc22/day8test)
        (aoc22/day8-part2 aoc22/day8input))
#+END_SRC

#+RESULTS: 2022-day8-solution
: [21 1796 8 288120]
** day 9
#+NAME: 2022-day9-input
#+BEGIN_SRC emacs-lisp :session "day9"
(defconst aoc22/day9test '(;; (R 4)
                           ;; (U 4)
                           ;; (L 3)
                           ;; (D 1)
                           ;; (R 4)
                           ;; (D 1)
                           ;; (L 5)
                           ;; (R 2)
                           (R 5)
                           (U 8)
                           (L 8)
                           (D 3)
                           (R 17)
                           (D 10)
                           (L 25)
                           (U 20)
                           ))

(defconst aoc22/day9input '((U 1)
                            (L 2)
                            (U 2)
                            (D 2)
                            (L 2)
                            (U 1)
                            (D 1)
                            (U 2)
                            (D 1)
                            (U 2)
                            (D 1)
                            (R 2)
                            (U 2)
                            (L 1)
                            (U 2)
                            (D 2)
                            (R 1)
                            (U 1)
                            (R 2)
                            (L 1)
                            (R 2)
                            (D 2)
                            (R 2)
                            (D 2)
                            (U 1)
                            (R 1)
                            (D 2)
                            (L 2)
                            (D 1)
                            (R 2)
                            (D 2)
                            (R 1)
                            (L 2)
                            (R 1)
                            (L 2)
                            (R 1)
                            (U 1)
                            (D 2)
                            (L 1)
                            (D 1)
                            (R 1)
                            (U 1)
                            (D 2)
                            (L 1)
                            (U 1)
                            (L 2)
                            (R 1)
                            (D 2)
                            (U 1)
                            (L 1)
                            (D 1)
                            (L 1)
                            (R 2)
                            (D 1)
                            (L 1)
                            (R 1)
                            (L 2)
                            (D 2)
                            (U 2)
                            (D 1)
                            (R 2)
                            (U 1)
                            (L 1)
                            (U 2)
                            (L 1)
                            (U 2)
                            (R 2)
                            (U 1)
                            (D 1)
                            (L 2)
                            (R 2)
                            (D 2)
                            (L 1)
                            (D 2)
                            (R 2)
                            (D 1)
                            (L 1)
                            (D 2)
                            (L 1)
                            (R 1)
                            (L 1)
                            (R 2)
                            (U 1)
                            (R 1)
                            (D 1)
                            (R 1)
                            (D 2)
                            (R 2)
                            (D 2)
                            (U 1)
                            (L 1)
                            (D 1)
                            (R 1)
                            (L 2)
                            (D 1)
                            (U 2)
                            (D 1)
                            (R 1)
                            (D 2)
                            (U 2)
                            (D 1)
                            (R 1)
                            (D 1)
                            (R 1)
                            (U 2)
                            (L 1)
                            (U 1)
                            (R 1)
                            (L 2)
                            (R 1)
                            (L 1)
                            (D 2)
                            (L 2)
                            (R 1)
                            (D 3)
                            (L 3)
                            (U 1)
                            (R 2)
                            (U 1)
                            (R 2)
                            (L 1)
                            (D 1)
                            (L 3)
                            (U 2)
                            (L 3)
                            (D 1)
                            (U 2)
                            (L 3)
                            (U 1)
                            (R 2)
                            (L 1)
                            (R 1)
                            (L 2)
                            (D 2)
                            (R 3)
                            (L 1)
                            (U 1)
                            (L 1)
                            (R 1)
                            (U 1)
                            (D 3)
                            (L 3)
                            (D 2)
                            (R 2)
                            (L 2)
                            (D 1)
                            (U 2)
                            (L 2)
                            (U 1)
                            (R 3)
                            (D 3)
                            (L 3)
                            (R 2)
                            (D 3)
                            (L 3)
                            (U 1)
                            (D 3)
                            (L 2)
                            (R 2)
                            (D 3)
                            (R 2)
                            (L 1)
                            (U 3)
                            (D 2)
                            (R 2)
                            (D 3)
                            (U 1)
                            (D 3)
                            (R 3)
                            (D 2)
                            (U 1)
                            (L 2)
                            (D 2)
                            (U 2)
                            (R 1)
                            (L 3)
                            (U 2)
                            (R 2)
                            (U 1)
                            (R 2)
                            (D 1)
                            (R 2)
                            (D 3)
                            (U 1)
                            (L 1)
                            (U 2)
                            (L 1)
                            (D 2)
                            (R 1)
                            (U 1)
                            (D 1)
                            (R 3)
                            (U 3)
                            (R 1)
                            (U 1)
                            (L 3)
                            (D 2)
                            (R 2)
                            (U 1)
                            (R 2)
                            (D 2)
                            (R 3)
                            (L 2)
                            (U 2)
                            (R 1)
                            (L 3)
                            (U 2)
                            (R 1)
                            (D 3)
                            (L 2)
                            (U 2)
                            (R 3)
                            (U 3)
                            (L 1)
                            (R 3)
                            (D 3)
                            (L 2)
                            (R 3)
                            (D 2)
                            (R 3)
                            (U 3)
                            (R 1)
                            (U 2)
                            (D 4)
                            (L 3)
                            (D 2)
                            (L 4)
                            (R 2)
                            (D 4)
                            (L 1)
                            (R 3)
                            (L 1)
                            (D 4)
                            (U 4)
                            (D 1)
                            (R 4)
                            (U 2)
                            (D 2)
                            (R 1)
                            (U 2)
                            (D 1)
                            (L 3)
                            (D 2)
                            (U 2)
                            (L 1)
                            (R 3)
                            (L 3)
                            (U 3)
                            (L 2)
                            (R 1)
                            (D 2)
                            (R 3)
                            (L 2)
                            (D 4)
                            (U 2)
                            (L 3)
                            (R 3)
                            (L 3)
                            (U 4)
                            (D 4)
                            (L 1)
                            (U 3)
                            (R 4)
                            (L 4)
                            (D 4)
                            (U 3)
                            (R 4)
                            (L 2)
                            (D 1)
                            (U 1)
                            (L 4)
                            (D 3)
                            (U 3)
                            (R 2)
                            (D 3)
                            (U 4)
                            (L 2)
                            (R 1)
                            (L 2)
                            (R 2)
                            (U 3)
                            (L 1)
                            (D 4)
                            (U 1)
                            (L 4)
                            (R 3)
                            (L 3)
                            (R 2)
                            (D 4)
                            (U 4)
                            (L 4)
                            (D 3)
                            (R 1)
                            (D 3)
                            (R 4)
                            (L 4)
                            (R 2)
                            (L 2)
                            (D 2)
                            (R 2)
                            (L 2)
                            (U 3)
                            (R 3)
                            (D 2)
                            (R 4)
                            (L 1)
                            (R 2)
                            (U 4)
                            (L 2)
                            (R 1)
                            (U 2)
                            (R 3)
                            (D 2)
                            (U 1)
                            (R 4)
                            (L 3)
                            (U 3)
                            (D 4)
                            (U 1)
                            (L 1)
                            (R 1)
                            (D 2)
                            (R 1)
                            (D 1)
                            (L 2)
                            (D 4)
                            (U 4)
                            (L 4)
                            (U 3)
                            (D 4)
                            (U 4)
                            (D 3)
                            (U 3)
                            (L 5)
                            (U 4)
                            (L 4)
                            (U 5)
                            (D 1)
                            (L 5)
                            (U 2)
                            (D 4)
                            (U 5)
                            (L 4)
                            (U 2)
                            (D 4)
                            (R 3)
                            (L 5)
                            (U 2)
                            (L 1)
                            (U 5)
                            (L 4)
                            (D 2)
                            (U 5)
                            (R 3)
                            (D 2)
                            (U 3)
                            (L 3)
                            (R 3)
                            (D 5)
                            (U 4)
                            (D 5)
                            (U 4)
                            (R 1)
                            (L 1)
                            (U 3)
                            (L 3)
                            (R 4)
                            (L 1)
                            (U 2)
                            (D 3)
                            (U 5)
                            (L 3)
                            (R 5)
                            (D 3)
                            (U 4)
                            (L 1)
                            (U 3)
                            (R 2)
                            (L 2)
                            (U 5)
                            (D 3)
                            (L 5)
                            (D 1)
                            (R 3)
                            (L 5)
                            (R 1)
                            (D 2)
                            (U 3)
                            (D 2)
                            (L 4)
                            (D 4)
                            (R 5)
                            (L 5)
                            (U 1)
                            (L 5)
                            (R 3)
                            (L 3)
                            (U 4)
                            (R 3)
                            (L 3)
                            (R 1)
                            (L 2)
                            (D 1)
                            (U 3)
                            (L 5)
                            (R 1)
                            (L 5)
                            (U 3)
                            (R 4)
                            (U 4)
                            (D 3)
                            (U 2)
                            (L 5)
                            (D 3)
                            (L 3)
                            (R 2)
                            (D 2)
                            (U 3)
                            (D 3)
                            (R 2)
                            (D 3)
                            (L 1)
                            (R 1)
                            (U 1)
                            (L 3)
                            (R 2)
                            (U 3)
                            (R 1)
                            (D 5)
                            (U 5)
                            (L 5)
                            (D 2)
                            (U 4)
                            (D 3)
                            (U 3)
                            (L 4)
                            (D 3)
                            (U 2)
                            (R 1)
                            (D 4)
                            (L 3)
                            (U 5)
                            (D 2)
                            (L 5)
                            (R 4)
                            (D 3)
                            (L 4)
                            (D 3)
                            (R 4)
                            (D 5)
                            (R 2)
                            (L 3)
                            (D 5)
                            (U 3)
                            (R 4)
                            (U 6)
                            (L 5)
                            (D 3)
                            (U 4)
                            (L 1)
                            (U 5)
                            (R 5)
                            (D 3)
                            (U 5)
                            (D 5)
                            (R 2)
                            (D 2)
                            (U 4)
                            (D 2)
                            (U 3)
                            (R 6)
                            (U 4)
                            (L 2)
                            (R 2)
                            (U 3)
                            (L 1)
                            (U 5)
                            (R 6)
                            (L 1)
                            (D 5)
                            (R 5)
                            (D 5)
                            (L 2)
                            (U 3)
                            (L 4)
                            (R 2)
                            (U 3)
                            (L 2)
                            (U 2)
                            (D 4)
                            (L 4)
                            (R 5)
                            (L 6)
                            (D 2)
                            (L 4)
                            (R 2)
                            (D 4)
                            (L 1)
                            (D 6)
                            (R 2)
                            (U 5)
                            (D 2)
                            (L 6)
                            (U 5)
                            (L 4)
                            (U 1)
                            (D 3)
                            (U 1)
                            (L 5)
                            (U 2)
                            (R 6)
                            (D 5)
                            (U 4)
                            (L 5)
                            (U 1)
                            (L 5)
                            (U 2)
                            (R 5)
                            (U 2)
                            (R 4)
                            (D 4)
                            (R 1)
                            (D 6)
                            (R 5)
                            (L 5)
                            (U 6)
                            (D 2)
                            (R 1)
                            (L 4)
                            (U 3)
                            (D 6)
                            (R 4)
                            (L 3)
                            (R 6)
                            (U 2)
                            (R 1)
                            (U 4)
                            (R 5)
                            (U 1)
                            (D 4)
                            (U 1)
                            (L 3)
                            (D 2)
                            (L 2)
                            (D 2)
                            (L 2)
                            (U 6)
                            (D 4)
                            (L 5)
                            (D 2)
                            (U 1)
                            (L 5)
                            (D 2)
                            (R 3)
                            (L 2)
                            (D 2)
                            (U 4)
                            (L 4)
                            (U 6)
                            (L 1)
                            (R 7)
                            (L 4)
                            (U 1)
                            (L 1)
                            (U 6)
                            (L 1)
                            (D 2)
                            (L 5)
                            (R 3)
                            (U 6)
                            (L 6)
                            (U 2)
                            (D 4)
                            (L 2)
                            (R 6)
                            (L 3)
                            (D 4)
                            (L 1)
                            (R 6)
                            (D 4)
                            (U 2)
                            (D 4)
                            (R 2)
                            (D 1)
                            (U 3)
                            (R 6)
                            (U 4)
                            (D 2)
                            (L 6)
                            (R 5)
                            (L 3)
                            (U 1)
                            (L 3)
                            (U 3)
                            (L 7)
                            (R 1)
                            (L 4)
                            (D 5)
                            (U 6)
                            (L 3)
                            (U 2)
                            (L 1)
                            (D 2)
                            (R 4)
                            (D 7)
                            (R 1)
                            (D 5)
                            (L 1)
                            (D 2)
                            (U 2)
                            (R 1)
                            (L 1)
                            (U 2)
                            (D 2)
                            (R 4)
                            (D 7)
                            (L 7)
                            (D 1)
                            (L 4)
                            (R 7)
                            (U 3)
                            (L 4)
                            (R 3)
                            (U 2)
                            (R 5)
                            (U 5)
                            (L 5)
                            (U 2)
                            (L 7)
                            (R 4)
                            (U 2)
                            (L 5)
                            (R 4)
                            (U 7)
                            (L 7)
                            (R 5)
                            (L 6)
                            (D 4)
                            (L 1)
                            (D 6)
                            (L 5)
                            (R 5)
                            (L 7)
                            (R 5)
                            (D 4)
                            (U 4)
                            (L 5)
                            (U 7)
                            (D 6)
                            (U 3)
                            (L 5)
                            (U 4)
                            (D 1)
                            (L 1)
                            (D 7)
                            (R 3)
                            (D 7)
                            (U 3)
                            (D 7)
                            (R 4)
                            (U 5)
                            (L 7)
                            (R 4)
                            (L 5)
                            (R 1)
                            (D 4)
                            (L 3)
                            (U 1)
                            (R 3)
                            (L 1)
                            (U 4)
                            (R 3)
                            (L 5)
                            (D 2)
                            (R 2)
                            (L 4)
                            (D 4)
                            (L 7)
                            (R 7)
                            (U 2)
                            (D 7)
                            (L 5)
                            (U 3)
                            (L 4)
                            (U 7)
                            (R 6)
                            (D 3)
                            (L 2)
                            (R 7)
                            (L 5)
                            (U 6)
                            (D 6)
                            (L 2)
                            (D 2)
                            (L 5)
                            (D 7)
                            (U 5)
                            (L 3)
                            (D 4)
                            (U 4)
                            (L 4)
                            (R 2)
                            (D 8)
                            (L 3)
                            (R 2)
                            (D 4)
                            (L 4)
                            (U 7)
                            (R 8)
                            (D 6)
                            (R 7)
                            (U 1)
                            (R 6)
                            (U 6)
                            (R 4)
                            (D 8)
                            (L 3)
                            (R 3)
                            (D 2)
                            (U 5)
                            (D 8)
                            (L 3)
                            (D 5)
                            (L 7)
                            (R 5)
                            (L 1)
                            (D 4)
                            (L 7)
                            (U 7)
                            (L 8)
                            (D 7)
                            (L 5)
                            (U 3)
                            (R 4)
                            (U 3)
                            (L 7)
                            (R 8)
                            (D 6)
                            (R 2)
                            (D 3)
                            (R 1)
                            (D 6)
                            (U 8)
                            (D 6)
                            (L 2)
                            (R 8)
                            (D 4)
                            (U 3)
                            (D 5)
                            (U 2)
                            (L 3)
                            (U 1)
                            (R 7)
                            (U 6)
                            (D 5)
                            (R 5)
                            (U 4)
                            (L 1)
                            (D 3)
                            (U 7)
                            (L 8)
                            (U 5)
                            (D 5)
                            (U 4)
                            (D 3)
                            (L 5)
                            (D 5)
                            (R 5)
                            (D 3)
                            (R 4)
                            (U 4)
                            (R 8)
                            (L 4)
                            (D 4)
                            (L 2)
                            (D 4)
                            (R 7)
                            (L 8)
                            (R 7)
                            (L 1)
                            (D 3)
                            (U 6)
                            (R 5)
                            (D 1)
                            (U 4)
                            (R 7)
                            (U 1)
                            (R 2)
                            (L 8)
                            (U 8)
                            (D 2)
                            (L 9)
                            (U 9)
                            (D 4)
                            (U 8)
                            (D 3)
                            (R 1)
                            (U 3)
                            (D 1)
                            (R 7)
                            (L 2)
                            (U 4)
                            (L 4)
                            (U 9)
                            (L 7)
                            (U 2)
                            (L 4)
                            (D 5)
                            (R 8)
                            (L 5)
                            (R 4)
                            (U 2)
                            (L 5)
                            (U 2)
                            (D 1)
                            (L 9)
                            (R 5)
                            (D 6)
                            (U 3)
                            (D 5)
                            (U 2)
                            (L 1)
                            (R 7)
                            (U 1)
                            (L 7)
                            (U 1)
                            (L 5)
                            (D 6)
                            (R 6)
                            (D 7)
                            (U 6)
                            (D 7)
                            (L 7)
                            (D 2)
                            (L 6)
                            (D 4)
                            (U 7)
                            (D 4)
                            (L 8)
                            (D 5)
                            (R 7)
                            (L 9)
                            (D 9)
                            (U 3)
                            (D 2)
                            (U 9)
                            (R 4)
                            (D 3)
                            (U 9)
                            (R 4)
                            (D 6)
                            (L 2)
                            (D 1)
                            (L 5)
                            (U 2)
                            (L 5)
                            (D 1)
                            (R 7)
                            (L 9)
                            (R 6)
                            (D 8)
                            (L 2)
                            (R 5)
                            (D 6)
                            (L 9)
                            (U 8)
                            (R 2)
                            (D 4)
                            (R 5)
                            (U 3)
                            (D 4)
                            (R 6)
                            (D 5)
                            (U 9)
                            (D 6)
                            (L 3)
                            (D 6)
                            (R 6)
                            (D 5)
                            (R 7)
                            (U 5)
                            (L 2)
                            (U 2)
                            (D 5)
                            (U 4)
                            (D 8)
                            (R 6)
                            (U 8)
                            (D 2)
                            (R 9)
                            (U 6)
                            (L 1)
                            (U 6)
                            (L 5)
                            (U 10)
                            (D 2)
                            (U 6)
                            (R 10)
                            (L 7)
                            (U 4)
                            (R 2)
                            (D 1)
                            (U 3)
                            (D 6)
                            (L 10)
                            (U 4)
                            (L 5)
                            (D 10)
                            (R 1)
                            (L 5)
                            (R 5)
                            (U 6)
                            (R 1)
                            (D 7)
                            (L 7)
                            (D 4)
                            (L 4)
                            (D 10)
                            (U 1)
                            (R 9)
                            (L 7)
                            (D 7)
                            (L 6)
                            (D 7)
                            (U 7)
                            (R 5)
                            (L 6)
                            (U 3)
                            (L 1)
                            (D 4)
                            (L 1)
                            (D 3)
                            (U 10)
                            (D 10)
                            (L 3)
                            (R 6)
                            (U 4)
                            (D 2)
                            (L 4)
                            (U 1)
                            (R 9)
                            (D 8)
                            (U 7)
                            (R 10)
                            (U 10)
                            (L 4)
                            (U 1)
                            (L 9)
                            (R 7)
                            (L 8)
                            (R 10)
                            (D 6)
                            (U 1)
                            (R 1)
                            (D 10)
                            (R 4)
                            (L 6)
                            (D 2)
                            (U 9)
                            (R 6)
                            (L 4)
                            (U 10)
                            (R 10)
                            (U 4)
                            (D 8)
                            (U 8)
                            (L 9)
                            (R 9)
                            (D 7)
                            (L 1)
                            (D 6)
                            (L 7)
                            (U 4)
                            (L 6)
                            (R 9)
                            (D 6)
                            (L 5)
                            (D 5)
                            (L 5)
                            (U 6)
                            (R 1)
                            (D 4)
                            (R 6)
                            (L 5)
                            (U 9)
                            (R 3)
                            (D 3)
                            (L 10)
                            (D 6)
                            (U 5)
                            (D 6)
                            (R 6)
                            (D 7)
                            (R 3)
                            (D 2)
                            (L 2)
                            (D 9)
                            (U 1)
                            (D 1)
                            (L 1)
                            (D 3)
                            (U 3)
                            (R 4)
                            (U 1)
                            (L 9)
                            (U 9)
                            (R 4)
                            (D 10)
                            (U 2)
                            (L 4)
                            (U 3)
                            (D 1)
                            (R 10)
                            (U 7)
                            (R 5)
                            (D 6)
                            (L 2)
                            (U 5)
                            (L 5)
                            (U 5)
                            (L 4)
                            (D 8)
                            (R 7)
                            (L 5)
                            (R 6)
                            (U 4)
                            (L 7)
                            (D 4)
                            (R 9)
                            (D 7)
                            (R 7)
                            (L 2)
                            (D 8)
                            (L 9)
                            (D 2)
                            (L 7)
                            (U 10)
                            (R 3)
                            (U 5)
                            (R 3)
                            (D 9)
                            (U 9)
                            (D 11)
                            (U 6)
                            (R 3)
                            (U 11)
                            (D 11)
                            (L 11)
                            (U 6)
                            (D 10)
                            (R 9)
                            (U 11)
                            (R 6)
                            (L 4)
                            (R 5)
                            (L 11)
                            (D 9)
                            (L 10)
                            (R 4)
                            (D 11)
                            (R 2)
                            (L 6)
                            (R 3)
                            (U 4)
                            (L 10)
                            (U 6)
                            (D 9)
                            (L 5)
                            (U 3)
                            (R 2)
                            (U 5)
                            (L 7)
                            (U 1)
                            (L 10)
                            (U 9)
                            (R 3)
                            (D 5)
                            (R 9)
                            (U 6)
                            (D 9)
                            (L 6)
                            (R 10)
                            (D 10)
                            (R 8)
                            (D 7)
                            (L 3)
                            (D 4)
                            (L 6)
                            (R 2)
                            (D 11)
                            (U 5)
                            (D 7)
                            (L 1)
                            (U 11)
                            (L 11)
                            (U 3)
                            (D 2)
                            (L 9)
                            (R 8)
                            (L 11)
                            (R 2)
                            (D 9)
                            (U 3)
                            (L 9)
                            (U 6)
                            (D 2)
                            (L 10)
                            (U 8)
                            (L 5)
                            (R 3)
                            (U 3)
                            (R 1)
                            (L 7)
                            (R 10)
                            (L 2)
                            (R 7)
                            (U 5)
                            (D 12)
                            (L 11)
                            (R 2)
                            (L 10)
                            (U 2)
                            (D 3)
                            (R 3)
                            (U 6)
                            (D 1)
                            (L 8)
                            (R 4)
                            (L 5)
                            (U 10)
                            (R 12)
                            (U 9)
                            (R 12)
                            (L 12)
                            (R 6)
                            (U 11)
                            (D 1)
                            (R 9)
                            (U 2)
                            (R 11)
                            (L 1)
                            (R 12)
                            (U 10)
                            (L 9)
                            (U 12)
                            (R 10)
                            (U 12)
                            (D 12)
                            (U 2)
                            (D 11)
                            (L 12)
                            (R 9)
                            (U 3)
                            (D 4)
                            (L 6)
                            (U 3)
                            (R 10)
                            (D 2)
                            (U 11)
                            (L 4)
                            (R 11)
                            (U 11)
                            (R 1)
                            (D 10)
                            (R 6)
                            (U 8)
                            (L 3)
                            (D 6)
                            (R 1)
                            (U 9)
                            (L 3)
                            (U 5)
                            (D 4)
                            (R 12)
                            (U 11)
                            (D 2)
                            (U 10)
                            (L 4)
                            (D 9)
                            (L 4)
                            (U 10)
                            (D 1)
                            (R 1)
                            (L 5)
                            (R 2)
                            (D 12)
                            (R 5)
                            (U 3)
                            (L 11)
                            (D 10)
                            (L 11)
                            (R 7)
                            (L 10)
                            (U 6)
                            (R 12)
                            (D 3)
                            (R 10)
                            (U 1)
                            (L 2)
                            (D 1)
                            (R 1)
                            (L 12)
                            (U 4)
                            (L 3)
                            (R 6)
                            (L 3)
                            (D 6)
                            (U 7)
                            (R 10)
                            (U 6)
                            (D 6)
                            (R 5)
                            (D 10)
                            (R 10)
                            (D 8)
                            (L 10)
                            (U 11)
                            (R 9)
                            (L 4)
                            (R 8)
                            (U 1)
                            (D 3)
                            (U 7)
                            (L 3)
                            (U 10)
                            (R 12)
                            (U 10)
                            (D 10)
                            (U 9)
                            (D 7)
                            (R 4)
                            (D 2)
                            (R 9)
                            (U 13)
                            (R 6)
                            (L 4)
                            (R 9)
                            (L 11)
                            (U 6)
                            (L 12)
                            (D 9)
                            (R 13)
                            (L 2)
                            (U 7)
                            (D 10)
                            (L 13)
                            (D 4)
                            (U 6)
                            (L 8)
                            (U 13)
                            (R 3)
                            (D 2)
                            (L 3)
                            (R 1)
                            (U 1)
                            (D 7)
                            (L 5)
                            (D 6)
                            (R 1)
                            (D 3)
                            (R 5)
                            (L 1)
                            (D 3)
                            (U 11)
                            (L 1)
                            (D 13)
                            (R 5)
                            (D 2)
                            (L 8)
                            (D 10)
                            (R 1)
                            (L 2)
                            (D 2)
                            (L 12)
                            (R 11)
                            (D 13)
                            (R 7)
                            (D 12)
                            (L 2)
                            (D 5)
                            (L 9)
                            (D 8)
                            (L 3)
                            (D 2)
                            (U 4)
                            (D 8)
                            (R 7)
                            (D 8)
                            (U 8)
                            (R 2)
                            (U 10)
                            (D 7)
                            (L 9)
                            (U 1)
                            (L 10)
                            (R 4)
                            (U 1)
                            (L 5)
                            (R 5)
                            (D 10)
                            (R 2)
                            (L 6)
                            (R 4)
                            (D 10)
                            (L 7)
                            (R 11)
                            (L 11)
                            (U 7)
                            (L 1)
                            (D 5)
                            (U 4)
                            (D 6)
                            (R 4)
                            (U 6)
                            (D 7)
                            (L 2)
                            (D 1)
                            (R 11)
                            (U 11)
                            (D 12)
                            (U 4)
                            (D 13)
                            (R 3)
                            (L 4)
                            (R 3)
                            (L 8)
                            (R 4)
                            (U 7)
                            (L 2)
                            (R 8)
                            (L 13)
                            (D 6)
                            (U 11)
                            (L 12)
                            (U 1)
                            (D 3)
                            (U 7)
                            (L 4)
                            (R 5)
                            (U 7)
                            (D 1)
                            (L 9)
                            (U 2)
                            (R 4)
                            (D 9)
                            (U 8)
                            (R 2)
                            (D 9)
                            (L 8)
                            (D 13)
                            (U 13)
                            (D 1)
                            (U 9)
                            (D 5)
                            (L 1)
                            (U 12)
                            (D 2)
                            (R 9)
                            (L 7)
                            (R 1)
                            (L 3)
                            (R 2)
                            (D 12)
                            (L 11)
                            (D 4)
                            (R 11)
                            (U 5)
                            (L 13)
                            (R 2)
                            (U 12)
                            (L 9)
                            (R 10)
                            (U 3)
                            (D 10)
                            (R 8)
                            (D 12)
                            (U 6)
                            (R 7)
                            (D 11)
                            (L 10)
                            (U 14)
                            (L 9)
                            (U 12)
                            (D 4)
                            (U 3)
                            (D 10)
                            (R 6)
                            (D 5)
                            (R 1)
                            (D 10)
                            (U 13)
                            (L 9)
                            (R 7)
                            (U 14)
                            (D 10)
                            (U 7)
                            (D 13)
                            (L 14)
                            (D 14)
                            (U 6)
                            (D 14)
                            (L 8)
                            (R 2)
                            (D 7)
                            (U 14)
                            (R 6)
                            (L 14)
                            (U 14)
                            (R 6)
                            (D 7)
                            (R 7)
                            (D 3)
                            (U 10)
                            (D 10)
                            (R 7)
                            (U 11)
                            (R 3)
                            (L 2)
                            (R 12)
                            (L 13)
                            (R 3)
                            (U 4)
                            (D 1)
                            (L 7)
                            (U 9)
                            (R 9)
                            (U 9)
                            (L 11)
                            (U 7)
                            (D 6)
                            (R 7)
                            (L 3)
                            (D 5)
                            (U 14)
                            (R 8)
                            (D 7)
                            (L 6)
                            (U 6)
                            (R 11)
                            (D 9)
                            (R 6)
                            (D 5)
                            (L 5)
                            (D 1)
                            (L 10)
                            (R 8)
                            (L 15)
                            (U 1)
                            (D 14)
                            (L 1)
                            (R 5)
                            (D 5)
                            (L 3)
                            (U 6)
                            (R 6)
                            (L 4)
                            (D 3)
                            (L 3)
                            (D 4)
                            (U 7)
                            (L 10)
                            (D 8)
                            (R 13)
                            (D 9)
                            (R 15)
                            (D 6)
                            (U 10)
                            (D 14)
                            (L 10)
                            (U 12)
                            (D 13)
                            (U 8)
                            (L 13)
                            (U 11)
                            (D 13)
                            (L 8)
                            (R 12)
                            (U 12)
                            (D 14)
                            (U 15)
                            (L 1)
                            (R 14)
                            (U 15)
                            (L 14)
                            (U 4)
                            (D 2)
                            (L 2)
                            (R 6)
                            (D 15)
                            (U 2)
                            (R 5)
                            (L 7)
                            (U 8)
                            (D 12)
                            (R 2)
                            (U 2)
                            (R 11)
                            (L 3)
                            (U 15)
                            (R 15)
                            (D 1)
                            (U 9)
                            (R 5)
                            (U 1)
                            (R 15)
                            (U 7)
                            (D 8)
                            (R 6)
                            (U 7)
                            (R 1)
                            (U 5)
                            (R 15)
                            (U 9)
                            (L 6)
                            (U 10)
                            (R 10)
                            (D 2)
                            (U 14)
                            (D 13)
                            (R 11)
                            (L 14)
                            (D 6)
                            (U 6)
                            (D 6)
                            (U 10)
                            (D 1)
                            (U 10)
                            (L 11)
                            (D 13)
                            (U 2)
                            (L 14)
                            (D 9)
                            (R 14)
                            (U 9)
                            (L 8)
                            (D 11)
                            (U 3)
                            (L 5)
                            (U 8)
                            (L 1)
                            (U 12)
                            (L 6)
                            (R 5)
                            (D 8)
                            (R 5)
                            (D 9)
                            (U 14)
                            (R 13)
                            (U 6)
                            (L 9)
                            (R 7)
                            (L 5)
                            (U 9)
                            (L 8)
                            (D 9)
                            (L 3)
                            (R 4)
                            (L 8)
                            (D 1)
                            (L 4)
                            (R 6)
                            (U 8)
                            (L 5)
                            (R 12)
                            (U 7)
                            (R 5)
                            (D 8)
                            (U 6)
                            (R 11)
                            (U 1)
                            (D 9)
                            (L 7)
                            (R 10)
                            (L 4)
                            (R 1)
                            (D 11)
                            (R 1)
                            (U 16)
                            (L 6)
                            (R 7)
                            (D 3)
                            (R 4)
                            (U 13)
                            (R 12)
                            (D 1)
                            (L 5)
                            (D 2)
                            (U 4)
                            (D 11)
                            (L 13)
                            (D 4)
                            (U 2)
                            (D 14)
                            (L 3)
                            (U 1)
                            (D 13)
                            (R 14)
                            (U 6)
                            (R 8)
                            (L 16)
                            (U 9)
                            (D 7)
                            (U 15)
                            (D 15)
                            (L 11)
                            (R 15)
                            (L 4)
                            (D 5)
                            (U 3)
                            (L 3)
                            (D 8)
                            (L 6)
                            (U 15)
                            (L 11)
                            (R 14)
                            (D 8)
                            (U 10)
                            (D 6)
                            (R 1)
                            (L 16)
                            (D 16)
                            (L 3)
                            (U 10)
                            (R 5)
                            (L 16)
                            (R 2)
                            (U 15)
                            (R 10)
                            (U 11)
                            (R 15)
                            (D 16)
                            (L 3)
                            (U 15)
                            (L 10)
                            (R 12)
                            (U 13)
                            (R 3)
                            (L 13)
                            (D 15)
                            (U 4)
                            (R 8)
                            (U 6)
                            (L 10)
                            (R 12)
                            (U 1)
                            (L 15)
                            (D 5)
                            (L 1)
                            (U 9)
                            (D 1)
                            (R 16)
                            (L 7)
                            (U 13)
                            (L 13)
                            (U 6)
                            (L 1)
                            (R 14)
                            (L 11)
                            (U 16)
                            (R 15)
                            (L 10)
                            (D 9)
                            (R 9)
                            (D 6)
                            (U 16)
                            (R 4)
                            (U 1)
                            (L 3)
                            (R 16)
                            (L 3)
                            (U 6)
                            (D 15)
                            (R 13)
                            (D 11)
                            (U 15)
                            (R 3)
                            (L 15)
                            (D 14)
                            (U 10)
                            (R 7)
                            (U 4)
                            (R 13)
                            (L 11)
                            (R 13)
                            (L 11)
                            (R 3)
                            (L 5)
                            (U 12)
                            (L 9)
                            (U 8)
                            (D 2)
                            (U 17)
                            (D 3)
                            (R 17)
                            (U 14)
                            (L 9)
                            (R 10)
                            (D 6)
                            (L 5)
                            (R 14)
                            (L 8)
                            (U 2)
                            (D 16)
                            (R 15)
                            (D 12)
                            (U 3)
                            (L 4)
                            (R 12)
                            (U 16)
                            (D 14)
                            (L 12)
                            (R 8)
                            (D 4)
                            (R 9)
                            (U 12)
                            (R 15)
                            (U 6)
                            (L 3)
                            (D 17)
                            (R 3)
                            (U 6)
                            (L 2)
                            (R 2)
                            (U 2)
                            (D 17)
                            (L 4)
                            (R 8)
                            (U 17)
                            (R 16)
                            (L 17)
                            (U 5)
                            (D 11)
                            (U 8)
                            (L 7)
                            (U 3)
                            (R 1)
                            (D 15)
                            (U 14)
                            (L 4)
                            (D 9)
                            (U 15)
                            (R 13)
                            (L 2)
                            (U 4)
                            (R 17)
                            (U 2)
                            (L 13)
                            (R 4)
                            (U 8)
                            (R 15)
                            (U 8)
                            (D 13)
                            (U 10)
                            (D 7)
                            (U 7)
                            (D 17)
                            (R 16)
                            (L 10)
                            (U 10)
                            (L 8)
                            (R 9)
                            (L 8)
                            (R 1)
                            (D 10)
                            (U 17)
                            (D 13)
                            (U 10)
                            (D 13)
                            (L 14)
                            (R 17)
                            (D 5)
                            (L 1)
                            (U 17)
                            (D 17)
                            (L 13)
                            (U 12)
                            (R 10)
                            (D 12)
                            (R 15)
                            (L 15)
                            (U 11)
                            (L 14)
                            (D 15)
                            (U 12)
                            (D 7)
                            (U 15)
                            (L 1)
                            (U 2)
                            (R 18)
                            (L 15)
                            (U 7)
                            (L 8)
                            (R 3)
                            (D 14)
                            (R 7)
                            (D 7)
                            (U 6)
                            (R 10)
                            (L 9)
                            (R 9)
                            (D 17)
                            (R 11)
                            (D 4)
                            (L 16)
                            (U 12)
                            (R 10)
                            (L 4)
                            (D 7)
                            (U 18)
                            (L 11)
                            (U 3)
                            (L 13)
                            (U 5)
                            (R 11)
                            (D 16)
                            (U 14)
                            (D 1)
                            (R 18)
                            (D 4)
                            (L 7)
                            (U 2)
                            (D 9)
                            (L 5)
                            (R 14)
                            (U 18)
                            (R 2)
                            (U 7)
                            (R 8)
                            (U 9)
                            (L 6)
                            (R 12)
                            (U 15)
                            (R 1)
                            (L 7)
                            (D 3)
                            (U 10)
                            (R 5)
                            (U 2)
                            (L 8)
                            (R 13)
                            (L 14)
                            (D 10)
                            (L 10)
                            (U 12)
                            (R 5)
                            (L 13)
                            (D 8)
                            (U 5)
                            (D 17)
                            (L 8)
                            (D 8)
                            (L 7)
                            (U 5)
                            (D 16)
                            (R 9)
                            (D 6)
                            (U 11)
                            (D 16)
                            (U 15)
                            (D 6)
                            (L 4)
                            (R 16)
                            (D 8)
                            (L 11)
                            (U 13)
                            (R 14)
                            (L 12)
                            (D 2)
                            (U 16)
                            (D 1)
                            (L 12)
                            (D 10)
                            (R 1)
                            (D 17)
                            (L 8)
                            (U 13)
                            (R 10)
                            (U 9)
                            (D 4)
                            (R 1)
                            (U 17)
                            (L 5)
                            (D 15)
                            (U 9)
                            (R 15)
                            (U 18)
                            (L 15)
                            (D 18)
                            (U 15)
                            (D 1)
                            (L 9)
                            (R 6)
                            (L 15)
                            (R 3)
                            (D 19)
                            (L 5)
                            (D 10)
                            (L 18)
                            (D 11)
                            (L 14)
                            (D 11)
                            (U 19)
                            (D 5)
                            (R 9)
                            (L 18)
                            (R 11)
                            (D 3)
                            (L 7)
                            (R 4)
                            (D 13)
                            (L 9)
                            (R 14)
                            (D 14)
                            (L 8)
                            (U 10)
                            (L 11)
                            (U 4)
                            (D 13)
                            (R 13)
                            (L 7)
                            (R 7)
                            (D 18)
                            (U 2)
                            (L 17)
                            (D 16)
                            (R 3)
                            (U 12)
                            (L 13)
                            (U 5)
                            (L 1)
                            (U 9)
                            (R 6)
                            (D 14)
                            (U 6)
                            (R 3)
                            (U 6)
                            (R 7)
                            (D 8)
                            (U 11)
                            (L 11)
                            (R 7)
                            (U 17)
                            (D 2)
                            (L 12)
                            (U 18)
                            (L 3)
                            (U 14)
                            (L 6)
                            (R 10)
                            (L 16)
                            (U 19)
                            (D 9)
                            (R 13)
                            (U 5)
                            (R 5)
                            (D 15)
                            (R 1)
                            (L 1)
                            (U 5)
                            (D 16)
                            (L 5)
                            (R 15)
                            (L 14)
                            (D 5)
                            (R 9)
                            (U 12)
                            (L 9)
                            (U 7)
                            (R 16)
                            (D 16)
                            (R 10)
                            (D 15)
                            (R 16)
                            (L 2)
                            (U 13)
                            (L 5)
                            (D 19)
                            (R 18)
                            (D 19)
                            (R 16)
                            (D 12)
                            (R 15)
                            (D 12)
                            (U 5)
                            (L 3)
                            (R 14)
                            (D 7)
                            (U 11)
                            (R 10)
                            (L 18)
                            (D 9)
                            (U 2)
                            (D 19)
                            (U 8)
                            (D 19)
                            (U 18)
                            (R 11)
                            (D 2)
                            (R 8)
                            (D 14)))

#+END_SRC

#+RESULTS: 2022-day9-input
: aoc22/day9input


#+NAME: 2022-day9-solution
#+BEGIN_SRC emacs-lisp :session "day9" :val x=2022-day9-input
;;; Code:

(defun aoc22/day9-part1 (instructions)
  "Follow the INSTRUCTIONS for head movement and the tail will follow.
After each move instruction the tail should be at most one unit
away (horizontally, vertically or diagonally).  If after the move
the tail is more than one unit away, it must move closer to the
head.  The places where tail moves need to be kept, and at the
end, I need to report all the places that the tail landed on."
  (let ((head '(0 0))
        (tail '(0 0))
        (dir '(0 0))
        (pos '((0 0))))
    (dolist (set instructions)
      (let ((to (car set))
            (times (cadr set)))
        (cond
         ((eq to 'R) (setq dir '(1 0)))
         ((eq to 'U) (setq dir '(0 1)))
         ((eq to 'L) (setq dir '(-1 0)))
         ((eq to 'D) (setq dir '(0 -1))))
        (dotimes (iteration times)
          (setq head (add-points head dir))
          (let ((move-it (tail-move head tail)))
            (if move-it
                (progn (setq tail (add-points tail move-it))
                       (if (not (member tail pos))
                           (push tail pos))))))))
    (length pos)))

(defun aoc22/day9-part2 (instructions)
  "Follow the INSTRUCTIONS for head movement and the 9 tails will follow.
After each move instruction the tails should be at most one unit
away (horizontally, vertically or diagonally) from the previous
tail (or head).  If after the move the tail is more than one unit
away, it must move closer to the head.  The places where the last
tail moves need to be kept, and at the end, I need to report all
the places that the last tail landed on."
  (let ((head '(0 0))
        (knots '((0 0) (0 0) (0 0) (0 0)
                 (0 0) (0 0) (0 0) (0 0)))
        (tail '(0 0))
        (dir '(0 0))
        (pos '((0 0))))
    (dolist (set instructions)
      (let ((to (car set))
            (times (cadr set)))
        (cond
         ((eq to 'R) (setq dir '(1 0)))
         ((eq to 'U) (setq dir '(0 1)))
         ((eq to 'L) (setq dir '(-1 0)))
         ((eq to 'D) (setq dir '(0 -1))))
        (dotimes (iteration times)
          (setq head (add-points head dir))
          (let ((move-it (tail-move head (car knots))))
            (if move-it
                (setf (car knots)
                      (add-points (car knots) move-it))))
          (dolist (knot (number-sequence 1 (1- (length knots))))
            (let ((move-it (tail-move (nth (1- knot) knots)
                                      (nth knot knots))))
              (if move-it
                  (setf (nth knot knots)
                        (add-points (nth knot knots) move-it)))))
          (let ((move-it (tail-move (nth (1- (length knots)) knots) tail)))
            (if move-it
                (progn (setf tail (add-points tail move-it))
                       (if (not (member tail pos))
                           (push tail pos))))))))
    (length pos)))

;;; Helper functions:
(defun add-points (p1 p2)
  "Add points P1 and P2 and return their sum."
  (list (+ (car p1) (car p2)) (+ (cadr p1) (cadr p2))))

(defun tail-move (head tail)
  "Find the distance between HEAD and TAIL.
If it's more than 1 unit on any axis, compute the distance TAIL
needs to travel to catch up with HEAD.  Otherwise, return
nil (tail need not travel)."

  (let* ((x-distance (- (car head) (car tail)))
         (y-distance (- (cadr head) (cadr tail)))
         (distance (list x-distance y-distance)))
    (cond
     ((member distance '((0 0)(0 1)(1 0)(1 1)(0 -1)(-1 0)(-1 1)(1 -1)(-1 -1)))
      nil)
     ((member distance '((2 0)(-2 0)(0 2)(0 -2)))
      (list (/ x-distance 2) (/ y-distance 2)))
     ((member distance '((2 1)(2 -1)(-2 1)(-2 -1)))
      (list (/ x-distance 2) y-distance))
     ((member distance '((1 2)(-1 2)(1 -2)(-1 -2)))
      (list x-distance (/ y-distance 2)))
     ((member distance '((2 2)(-2 2)(2 -2)(-2 -2)))
      (list (/ x-distance 2) (/ y-distance 2)))
     (t (prog1 nil (print (format "found special case %s" distance)) (error "Done")))
     )))


;;; Results vector

(vector ;(aoc22/day9-part1 aoc22/day9test)
        (aoc22/day9-part1 aoc22/day9input)
        ;(aoc22/day9-part2 aoc22/day9test)
        (aoc22/day9-part2 aoc22/day9input)
        )
#+END_SRC

#+RESULTS: 2022-day9-solution
: [6081 2487]
** day 10
#+NAME: 2022-day10-input
#+BEGIN_SRC emacs-lisp :session "day10"
(defconst aoc22/day10test '((addx 15)
                            (addx -11)
                            (addx 6)
                            (addx -3)
                            (addx 5)
                            (addx -1)
                            (addx -8)
                            (addx 13)
                            (addx 4)
                            (noop)
                            (addx -1)
                            (addx 5)
                            (addx -1)
                            (addx 5)
                            (addx -1)
                            (addx 5)
                            (addx -1)
                            (addx 5)
                            (addx -1)
                            (addx -35)
                            (addx 1)
                            (addx 24)
                            (addx -19)
                            (addx 1)
                            (addx 16)
                            (addx -11)
                            (noop)
                            (noop)
                            (addx 21)
                            (addx -15)
                            (noop)
                            (noop)
                            (addx -3)
                            (addx 9)
                            (addx 1)
                            (addx -3)
                            (addx 8)
                            (addx 1)
                            (addx 5)
                            (noop)
                            (noop)
                            (noop)
                            (noop)
                            (noop)
                            (addx -36)
                            (noop)
                            (addx 1)
                            (addx 7)
                            (noop)
                            (noop)
                            (noop)
                            (addx 2)
                            (addx 6)
                            (noop)
                            (noop)
                            (noop)
                            (noop)
                            (noop)
                            (addx 1)
                            (noop)
                            (noop)
                            (addx 7)
                            (addx 1)
                            (noop)
                            (addx -13)
                            (addx 13)
                            (addx 7)
                            (noop)
                            (addx 1)
                            (addx -33)
                            (noop)
                            (noop)
                            (noop)
                            (addx 2)
                            (noop)
                            (noop)
                            (noop)
                            (addx 8)
                            (noop)
                            (addx -1)
                            (addx 2)
                            (addx 1)
                            (noop)
                            (addx 17)
                            (addx -9)
                            (addx 1)
                            (addx 1)
                            (addx -3)
                            (addx 11)
                            (noop)
                            (noop)
                            (addx 1)
                            (noop)
                            (addx 1)
                            (noop)
                            (noop)
                            (addx -13)
                            (addx -19)
                            (addx 1)
                            (addx 3)
                            (addx 26)
                            (addx -30)
                            (addx 12)
                            (addx -1)
                            (addx 3)
                            (addx 1)
                            (noop)
                            (noop)
                            (noop)
                            (addx -9)
                            (addx 18)
                            (addx 1)
                            (addx 2)
                            (noop)
                            (noop)
                            (addx 9)
                            (noop)
                            (noop)
                            (noop)
                            (addx -1)
                            (addx 2)
                            (addx -37)
                            (addx 1)
                            (addx 3)
                            (noop)
                            (addx 15)
                            (addx -21)
                            (addx 22)
                            (addx -6)
                            (addx 1)
                            (noop)
                            (addx 2)
                            (addx 1)
                            (noop)
                            (addx -10)
                            (noop)
                            (noop)
                            (addx 20)
                            (addx 1)
                            (addx 2)
                            (addx 2)
                            (addx -6)
                            (addx -11)
                            (noop)
                            (noop)
                            (noop)))

(defconst aoc22/day10input '((addx 1)
                             (addx 4)
                             (noop)
                             (noop)
                             (noop)
                             (noop)
                             (addx 6)
                             (addx -1)
                             (noop)
                             (addx 5)
                             (noop)
                             (addx 5)
                             (noop)
                             (noop)
                             (noop)
                             (addx 1)
                             (addx 3)
                             (addx 1)
                             (addx 6)
                             (addx -1)
                             (noop)
                             (noop)
                             (noop)
                             (addx 7)
                             (noop)
                             (addx -39)
                             (noop)
                             (noop)
                             (noop)
                             (addx 7)
                             (addx 3)
                             (addx -2)
                             (addx 2)
                             (noop)
                             (addx 3)
                             (addx 2)
                             (addx 5)
                             (addx 2)
                             (addx -8)
                             (addx 13)
                             (noop)
                             (addx 3)
                             (addx -2)
                             (addx 2)
                             (addx 5)
                             (addx -31)
                             (addx 36)
                             (addx -2)
                             (addx -36)
                             (noop)
                             (noop)
                             (noop)
                             (addx 3)
                             (addx 5)
                             (addx 2)
                             (addx -7)
                             (addx 15)
                             (addx -5)
                             (addx 5)
                             (addx 2)
                             (addx 1)
                             (addx 4)
                             (noop)
                             (addx 3)
                             (noop)
                             (addx 2)
                             (addx -13)
                             (addx -16)
                             (addx 2)
                             (addx 35)
                             (addx -40)
                             (noop)
                             (noop)
                             (addx 7)
                             (noop)
                             (noop)
                             (noop)
                             (addx 5)
                             (noop)
                             (addx 5)
                             (addx 10)
                             (addx -10)
                             (noop)
                             (noop)
                             (noop)
                             (addx 3)
                             (noop)
                             (addx 16)
                             (addx -9)
                             (noop)
                             (noop)
                             (noop)
                             (addx 3)
                             (noop)
                             (addx 7)
                             (addx -32)
                             (addx 35)
                             (addx -38)
                             (addx 22)
                             (addx 10)
                             (addx -29)
                             (addx 2)
                             (noop)
                             (addx 3)
                             (addx 5)
                             (addx 2)
                             (addx 2)
                             (addx -12)
                             (addx 13)
                             (noop)
                             (noop)
                             (addx 7)
                             (addx 5)
                             (noop)
                             (noop)
                             (noop)
                             (addx 7)
                             (addx -6)
                             (addx 2)
                             (addx 5)
                             (addx -38)
                             (addx 1)
                             (noop)
                             (noop)
                             (addx 2)
                             (noop)
                             (addx 3)
                             (addx 5)
                             (noop)
                             (addx 4)
                             (addx -2)
                             (addx 5)
                             (addx 2)
                             (addx 1)
                             (noop)
                             (addx 4)
                             (addx 4)
                             (addx -14)
                             (addx 16)
                             (noop)
                             (addx -13)
                             (addx 18)
                             (addx -1)
                             (noop)
                             (noop)
                             (noop)))

#+END_SRC

#+RESULTS: 2022-day10-input
: aoc22/day10input

#+NAME: 2022-day10-solution
#+BEGIN_SRC emacs-lisp :session "day10" :val x=2022-day10-input
;;; Code:

(defun aoc22/day10-part1 (instructions)
  "Take a list of INSTRUCTIONS and compute signal stregth.
We have one register x, and two cpu commands.  noop take one
cycle and does nothing, while addx takes two cycles and at the
end of the second cycle, changes the value of the register x.  We
need to check the value of register every 20th cycle, and add it
up to find the final signal strength"
  (let ((programm (mapcar #'copy-sequence instructions))
        (regx 1)
        (preg nil)
        (signal-strength 0))
    (dolist (tick (number-sequence 0 220))
      (if (= (mod (+ tick 20) 40) 0)
          (cl-incf signal-strength (* tick regx)))
      (cond
       ((= tick 0) ;; reset value at start
        (setq preg (pop programm)))
       ((equal preg nil) ;; no more instructions?
        (princ (format "No more instructions\n")))
       ((equal (car preg) 'noop) ;; do nothing, just fetch next
        (setq preg (pop programm)))
       ((equal (car preg) 'addx) ;; fetched addx
        (setq preg (cdr preg)))
       ((numberp (car preg)) ;; the argument of addx
        (progn (cl-incf regx (car preg))
               (setq preg (pop programm))))
       ))
    signal-strength))

(defun aoc22/day10-part2 (instructions)
  "Take a list of INSTRUCTIONS and draws an image on the screen.
We keep the register adjustment from the previous function, but
add also functionality for the CRT.  Now we don't need to compute
the signal strength, but still we need the position of the
sprite, which is three pixels long and the x register gives us
the position of it's middle pixel.  The crt ray keeps going
forward until and if the sprite is in position is drawn (with a
hash #) or else it draws a point (.)."
  (with-current-buffer-window "*CRT Output*" nil nil
    (insert "\n")
    (let ((programm (mapcar #'copy-sequence instructions))
          (regx 1)
          (preg nil)
          (ray 0))
      (setq preg (pop programm))
      (dolist (tick (number-sequence 1 240))
        (let ((pixel-pos (list (1- regx) regx (1+ regx))))
          (if (member ray pixel-pos)
              (insert "#")
            (insert "."))
          (cl-incf ray)
          (if (= ray 40)
              (progn (setq ray 0)
                     (insert "\n"))))
        (cond
         ((equal preg nil) ;; no more instructions?
          (princ (format "No more instructions\n")))
         ((equal (car preg) 'noop) ;; do nothing, just fetch next
          (setq preg (pop programm)))
         ((equal (car preg) 'addx) ;; fetched addx
          (setq preg (cdr preg)))
         ((numberp (car preg)) ;; the argument of addx
          (progn (cl-incf regx (car preg))
                 (setq preg (pop programm)))))))
    (insert "\n")))

;;; Helper functions:

;;; Results vector

(vector (aoc22/day10-part1 aoc22/day10test)
        (aoc22/day10-part1 aoc22/day10input)
        (aoc22/day10-part2 aoc22/day10test)
        (aoc22/day10-part2 aoc22/day10input))
#+END_SRC

#+RESULTS: 2022-day10-solution
: [13140 11720 nil nil]
** day 11
#+NAME: 2022-day11-input
#+BEGIN_SRC emacs-lisp :session "day11"
(defconst aoc22/day11test '(((79 98)       (* old 19)  23 2 3 0)
                            ((54 65 75 74) (+ old 6)   19 2 0 0)
                            ((79 60 97)    (* old old) 13 1 3 0)
                            ((74)          (+ old 3)   17 0 1 0)))

(defconst aoc22/day11input '(((98 97 98 55 56 72)       (* old 13)  11 4 7 0)
                             ((73 99 55 54 88 50 55)    (+ old 4)   17 2 6 0)
                             ((67 98)                   (* old 11)   5 6 5 0)
                             ((82 91 92 53 99)          (+ old 8)   13 1 2 0)
                             ((52 62 94 96 52 87 53 60) (* old old) 19 3 1 0)
                             ((94 80 84 79)             (+ old 5)    2 7 0 0)
                             ((89)                      (+ old 1)    3 0 5 0)
                             ((70 59 63)                (+ old 3)    7 4 3 0)))
#+END_SRC

#+RESULTS: 2022-day11-input
: aoc22/day11input

#+NAME: 2022-day11-solution
#+BEGIN_SRC emacs-lisp :session "day11" :val x=2022-day11-input
;;; Code:

(defun aoc22/day11-part1 (input)
  "Takes INPUT and solve the puzzle.
To be replaced with actual docstring."
  (let ((monkeys (mapcar #'copy-sequence input)))
    (dotimes (rounds 20)
      (dotimes (monkey (length monkeys))
        (let ((func (cadr (nth monkey monkeys)))
              (divisor (nth 2 (nth monkey monkeys)))
              (monkeyt (nth 3 (nth monkey monkeys)))
              (monkeyn (nth 4 (nth monkey monkeys)))
              (business (nth 5 (nth monkey monkeys)))
              (old nil))
          (setf (nth 5 (nth monkey monkeys))
                (+ business (length (car (nth monkey monkeys)))))
          (dolist (item (car (nth monkey monkeys)))
            (setq old item)
            (setq item (/ (eval func) 3))
            (if (= (mod item divisor) 0)
                (setf (car (nth monkeyt monkeys))
                      (append (car (nth monkeyt monkeys)) (list item)))
              (setf (car (nth monkeyn monkeys))
                    (append (car (nth monkeyn monkeys)) (list item))))
            )
          (setf (car (nth monkey monkeys)) '()))))
    (let (results)
      (dolist (monkey monkeys)
        (push (nth 5 monkey) results))
      (sort results #'>)
      (* (car results) (cadr results)))))

(defun aoc22/day11-part2 (input)
  "Takes INPUT and solve the puzzle.
To be replaced with actual docstring."
  (let ((monkeys (mapcar #'copy-sequence input))
        (uberdiv 1))
    (dolist (monkey monkeys)
      (setq uberdiv (* uberdiv (nth 2 monkey))))
    (dotimes (rounds 10000)
      (dotimes (monkey (length monkeys))
        (let ((func (cadr (nth monkey monkeys)))
              (divisor (nth 2 (nth monkey monkeys)))
              (monkeyt (nth 3 (nth monkey monkeys)))
              (monkeyn (nth 4 (nth monkey monkeys)))
              (business (nth 5 (nth monkey monkeys)))
              (old nil))
          (setf (nth 5 (nth monkey monkeys))
                (+ business (length (car (nth monkey monkeys)))))
          (dolist (item (car (nth monkey monkeys)))
            (setq old item)
            (setq item (mod (eval func) uberdiv))
            (if (= (mod item divisor) 0)
                (setf (car (nth monkeyt monkeys))
                      (append (car (nth monkeyt monkeys)) (list item)))
              (setf (car (nth monkeyn monkeys))
                    (append (car (nth monkeyn monkeys)) (list item))))
            )
          (setf (car (nth monkey monkeys)) '()))))
    (let (results)
      (dolist (monkey monkeys)
        (push (nth 5 monkey) results))
      (sort results #'>)
      (* (car results) (cadr results)))
    ))

;;; Helper functions:

;;; Results vector

(vector (aoc22/day11-part1 aoc22/day11test)
        (aoc22/day11-part1 aoc22/day11input)
        (aoc22/day11-part2 aoc22/day11test)
        (aoc22/day11-part2 aoc22/day11input)
        )
#+END_SRC

#+RESULTS: 2022-day11-solution
: [10605 54036 2487781790 13237873355]
** day 12
#+NAME: 2022-day12-input
#+BEGIN_SRC emacs-lisp :session "day12"
(defconst aoc22/day12test "Sabqponm
abcryxxl
accszExk
acctuvwj
abdefghi")

(defconst aoc22/day12input "abcccccccccaaaaaaaaaaccccccccccccaaaaaaaaccaaccccccccccccccccccccccccccccccccccccccccccccaaaaaa
abccccccccccaaaaaaaaaccccccccccccaaaaaaaaaaaacccccccccccaacccacccccccccccccccccccccccccccaaaaaa
abcccccccccccaaaaaaacccccccccccccaaaaaaaaaaaaaacccccccccaaacaacccccccccaaaccccccccccccccccaaaaa
abccccccccccaaaaaaccccccccccccccaaaaaaaaaaaaaaaccccccccccaaaaaccccccccccaaacccccccccccccccccaaa
abccccccccccaaaaaaaccccccccccccaaaaaaaaaaaaaacccccccccccaaaaaacccccccccaaaacccccccccccccccccaac
abaaccaaccccaaccaaaccccccccaaaaaaaaaaaaaaacaaccccccccccaaaaaaaacccccccccaaalcccccccccccccccaaac
abaaaaaacccccccccaaccccccccaaaaaacccaaaacccaaccccccccccaaaaaaaaccccccccalllllllcccccccccccccccc
abaaaaaacccccccaaacccccccccaaaaccccccaaaccccaaaaacccccccccaacccccccaaaakllllllllcccccccaacccccc
abaaaaaacccccccaaaacccccccccaacccccccaaaccccaaaaacccccccccaacccccccaakkklllpllllccccacaaacccccc
abaaaaaaaccccccaaaaccccaaccccccccccccccccccaaaaaaccccccccccccccccccckkkkpppppplllcccaaaaaaacccc
abaaaaaaacaaaccaaaaccaaaaaaccccccccccccccccaaaaaacccccccaaaccccckkkkkkkpppppppplllcddaaaaaacccc
abcaaaacccaacccccccccaaaaaacccccaaaccccccccaaaaaacccccccaaaaccjkkkkkkkpppppuppplmmdddddaaaccccc
abccaaaaaaaaaccccccccaaaaaaccccaaaaaacccccccaaacccccccccaaaajjjkkkkkrpppuuuuupppmmmdddddacccccc
abccccaaaaaaaacccccccaaaaacccccaaaaaacccccccccccccccccccaaacjjjjrrrrrrppuuuuupqqmmmmmddddaccccc
abccccaaaaaaaaacccccccaaaacccccaaaaaaccccccccccccccccccccccjjjrrrrrrrrpuuuxuvvqqqmmmmmddddccccc
abccccaaaaaaaaacccccccccccccccccaaaaaccccaacccaccccccccaaccjjjrrrruuuuuuuxxyvvqqqqqmmmmmdddcccc
abccccaaaaaaaacccccccccaaaccccccaacaaccccaaacaacccaaacaaaccjjjrrrtuuuuuuuxxyvvvqqqqqmmmmdddcccc
abccaaaaaaaacccccccccccaaaaaccccccccccccccaaaaacccaaaaaaaccjjjrrttttxxxxxxyyvvvvvqqqqmmmmdeeccc
abccaaaccaaaccccccccaacaaaaacccccccccccccaaaaaacccaaaaaacccjjjrrtttxxxxxxxyyvvvvvvvqqqmmmeeeccc
abaaaaaaaaaacccaaaccaaaaaaaaaaaccaaaccccaaaaaaaacccaaaaaaaajjjqqrttxxxxxxxyyyyyyvvvqqqnnneeeccc
SbaaaaaaaaccccaaaaccaaaaaaaaaaaaaaaaacccaaaaaaaaccaaaaaaaaacjjjqqtttxxxxEzzyyyyvvvvqqqnnneeeccc
abcaaaaaacccccaaaaccccaaaaaaaccaaaaaaccccccaaccccaaaaaaaaaaciiiqqqtttxxxyyyyyyvvvvrrrnnneeecccc
abcaaaaaacccccaaaacccaaaaaaaaccaaaaaaccccccaaccccaaacaaacccciiiqqqqttxxyyyyyywvvvrrrnnneeeecccc
abcaaaaaaccccccccccccaaaaaaaaacaaaaacccccccccccccccccaaaccccciiiqqtttxxyyyyyywwrrrrnnnneeeccccc
abcaaacaacccccaacccccaaaaaaaaacaaaaacccccccccccccccccaaaccccciiiqqttxxxywwyyywwrrrnnnneeecccccc
abccccccccaaacaaccccccccccacccccccccccccccccccccccccccccccccciiqqqttxxwwwwwwywwrrrnnneeeccccccc
abccaacccccaaaaaccccccccccccccccccccccccccccccccccccccccaacaaiiqqqttwwwwsswwwwwrrrnnfffeccccccc
abaaaaccccccaaaaaacccccccccccccccccccccccccccccaaaccccccaaaaaiiqqqttssssssswwwwrrronfffaccccccc
abaaaaaacccaaaaaaacccccccccccccccccccccccccccaaaaaacccccaaaaaiiqqqssssssssssswrrrooofffaaaacccc
abaaaaaaccaaaaaacccccccccccccccccccccccccccccaaaaaacccccaaaaaiiqqqppssspppssssrrrooofffaaaacccc
abaaaaaaccaacaaacccccccccccccccccccccccccccccaaaaaacccccaaaaaiihpppppppppppossrrooofffaaaaacccc
abaaaaccccccccaacccccccccccccccccccccccccccccaaaaaccccccccaaahhhhppppppppppoooooooofffaaaaccccc
abaaaaccccccccccaacccccccccccccccccaaacccccccaaaaacccccccccccchhhhhhhhhhggpoooooooffffaaaaccccc
abccaacccccccacaaaccccccccccccccccaaaaacccccccccccccccccccccccchhhhhhhhhggggoooooffffaacaaacccc
abccccccccccaaaaacaaccccccccccccccaaaaaccccccccccccccccccccccccchhhhhhhhggggggggggffcaacccccccc
abccccccccccaaaaaaaaccccccccccccccaaaacccaacccccccccccaccccccccccccccaaaaaggggggggfcccccccccccc
abccccccccccccaaaaaccccaacccccccccaaaacaaaaccccccccaaaaccccccccccccccaaaacaaagggggcccccccccaccc
abcccccccccccaaaaacccccaacccccccccaaaaaaaaaccccccccaaaaaaccccccccccccaaaccaaaacccccccccccccaaac
abcccccccccccaacaaccaaaaaaaacccaaaaaaaaaaaccccccccccaaaaccccccccccccccaccccaaacccccccccccccaaaa
abccccccccccccccaaccaaaaaaaaccaaaaaaaaaaaccccccccccaaaaacccccccccccccccccccccacccccccccccccaaaa
abccccccccccccccccccccaaaaacccaaaaaaaaaaaacccccccccaacaacccccccccccccccccccccccccccccccccaaaaaa")
(mod 1705 95)
#+END_SRC

#+RESULTS: 2022-day12-input
: aoc22/day12input

#+NAME: 2022-day12-solution
#+BEGIN_SRC emacs-lisp :session "day12" :val x=2022-day12-input
;;; Code:
(require 'cl-lib)
(setq case-fold-search nil)
(defun aoc22/day12-part1 (input)
  "Parse INPUT, create a network and apply Dijkstra's algorithm.
To be replaced with actual docstring."
  (let* ((network (cl-reduce #'concat (split-string input "\n" t)))
         (columns (string-match-p "\n" input))
         (lines   (/ (length input) columns))
         (start   (string-match-p "S" network))
         (finish  (string-match-p "E" network))
         (dist    (make-vector (* lines columns) nil))
         (prev    (make-vector (* lines columns) nil)))
    (dotimes (idx (* lines columns))
      (aset dist idx (list ?∞ t)))
    (aset dist start (list 0 t))
    (while (cadr (aref dist finish))
      (let* ((minimum-distance (cl-reduce #'min
                                          (mapcar #'car
                                                  (seq-filter (lambda (x) (cadr x)) dist))))
             (current (cl-position-if (lambda (x)
                                        (and (= (car x) minimum-distance)
                                             (cadr x))) dist)))
        (setf (cadr (aref dist current)) nil)
        (dolist (direction (list (- current columns)
                                 (1+ current)
                                 (+ current columns)
                                 (1- current)))
          (if (and (>= direction 0) (< direction (* columns lines)) (cadr (aref dist direction)))
              (let ((delta (- (aref network direction) (aref network current))))
                (cond
                 ((= current start)
                  (let ((start-delta (- (aref network direction) ?a)))
                    (if (<= start-delta 1)
                        (let ((alt (1+ (car (aref dist current)))))
                          (if (< alt (car (aref dist direction)))
                              (progn (setf (car (aref dist direction)) alt)
                                     (aset prev direction current)))))))
                 ((= direction finish)
                  (let ((end-delta (- ?z (aref network current))))
                    (if (<= end-delta 1)
                        (progn (setf (car (aref  dist finish)) (1+ (car (aref dist current))))
                               (aset prev finish current)
                               (setf (cadr (aref dist finish)) nil)))))
                 ((<= delta 1)
                  (let ((alt (1+ (car (aref dist current)))))
                    (if (< alt (car (aref dist direction)))
                        (progn (setf (car (aref dist direction)) alt)
                               (aset prev direction current)))))))))))
    (car (aref dist finish))))

(defun aoc22/day12-part2 (input)
  "Takes INPUT and solve the puzzle.
To be replaced with actual docstring."
  (setq case-fold-search nil)
  (let ((position 0)
        (start (string-match-p "S" input))
        (results ()))
    (while (setq position (string-match-p "a" input position))
      (aset input position ?S)
      (aset input start ?a)
      (setq start position)
      (push (aoc22/day12-part1 input) results))
    (cl-reduce #'min results)))

;;; Helper functions:

;;; Results vector

(vector (aoc22/day12-part1 aoc22/day12test)
        (aoc22/day12-part1 aoc22/day12input)
        (aoc22/day12-part2 aoc22/day12test)
        (aoc22/day12-part2 aoc22/day12input))
#+END_SRC

#+RESULTS: 2022-day12-solution
: [29 422 29 414]
** day 13
#+NAME: 2022-day13-input
#+BEGIN_SRC emacs-lisp :session "day13"
(defconst aoc22/day13test '(([1 1 3 1 1]
                             [1 1 5 1 1]
                             )(
                             [[1] [2 3 4]]
                             [[1] 4]
                             )(
                             [9]
                             [[8 7 6]]
                             )(
                             [[4 4] 4 4]
                             [[4 4] 4 4 4]
                             )(
                             [7 7 7 7]
                             [7 7 7]
                             )(
                             []
                             [3]
                             )(
                             [[[]]]
                             [[]]
                             )(
                             [1 [2 [3 [4 [5 6 7]]]] 8 9]
                             [1 [2 [3 [4 [5 6 0]]]] 8 9])))

(defconst aoc22/day13input '(([[9 8 [4 [3 10 7 7 7] [10 4 0] 4 [4 2 5]] [[8 8] 2 [8 2] 9] [8 1]]]
                              [[] [7 8 9 2 5] [[9 [8 2 1 4 8] [7] 6] [[8] [8 10 6 0] 10 4 3] [7] 9] [[[3 7] 5] [[7 3 2 0 4] 0 [2 2 8 0 1] [5]]] [[[] [] [5]] 8 10 [] [[8 9 3 1]]]]
                              )(
                              [[[] 0 [] [[] 9 5 1]] [[] 0] [[] 0 3] [7 0 9 5]]
                              [[] [3] [[[6 0 0 10 0] 0 10 [1 1]] 7 [8 [9 6 3] [3 4] 4]] [] [[[0 7 8 9] [9] [3] [8 2 10 1] [2 0 5]]]]
                              )(
                              [[[] 5 8 []] [[10 5 [] 10 0] 7 [] 2] []]
                              [[[[]] [6 9] [[0 7] 3] [[2 9] [3 6 0] [] 0] []] [2 [[2 6 1 10 1] [8 9 7 6] 4 []] 0 9 [[] [9 2 1 7] [9 10 0 6] [9 8 9]]] [[3 10 [4 10 0 9 3]] 5 [9 8 [7 5 7]] 3 7] [] []]
                              )(
                              [[] [[6] 1 [10 10]] [1 [3 [7] [10 7 4 4] 4 [7 3]]] [0] [7]]
                              [[[[6 3 8 10 5] [6 4 9] [6] 9] 5] [2 1 7 4]]
                              )(
                              [[[[4 6 7 9] [10]] 3 5 [4 [7 3 6] [0 9 8 6]]] [[]]]
                              [[[4 2 [1 6 5] [8 9 0 6] [0 7]]] [7]]
                              )(
                              [[[0 2 5]] [3 7 [5] [4 [6 6 3 1] [8 10]]] [8 5 6] [3 3 [8] 3]]
                              [[10 8 6 10] [10] [] [[[] 7]]]
                              )(
                              [[7 [[4 10] 5] 7 6 1] [[] 10 6 []] [[7 [3] [7 6 1 8 1] 5 []] [5 2 [7 2 8 3] 7]]]
                              [[4 10 9]]
                              )(
                              [[[[7 9] 10 9 [3 9 1]] 7 [[3 7 10 3 10] [3 10 9 8 8] [8 8 8] [4 10 5 10 3]] [5] 8]]
                              [[[0] 0 9 4] [8 10 6 4 [[0 2 5 9]]] [[] [[10 10] 5 [6] 4] [[4 7 0 2 1] [5 9 7] []] 9]]
                              )(
                              [[] [5 [9 1]] [[1 [10 0 0 9] 0] 4 [] 1 [3 2 8]] [8 [[3 1 3]]] [2]]
                              [[9 [0 0 [1 1 2 6 0] 5]] [[[6 9 1 5] 0 6 0] 3 []]]
                              )(
                              [[[] 5 [[5 2] [2 3 2 8] [2 5 6 2] 6] [2 [1 7 0] [8 9 8 8 7] 1] 4] [8 [2 1 []] 9]]
                              [[10]]
                              )(
                              [[] [[[5 7]] [8 [9 4 2 3] 2 4] [] 6] []]
                              [[[[3 9]] [6 9 [10 6]]] [[9 0 [3 7 7]]]]
                              )(
                              []
                              [[2 6 [[8 10 3 7 4] 7] []] [[[2] [2 9 9 1] []] [2] 2 [[6 7] 9 [9 9 1]] 0] [2 4 6 5 9] [[0 8] 7 [6 9] [] [[] [6 4 9 0] 8 [4 9 5]]]]
                              )(
                              [[[7 1 5 2 9]] [[[0 9] 6 [1 7] [4] 4] [[7 3] [9 10] [2 0 0]] 0 7 [[] [9] [10]]] [0 [[8 1 2 6 0] 1 10] 4 [10 [10 4 6] 1 8]] [[] [4 []]]]
                              [[8 7 7 3] [[10] [[0 6 9]] [[5 7] 10 [5 7 7] [9 4 0 3]] [8 [6 9 9 9 10]] []] [[[] [8 4 8 6 0]] 9 [[]] []]]
                              )(
                              [[3 [6 [1]] [3 [0 0 6 4] 5]]]
                              [[[2 []] [6 9 [] [3]] 8 4]]
                              )(
                              [[[[2 5 6] 7] 3 5] [] [[] 9]]
                              [[6 9 5]]
                              )(
                              [[7] [] [[[] [3] 0] 1 4] [4 [9 9 7 [7 0 0] 2] [2 [0 9] 4 [3] [7 3]] 1]]
                              [[7 [3 9 9] [] [[] 1]]]
                              )(
                              [[10] [[] 3 5 8 4] [2]]
                              [[6] [0 [3 [0 8 8 2] 1]]]
                              )(
                              [[[[9 6 1 8 9] [1]]] [[[5] [6 8 7 5 10]] 4 [7 [4 6 7 1 2]]] [[[2]] 9 7] [8 6 [[0 2 2 7 10] [0 1 10 4] [4 3 0 9 3]]]]
                              [[0]]
                              )(
                              [[[0 [3 5 2 0 8]] 1 [[3 7 7 8 5] 10 [7 10 3 5 3] [8 7 5 9 8] [8 0 3 4 2]]]]
                              [[5 [] [[0 3 4 0 7] 0 [9 4 1 1]] []] [9 [3 [0 2 0 8 10] [7]] 8 9 [[7 8 1] 3 [2 10] [4]]]]
                              )(
                              [[3 [] [5 [4] 9 [1 6 8 1] 1] [9 [0 10 2 0 6] 8] 8] [[9 [9 8]] []] [[4 2 8] 1 10 [[5 4]] 0] [[5 7 [0 5 8] [10] 0]] [9]]
                              [[0] [9 8]]
                              )(
                              [[] [3]]
                              [[6 [] 7] [4 2 8] [[[2 1 0] [3 7 4 5 6] 8] [[6] [10 9 6 4] [3 1] [9 8 10 6 2]] [1 4 1]] [9 4 [[] [0 4 6 7] 10] 0 [[0 8 6 6 9]]]]
                              )(
                              [[2 4 [3 6 2 5] 4]]
                              [[] [7 10] [2 [[2 1 7 2 8] 7]] [[[4]] 0 [2 4 1 4] [5 [6 6 10 8 2] 9 4] [8 [6 8 10]]]]
                              )(
                              [[9 1 [6 7 [] 4] []] [] [10 [8 [5]] [[0 5 5]] [6]] [1] [[[0] 4 [7 7] 7] 8 [8 [7 1 9 9 2] 0 [3 8] []] [10 9 3 [7 7 3]]]]
                              [[9 2] []]
                              )(
                              [[9 [[1 6 6 3] 5 4] [] [2 [5 1]]] [3 [9 [] [6 4 3] 10 1]] [9] []]
                              [[] [[[] [7] 1 [0 7]] [] [4 2]] [5 6 [2]]]
                              )(
                              [[[[0 2 0] [10 7 9] 10 [10] 3] 7 [[8] [5 10 3 0] 10 5 1]] [9] [] [0 10 7 9 2] [9 2 0 7]]
                              [[3 4] [0 [[0] 9 6 10] [6]]]
                              )(
                              [[0 [[4 5 9] [] 1 [5]] [[4 4 8] [] [1 6 2 1] [] 1] 9] [[] [3 1]]]
                              [[[3 3 [10 5]] [[9 0 10 1]] [10]] [0] [[[1 2]] [[3] [4 4 4 8 6] [3 6 2 10]]] [[10 [10] [7 0]] [[0 8] [4 1 4 6] 3 [] [0 5]]] [[4 [9 2]] [[2 4 6 8 9] 6 8 [8 6]] [[2 8 10] [10 8 0 7 3] [1] 2 3]]]
                              )(
                              [[9 [10 [0 8 7 3] 9 [9 10 3] [4 7 4 1 5]]] [1] [] [[[] [8] 7 [9 1] [8 2]]] [0 8 2 0 1]]
                              [[7 [[0 1] 3 6 4 6] [[9 4 2] [1 8 3 8 10] [3 0 1 6] [5 6 5 9 4]] 9 [[3 9 3 3 3] [2]]] [[[2 5 3] [3 1 7] [4 10] 2] 7 [5] 3] [4 [1 1 1 0 [6 9 9]]] [10 [[0 8 5 6 5] 6 [2 8]] 8 [] 6]]
                              )(
                              [[[[3 9]] [[9] 8]] [[1 10 0 6] [[3 7 5 8 4] 7] [6 2] 9 [[10 7 4]]] [[8 [] [6 4 8] [2 6 4]]] [7 [6 1 [2 3 4] 3 4] 6 4 3]]
                              [[[9 [7 3 0 9 5] [4 10] 4]]]
                              )(
                              [[[0] 0 [[] 8 10 1 [9 3 1]] [[0 0 6 2 3] [8 3 10]] [[8 1 5 8 1] [0 5 1 10] [8]]] [[[9 7 10 1] [0 8]] [] 6] [] [1 [6]]]
                              [[[[5 4 1 1] 0 []] [8 3 [10 3 3] [7 3]]] [] [[[9 2 8 5] [] 1 []] [[3 10 1 7 6] 6] [[6]]] [9 10]]
                              )(
                              [[[7 9 6] [] 2 [0 [] 2 1] [9]] [8] [4 6 [1 [4] [3]] 3] [[] 2 1 [] [4 [3 0 0 3 0]]]]
                              [[[]]]
                              )(
                              [[[8 9 5 [6] 6] [[] 7] [[4 6 6 9 0] [0 0 9] 10] [[7] 5 8 [4]] 9] [5 [[10 10 1 10] [9 2 10 5] [10 10] 1] 4 0 5] [[6 [6 1 3 4] 5]] [[7 4 [3 3 7 4] [1 0] 7] 7 [10 0 3 [10 0]] 1]]
                              [[3] [[[] [1 2]] 7 [1 [6 10 4 8] [10 5 0] 2 [4 2 5]]] []]
                              )(
                              [[7 5 [4] [[8 1 7 5] [3] 1 [] 3]] [2]]
                              [[8 [] [[4 2 5 8 2] 2 8 []]] [1 3 [10]] [3 [[0 5]] 1 [1 9 [3 6 3 8 7] 6] []] [4 [6] [10 [] [6 1] 0] [7 [] 6]]]
                              )(
                              [[6 [[3 7 7] [1 10 10 1 5] 7] 0] [9 9 10 [5] [[0 0 6 9] 4 7]] [[] [[] 7]] [[[10 8 6] [] 1 [4 1 6 8]] 6 [[] [6] [7]] [[3 5 10 5] 10 0 1 4] 10]]
                              [[[2 [2 4 5 4]] 0 [] [[4 5 0 1 2] 8] 7] [[] [3 [] 10 [4]]]]
                              )(
                              [[[[6 2 8 3 5] 9] 10 5] [0 9 [[10 0 3 10] [9 8] 10 []]] [[[] 3 [] []] [] [[3 6 6 1] 8 2] 0] [[8] 7]]
                              [[6 10 []] [9]]
                              )(
                              [[3] [[[]] [[3 5] 1 3] [] [0 [7 9 4 0] [2]] 8] []]
                              [[]]
                              )(
                              [[0 [3 0 9 [8 6] 8] 4 3]]
                              [[6] [2 5 [5 7 7 10 [4 8 2 9]]] [3 6 [0 [3] [3 6] 5] 1 [[10] 1 7 3 [7 9 9 5 6]]]]
                              )(
                              [[10 [8] [[8] 2 9]] [3 10] [1 1 10 [2 [3 6 6 2] [] [0 2 1 3] 2] [[3] 2 [3 9]]] [[7 [] [10] [6 6] [6 4 6 9]] 5 1 [[4 9 6 2 8] 7 [10 10 2] 1 [9 8 10 0]]]]
                              [[1] [9 6 6 [] 7] [8]]
                              )(
                              [[[10 [1 6 0 9]]] [[7 [10 1 6 6] [2 0 1] 8] 4] [10] [[] 1] [[9 2 [9 10 10 7 5]] 5 [] 10 [[3 9 3 1 1]]]]
                              [[] [[1 10 [6 3 2] [10 9 1 4 10] 1] [[3] [6 3] [4 8] []]] [[6 [1 1 9 8 0] [7 5]]] [[[] 8 0 [10 10] 0] 0 2 [] [6 [3 9 9]]] [1 [] 8]]
                              )(
                              [[[[8 1] 2 9]] [[[5 7 4] [6 9 7 9 9] [3 2]] 0 0 [] [7 [7 10 6 3 3] [10 2 3]]] [[0 2 [0 6 3] 5 [0 4 4]] 10 [[10]]]]
                              [[] [[] 4 6 5 10]]
                              )(
                              [[[0 6 [0 4 7 10 8] 6] 1] [2 8 0] [[7 4] 8 [[6 6] 2 [] [4 1 6 8 1]] 2 10]]
                              [[[6 6 5] [[7] [4 10]] [[] [7 6]] 0] [] [] [[[0 2 3 2] 8 8 [3 6 6 10 1] 2] 2 [7 []]] [[5 [] 3 3 8] [[5 0 3 3 3] [1]] 10]]
                              )(
                              [[[5] 5] []]
                              [[] [[[4] 8 [3 1 5 0 9] 6] 10]]
                              )(
                              [[9 [[7] 2 [0 8 2 8 8] 8 [8 10 0]] 6 [2] 3] []]
                              [[[4 [2 3 1 0]] 1] [] [0 [9 7 3 [4 2 0 8 10] [3 0]]] [2 [6 [8] 7 [10 5] 8] 9 9] [10 [[1 3 4] [4 5]] [[] [6 6 1 5] [9 10 6] [1 5]]]]
                              )(
                              [[[[9 0 2 1 3] 4 [2 7] 6 2] [7 10 [] 8 [10]] [[9 3 3 3] [7 5] [0] [4 0 0 6 4] [2 5 10 4 5]] [5 3]]]
                              [[1 9 2] [7] [[8 5] [3 [4] 9]]]
                              )(
                              [[[7 4 [10 5]] 7 [[6]] 4 [[8 7 9 0] 3 6 0]]]
                              [[[] 2] [] [8 [[8 5]] [[4] 9 [0] 7 7] [[] [0 9 3 2]]]]
                              )(
                              [[[]] [] [[] 5] [] []]
                              [[[[]] 10] [[7 3 [4] 3 [7 0 1]] 1] [0 [10 [9 10 4 5] 4 []] [1 [1 2] 1 2]]]
                              )(
                              [[10 [[]] 5 [[8 1 3 5] [0]]] [[[5 3 4 2] []] [[1] 7 []]] [[[4 0 2]] 9] [7 4 [5] [[2] 10]]]
                              [[] [3 9 [] 1 1]]
                              )(
                              [[[[9] [0 10 8 6 3]]] [] [[[0] 3 [3 4 0 5 5]] [10] 3 [2 2 [] [10 3] [10 6]]] [[9 [4 1 7 6] 8 []] [8 1 7 2 1] [[4] [3 6 4 1] [2 7 5 7 10] 4]] []]
                              [[8 4] [1 2 [10 0 [5 2 3 9]]] [7 7 8 [[] 1]]]
                              )(
                              [[5 7 9] [[10 6 5 [0 4]]] [[[4]] []] [[[1 2 4 8]] 9 [3 [] [8 9] 9 3] 1] [[] 3 2 [[]]]]
                              [[2 [[9 3 8 3 2] 5] [[] 4 [] 1 1] 3 0]]
                              )(
                              [[3 [[6 3]] 3 [[10 0 2 8 2] 9] 7] [10 [[0 5 1] 6] []]]
                              [[10 [[] [1 7] 7 5] 9] [0 6] [] [[[4] 6]]]
                              )(
                              [[] [9 [5 [10 10 3] [8 2 8]] [3 [] 4] 0] [] [2 [9 5]] [10 3]]
                              [[[[9 9 9] [3] []] [1]] []]
                              )(
                              [[[[1 8 4] [7 5 3 3 5] [1 6 7 4] [1 6]] [5]]]
                              [[[] 8 7] [[10 [] 0 [0 5 6 7 10]] 8 [[4 5 2 7 10]] 6 3] [1 [10 [9] [6 8 5 3] 0] 9 3 [[1 8 5] 10]] [[7] [] 4] [7 [[0 9 3 7 10]]]]
                              )(
                              [[[[9 10 1 3] [8 4] [1 4] [4] 7]] [] []]
                              [[[1 [2] [9 3 3 3] 5 [6]] [[6] 4 9 1 1] [4 [8 8 4 8 4] [] [0 8]]] [9 1 4 [[9 2 2 1 8] 2]] [9] []]
                              )(
                              [[] [4]]
                              [[[[5 5 4] [3 1 6 8] 0] [[7] [5 6 4 0 2] 6 []] [[2 9 4] 7 10 [5 3 7 7] 4] 2] [6 []]]
                              )(
                              [[1 6]]
                              [[[] 2 [[] 6 0]] [[[]] 8 10] [[] 8 9 0] [3 3 0 [4 [2 4 2 6] [2] [1 9 4 6 9]] [[9 2 10 9] 3 8]]]
                              )(
                              [[[[10 6 4] 10] 10] [[[10 1 4 6] 7 [5 1 1]] 10 [9 1]]]
                              [[[[2 4 2] [8] 4 [0 4] 7] 0] [] [[[1 8] [1 2] 7 10 [7 5 7 6 3]] [[7 2 6 2 1] 7] 8]]
                              )(
                              [[9 [9 [5 2 9 10] [0 2 6 4] [0 1 5 6]] 8 6 6] [6] [] [4 9 5 1 [1 [] 2 8]] [[4 [7] [] [9 1]] [] 4]]
                              [[] [] [[] [[5 5] [1 10 7] [] 9] 4] []]
                              )(
                              [[4] [10 8 [[7] [5 5 7 5] [1] [8 0 0] []]] [[0 3 [10 4 10 9 5] 7] 6] [[8 3 1 0 [10 4 5 9]]] [6]]
                              [[3 []] [4 [[0 9 5 6 1] 2 0 [2] [4 9 10]]] [8 [8 []] 5] [[9 8 [5 1]] 2 5] [5]]
                              )(
                              [[1 7 [4 10]] [[[10 6 3] []] [3 1 [1 8]] [] 0 2]]
                              [[2 1 6] [[[1 0 2] [10] [] 1 [9 1 10]]] []]
                              )(
                              [7 5 1 1 2]
                              [7 5 1 1]
                              )(
                              [[[9 [0] [6 4]] 3 0 7 [9 [8 7 2 6 6] [8 9 5] 8 [6 0 1 7]]] [[3 4] []] [[6 [10 9 5 3 0] [8 2 6 9] 10 [1 2 6 8]]]]
                              [[[] 0 [3 [2 2 2] 9 [9 1 6] [7 8]] 0 4] [[5 [9 10 9 9] 6 [5 0 6]] 4 [[2 1] [2] 4 []] 0 8] [0 [0 [1 0]] [8 [4 2]]] [2 [[3 6 10 9 4] 3 8 2 10] [6 [7 5 9 5]] [0 [6 7 1 2] [0] [] [1 2]] [[6] 4 [6 10 4 2] 4 [5 3 4 3]]] []]
                              )(
                              [[] [] [[4 8 5] 5 8 1 []] [[[] 9] [[6] 1 0]]]
                              [[[[] 9 [6 9]] 4 8 10] [8]]
                              )(
                              [[0] [7 [[] 8] 5 [[4 10 2 8 9] [3] 6 [7 5 3 0 10]] [[] 3]] [[] [3 [8]] [] 5] [[] 9 [[5 1 7 1 1] [0] 5 [5]] [[6 5 2 3 10]] [[2 0 8 2] 0 2 6]]]
                              [[7] [[3 [5 0 9 8] [10 1 9 10]] [] [2 8 [10 8 3 2 4]]] [[3] 6] [[[6 3] [7 8 10] 1 3 [8 10]] 1] [5 [6 4] 1 6 [1]]]
                              )(
                              [[4 [1]] [[[3 8 10] [3 3] 0 8] 6 3 3] [[4 9 7] [] 8]]
                              [[2] [] [[] 6 [[6 3 3 7] [0] 7 [3 0 7 6]] 7] [[[0 7 7 6] 8] 10 [] [6 6 4 6]] [5 0 2 [[1 3 6 6] 8]]]
                              )(
                              [[[[0 5 4]]] [[] 8 [[7 1] [6 1 3 2] 1] [[8]]] [[] [8 7 [4 9]] [6 [] 10 10 6] [5 5 [0] 1 [6 6 5]]]]
                              [[] [] []]
                              )(
                              [[2 10] [5 0]]
                              [[[0 6 10 2 []] 4 0 [6 [8]]] [[] [3 [9 2] 8 9 [10 3 2 1]] 0] [[[6 8 3 2 9] [7 1]] [[6 10 7 4] [6 5]] [5 3 1 7 [0 3]] 0] [[[8 10 3 7] [1 2 7 5] 1 0 [8]] [0 [7 9 7 3]] [[]]]]
                              )(
                              [[9 [0 0 [10 1]] 3 [[0 10 5] [7 8 0 3 5] 5 0 5]] [8] [[] 10 2 10 3] [3 [8 3 [8 10 8] 0 []] [[7 8 8 2 7] [] [0 2]] [[5 1 3] 3] 1] [0 [[4 8 10] []] 3 5 6]]
                              [[[[5 4] 0] [[6] 3 5 [10 0 7] 7] [[6] [1 10 2] 5] [9 [7 1] 10 [8 4 8 5 0] 10] 8] [[[0] 8 3 10] 2 6 [] 9] [1 [6 2 9] [[1 0 1 10 0] [0 3 2 4] [10]] []] []]
                              )(
                              [[3] [[4]] [[[] 9 [7 1 3]] [] [5] [9 [8 1 10 10] 7 8 [3 1 1 10 1]]] [[[] [0 1] [] 3] [[0 8 1 10 6] 0 1]] [[6 10] [] [] [2 [4] 7] 0]]
                              [[] [7 [10 [10 1] 7 4] [8 1 1] [[7 3] [2 9 0 6] [0 3 8] 4 [4 7 5 8]] 10] [3] [6 10 [[4 4 4] [3] [5 6 7]] [[4 8 1 9 5] [] [4 8 2] [3]]] []]
                              )(
                              [[2 [[]] 2 [[5] [5 5 9 7 3] [10 1 2 10]]] [] [10] []]
                              [[9 10 5] [] [[[1 0]]]]
                              )(
                              [[7 4] [4] [[1 [0 0 5 9] [8 6]] [] [[] 4 7 6]]]
                              [[0 [9] [6 5 [] 8 [0 2 4]]] [[] 5 [[] [1 4 3 8] 9 9]] [[0 8 2 4 [5 5 0]] [9 5 3 [] 8] 7 [10 [5 3 8 7 9] [4] 8 7] 4]]
                              )(
                              [[[5] 6 [4 [10] 9 1] [7 [9 4 2 6 1] [3 10 0 5] 9 3] 4] [[3 7 2 [3]] [] [[]]] [6 1 [[1 9 7 2 7] [10 2 10 3] [9 8 7]] [8 1 9 [0 7 0 2]]] [[[2 4 1 1 2]] [7 2 [7] 7] 7 6] [0 8 [7 4 0] 1 3]]
                              [[[[7 1 10]] 10 [8 8]] [[[] [4] 4 [4 2 6 8]] [[2 1 3 1 1] [1 10 9 5] [0 4]] [] [[] [] [4 10 10] 3 [2 0 4]] [3]] [2 6] [7 4 6] [[5 9 [2 5 0 4 1] [5 7 2 8 5]] [[4 4 8 10]] [[4] [0]] [] [[3 8 10 4 1] [10 2 8 6] 7 [6]]]]
                              )(
                              [[[] 3 8 [[5 8 4 6]] [[] [9 10] 1 8 8]]]
                              [[[8]] [8 [[1 0 6 1 6] [1 0 7] 8 8 0] [5 [0 1 10 1 5]] [[2 6 3 4 10]]]]
                              )(
                              [[3 3 3 [1 6 4] 0] [5 [4 8] 0 6 1]]
                              [[6] [[[9] 1 8]]]
                              )(
                              [[] [[[7 4 7 7] 5]] [[[8 7 5] 9 1 1]]]
                              [[[[10 3 5] 3 8 [3 9 6]]] []]
                              )(
                              [[6 [[4 6 2 10 2] [10 3 6]] 8] [2] [[1 6 [8 6 9 10 4] 1] [1]] [1 8 [1]] [[]]]
                              [[[] 10 [[0 8 1] [5 7 3]]] [6 [] 9 [[7] 2]] [5 [[] [] [6 0 5] 1 3]] [[[3 7 4 10] [9 6 10] 5 8] [0 [5 2 0 3]] [[4 2] 5]]]
                              )(
                              [[[[3 7 7 4 7] [] 0] [] 1] [[10 10 2] [[2] 0 [10 3 3 2 5] [6] [10 1 0]] [5]] []]
                              [[0 [0 2 [1 10 4 9 3] [1 8 0 2 8] []]] [2 0 2] [7 [7 6] 2] [10]]
                              )(
                              [[4 4 [2 [7 7] [2] [9 6 1 0 5]]] [[] 7 8 1] [[1 [] [3] [5 7 1 10] [7 6 5]] 2 []] []]
                              [[10 [] [[9 1 5 9 7] 1 7 []]] [[[9] [10] 8 9 8]] [[[8 4 0 4] 2] [[7] [] [10 0]] 0 [8 3 [3]]] [] [[[8 2] [1 1 2 8] 7 [] [0 10 0 7 0]] 8 4 10 1]]
                              )(
                              [[] [6 [[6 6 8]] 2] [0 [1 7 1] [[2 8 7] [5 4]] 2 [[4] 1]] [10 [[4 1 1] 6 5 [9 6 3 1 10] 7] [] 0] []]
                              [[[4 2 [2 3 3 8] []] 8]]
                              )(
                              [[8 3 6] [] [[]] [[[2 9 1 1] 5 4 8] 6] [[[7] 7 [4 7] [3 4 3 6 8] [4 6 7]]]]
                              [[] []]
                              )(
                              [[] [[[3 5] [6] 2 8] 0 4 1] [] [5 10 8] []]
                              [[1 8 1 [[5 3] [7] [7 9 9 4 6] [7 8 1 1] 5]] [[]] [[[8 9 2]] [[5]] 9 [4 [] [3 5 0]]] [6 10 7 7] []]
                              )(
                              [[[]] []]
                              [[3 7] [] [[[7 7 7 6] 5 7 2]] [[[1 5 0 0 4]] 5 3] [10]]
                              )(
                              [[[3 [5] [9] 0] 1 [[] []] [2 5]] [7] [] [[3 [1] 5] [[] 6 4] 0] [[] [7 10 2 [7 3]] 9 2 []]]
                              [[[[7 0 8 0] [2 10 1 0 2] [] [8 5 5 3]] [10]] [] [3 [[8] 0 [2] 6] 0 [[3 7 5] [7 3 9 2 1] 6] [[] [0 2 1 5] 7 []]]]
                              )(
                              [[5 1 [[6 2 8 4 4] 4 8] 10] [[3 [] 8 8 [6]] 1 [[5 7 0 1 7] 8 3] [6 [0 3 7 7 3]] [6]]]
                              [[] [] [[] 3 [1 [0 0 9 1] 0] [0 [8 4]] [[] 6]] [[[0] [5] 8] [[7 8 6 3 0] 9 [5 3 10] [7 5 2 4 4] 0] [9 1 10 2] 2] [5 [[4 6 4 3] [2 6] [7 10 0 0] 5]]]
                              )(
                              [[3 5 4 6 [[10 0 2] 4 4 [] 2]] [[[3] [8 1 7 3] [6 0 8 9 9] 7]] [6 9 [[3 8 2 2 3] 6 [5] [8 5] [10]] 3 [4 2 1 8 6]] [8 [[3] 2] 1]]
                              [[10 1 4 [2]] [[7 3 [9 10 1] 7 [6 0 2]] [] 0 1 7] [[[6 10 6 9] [6] [5 2] [8 9 9 1 3] [9 7 10]] [2 [4 2 1 5 5]]]]
                              )(
                              [[[] 7 [[3 0 2] [1 0 10 1] 0] 3 10] [[7 [6 5] 4] 3 [[0]]] [] [[0] [[10 0 2 0 8] 2]] [7 [2 [5 9 0 7] [1] 2 [8 9 4 9]] 8 [[1 3 7 10 2] 2] 9]]
                              [[1 [[5 9] 1] 5] [[6 [9 6] [9 8 3 3] [7 1 5]] 7 5 0]]
                              )(
                              [[] [1 0 [6 4 8] 8 1]]
                              [[[5 [0 5] [0 6 9 8 3] 2]]]
                              )(
                              [[] [[2] [[8 10 0]] 3 [] [1 []]] [7 []] []]
                              [[3 3] [[[7 2 10] 1 [1 4]] 10 [5 7 0]]]
                              )(
                              [[5 [2] 8 [] [5]] [3 1 [[] [10 9]]]]
                              [[[3 9 [7 6 2 2 7] 9 [10 5 1 3 8]] [] [6 [5] 3] 8 [2 6 9 7 10]] [[[6 0] [3 6 2]] 0 3 3 4] [10 8]]
                              )(
                              [[9 [0 [3 7 2 4 3]] 3 6 10]]
                              [[1 9 [0] 8] [6 [] 4] [9 9 [8 1 [5 9 10 7]] 5]]
                              )(
                              [[] [[2 10 [6 9 6 4]] 0 [] 6] [] [] [1 [] [1 [0 1 3 5] [6 7 8] 8 7] [[8 3 5 9] 4] []]]
                              [[[9] [10 [7 3 5] 7]] [10 [1 [6 5 10 1] [7 3 2] 7 [8 10 1]] 1 [4 1 2 9] 10] [7] [[10 2 1 [1 6 8 10] 0]] [[4 [10]] []]]
                              )(
                              [[[6 [9] 8 8] [7] 6]]
                              [[[0]] [] [[] 2 [0 [7 2 5]] 0] [4 [3 3 1 3 5] 9 [9 [] 7 2] 0] [[1 [2 1 4] 8] 10 3 7 [[3 8] [6 5 3] [8 9 2] 1]]]
                              )(
                              [[2 [] 2 8 0] [4 [[10 8 9]] 1] [[8 [4 4 9 10 6]] [[] [] 9] []] [] []]
                              [[[[5 8 6 3] [6 10]] 10 [5 [8 10 7 6 9] 8 [] [1 1 6 8 4]]]]
                              )(
                              [[[1 [] [4 3]]] [5 [[8 3 0 3 3] 6]] [] [[3 [5 5 4 3 1] [10 8 7 5] [4 9 9 4 3]]] [8 [[7 9] 10 4]]]
                              [[5 2 [3 6 0 [4] 0] 2] [2 [[8 10 5] 8 [9 5] [3 2 1 4 2] 4] [[6 5 2 1] [6 10 2]] 10 [[4 4] [8 4] 2]] [[[4 1]]] [5 9 0 [] [[5 1 1 9 7]]]]
                              )(
                              [[[[9 5 4 9] [9 8 5 6 3] [5 10 8 4 8]] [7 0 [3 6] 9 1] 4]]
                              [[5 8 [[8 7 3 3 10] [5 3]] 5] [0 5 7 [] []] [] [[7 [3 7 7 0 6] [] 4 5]]]
                              )(
                              [3 0 0 2]
                              [3 0 0 2 6]
                              )(
                              [[[[7 9 1 8] [0 0]] [5 [2 1 1 10 3] [6 7 10 1 5]] 7 6] [[[10 3] [9 2] 6 [9 2 9]] [7 [0 5] 8 1] [[5 1] 9 [] [7 6] 8]] [[[] [1 4 4 1 4] 10]]]
                              [[[0 [] [9 5]]] [[6 1] 3 []] [[] [[]] [[8 3 7] 3 3 [10 4 10]] 10 1] [5 5 0] [[2 [3 7 1] [10 9 9 5] 7 [7]] 3 4 1]]
                              )(
                              [[[]] [] [4 []] [10 [[10 1] 8]] [[[5 9 7 6]] 10 0]]
                              [[[1 7 [0 1] 1] 9 7 [4 [0 8 3 1 8]] 0] [1 6 [[4]] 6] [7 7 1 [8]] [[0] [5] [2 10 9 [4 0 10 6 9] 2]] [6 9 [7 []] [[9 0 8 10] 10 [6 0 10 9 7] 7] 4]]
                              )(
                              [[[[2 9 3 5] [8 7] [] 7] 8 [[2] [] [] 2 8]] [[9] [10 [0] [9 4 10 6 9] [8 8 2]] 8 [[] 1 [0] 3 []] [[5] 2 [0]]] [[[10 0 4] [10 0 1 7 2]] 3 3] [4 [1 [] 3 [5 7]] 8 [] [9 9 5 [6] [5 0 4]]]]
                              [[[5] [2 3] [[] 5 [2 8]]] [] [7 8 [[7] 9 []] [7 [] 2] 2] [[9 [10 7] 1] 9 [[5]]] [2 [3 4 8] 5 10 4]]
                              )(
                              [[[[5 2] [3 0 3 1 0] [0 1 5 7]] 1 4] [[4 3] [[] [] [7 9 5] [4 10 2] 8] [3] 3] [] [[]]]
                              [[[[6 9 0 4 10] [] 3 [3 7 0 0 1] [8 9 3]] []]]
                              )(
                              [[[[10 6]] 1 [2 3] 0 3] [7 10 [] 9 [[] 1 []]]]
                              [[9 3 7 [4 [2] 6 3] 0] [[] 5 1 [[8 0] 6 [4] [4 4]]]]
                              )(
                              [[[[] 9]] [6] [[[5 0 6] [6 7 3 1 0] [3 4 4 0]]]]
                              [[3 [] [8 [] 4 6] [5 6 1 3 []]] [[[2] 4] [[0] [3 2 7 9]]]]
                              )(
                              [[8 3 [] 9 [[2 0 10] 1]] [7 0 [9] 4]]
                              [[[4 []] [[7]] [[0 2 3]] 4 [[9] [0 2 4] [2] [4 0 4 3 5] [2 2 5]]] [8 [[6 2 6 8] 4 [5 0] 1 [9 3 10 3]] [1] [[8] [10 1 9] 3]]]
                              )(
                              [[9 [[10 5] 6 8] [] [[]] [1 [3 1] 8 [0 10 10 10] 2]]]
                              [[[0 5] [[8 10 1] 6 [2 7 7 1] [8 4 1 4]] [] 4 []]]
                              )(
                              [[] [3 [[6 4] 5 9] [] 2 [[] 4 [5 9 8 3 1] 1 [8 5 8 1]]] [1 [4 0 [1 3]] [3 [6] [7 0 0 6] 1 10] []]]
                              [[1] [[1 [4 7 0 2] 8] 3] [9 7] [[[5 1 1 5 9] 7 7 [0 5] [4 3 6 10]] 2 0] [6 9 [] 9]]
                              )(
                              [[] [4 10 8 [2 9 4]] [[0]]]
                              [[8 [[3 8 2]] 7] [[9 4 [2 4 9] [] [3 7 4 2 8]] 9 5 [[10] 5 [1 5 10 1 10] [8 4] 7]] [5]]
                              )(
                              [[[[] 10] [[6 3 4]]] [[[0 7 3 10] [0 4 4] 3 0 [1 10 3 1 7]] [[3 6 1] [4 2 1 3 1]] [[2 2 9]] [[10 8 8] 10 4 [1 2]]] [8] [] []]
                              [[[[0 3 3 7 6] 4 1 [7 6] [9]] [5] 0 6] [] [[10 [1 1]] [8 10 [1 10 7 3] [9 4] []] [[0 2 3 10 10] 3 5 [4 7] 9] 8]]
                              )(
                              [[8 [2 [10 5] 4] 4] [4 1 [] 1] [4 [3] 8]]
                              [[[[6] [5 7 2] [6 3 2 10 7]] 7 8 9 []]]
                              )(
                              [[] [8 [[4 8] 1 0 [6 10 2] 7] [[5 6 6] [3 7 8] [5 5]] 0 [[5 5 0 7] 5 9]]]
                              [[[[9 0 8] 0 [9 6 5 0 6]] 7 [] [9 10 [7] [8 4] 7]] [[] [] 5 [3 5 [10 4 9 7] [] 9]] [5 [6 [5 5 1 7]] [[9 9 2 4 0] [8 5]] 10] [[5 []] 2 [8 [6 7 3]]]]
                              )(
                              [[] [[7 5 9 3 8]] [[10 2 9 7 3] 1 [10 4 1 10]]]
                              [[] [9] [] [7 6] [3 3]]
                              )(
                              [[[1] [0] 7 [9] [6 [2 9] []]] [[[4 9 8 0 2] 1 1 0 [7]] [1] 4 [6 2 [1]]] [6 []] [[9 [6 3] [7 5 10] 2]] [9 [[8 7 1 3 7] 0 [2 5 0 4]] 0 1 6]]
                              [[[7 3] [3] [[9 5 2] [5] [2] [6 8 10] 1]] [] [6 10 6] [[[6 2 9 5] [2 9 1 6 0]] [[] 4 6 7 [8 7 3]] [7 1 7 3] 5] [[9 [8 4 7 10]] []]]
                              )(
                              [[[[1] [] 5 9 5] [] 3] [3 []] [] [1]]
                              [[6 0 8] [[8 1 8 7] 6 [[] 1] 4] [1 7] [[] 5 3 []] []]
                              )(
                              [[7]]
                              [[[2 5] [[8 2 4 5 2] 9]]]
                              )(
                              [[5 [[10] 0] 5 [5 [5 5]] [6 [] [4 7 0 8 1]]] [[[] 4] 2 [[1] 10] [3]]]
                              [[8 0 []] [[8 [10 4 10 2 9]]] [[[7 3]]] [[[9 1 1] [2 0 5 0] 7] [] [[2] [2 4] [1] [] 0] 10]]
                              )(
                              [[7] [[9 3] [7] [[] 6 [8 3 7 10] 0]] [0 [[2 8 4] 9 7] [[3 9 4 6 4]] []] [[9 2 5 [0 7 1]] 6 5 7]]
                              [[6 8 [[2 2]] 4 [10]] [0 1 [[9 5 0]] [8 1 [5 7 6 1 2] [3 4] [10 9 2 4 1]] []] [] [[2 9 5 9 3] [7 [8 4]]] [0]]
                              )(
                              [[[[4 1 5 2]] [8 4] 10 2 [0]] [[0 [10 8] 6]]]
                              [[] [4 [[5 10] 9] 0 [[8 6 3] 7 [6 5]]] []]
                              )(
                              [[[4 [9 4 2] [5 6] [9]] 0 8 9 [[2 0]]] [[[0 0 3 0 10] 10 6 6]] [[[0 0] [5] [7 8 2] 2]]]
                              [[[3 10 7 []] 1 2] [[2 9 6 2 0] 2 9 [[2] [10 8] 9 [1 10 1 7 10]] [[] [8] 2 7 [7 0 0 2]]] [6 2 1 [3 [10 1 10 0 2]] []]]
                              )(
                              [[[]] [[[10] 9]] [[10 4 [6 0 0 3]] [[4 2 2] 7 9 9] 5 [3 [7 9 0 4 4] [10 10 1] [6 9 6]]]]
                              [[1 [[8] [5 9 7 6 6]] [5 [6 3] [0 6 5] 4 [4 0 6 0]] [[3 5 10 3 2] 4 6] 6] []]
                              )(
                              [[[0 8 [] []] 9 [10] [7 4 7 [10 5]] []] [1] [8 10 []] [] [5 8 [[0 1 10] 6 5 4]]]
                              [[1 [[7 9 4 9]] [[8] [] 6 4 [10 9 10 5 10]]] [3 2 8 7] [[7 6 1] [[] 2 [0] 5] [[0 9]] 8 []] [] [7]]
                              )(
                              [[[] 7 [[3 5] [1 1 5] [8] 0]] [2 [2 5] [8] [[1] 8 [9 2] 7 0]] [] [7 [5 [3 6 4 6 10] [10 7 7 5 9]] [] 6 6] [9 5 0 6]]
                              [[6 [0 [5 2 9 8] 1] [0] [[6]] [1]] [3 3 7 [[10 5 9 7] 7 5 [2 7 4 3 1]] 9] [[6 []] []]]
                              )(
                              [[[10] [] 9 [[6 9] 8 8 [8]] [[3] [0 8]]] [[8 [1 6 7 4] [5 8] [1 5 2 5 9]]] [10 []] [6 [2 9 [3 5] 1 [2 9 0]] 3 8 10] [[[4 7]]]]
                              [[[6 6 4] 4 0] [[] [] 10 4 4] [[]]]
                              )(
                              [[[4 3] 1 [4 7 [1 10 10 4 7]] [[2 3] [3 5 1 1 1] 6 [4 10 7 4 0]]] [[8] 8 8 0 [4 [6 2 9] [8 1 5 7 3] [3 0]]] [[]] [3 9] [[6 6] 8 1 [4]]]
                              [[[[1 3 9 4 0]]]]
                              )(
                              [[[[10 3 3] [5 10 2] []]] [0 0 [3 8 [6 1 0] 1] [[0 1 8] 5]] [9 [[]] [4 0] 8] [2]]
                              [[[2 6 6 [10 10 5] 2]]]
                              )(
                              [[1 6 2] [] [] []]
                              [[[5] [] 10 [[8 3] [] [1 2 8 0 2]] [[3] [9 8]]] [2 [[10 2 1] [2 9] 8 0] [9 4 4] 6 [10 4 4]]]
                              )(
                              [[6 [7] 7]]
                              [[9 [[9 10 2 10 9] 2 [2] 4]] [[]]]
                              )(
                              [[] [7 9 [9] [1 10 [2 8] 10]] [[8] [[2 6] 2 1 6 [10]] 6 8]]
                              [[2 [[10 7 1 6 6] [9 0 7 10 8] [4]]] [3 10 2 [8 3 [] 4]] [5 10 3 9 [[10 1 3] [4 4 7 10 3] 5]] [7 [] 3 [7 2 1 [8 10 2 0 1] [5 4 1]]] [[0 [1 4] [0 5 7]] [6] [5 [6 7 3 10 8]] 5 [[] [2 2 8 2 0] [9 10 10 9 5] [1 6 0 7]]]]
                              )(
                              [[1] []]
                              [[[[9 8 9 9 9] []] 0 4] [7] [[1] 6]]
                              )(
                              [[] [6 [] [] [5 8 1] 3] [[[7 6] 3 [1 7 2 10 7] [6 1 6 3] 8] [3 [7] [6 10] [5 0 7 5 10]]] [[4] 6] [[] [[4 10]] 4 [9]]]
                              [[1] [5]]
                              )(
                              [[[] [7 4 [0 3] [5] 1] [0 [0 0 3 4 8] [] 10] [[7 10 1 10] 4]] [[5 2 [3 9 9 4 4] [8 9 9] []]] [8 7 [4]] [[9 4 2 [2 1 10]] [[9 4 0 2 5] 7 [4] 1]] []]
                              [[0 [] 1 [1 [7 4 0 3 4] [4 1 5 0 3] [5 9 7 3 8] [8]] [[1 6] [7 4 1 6 4] [4 1 10 0] []]] [[0 4 3] 5 [0 [5 0 8] [7 8 9 7] [2 4 1 8 4] 3] [[2] [3 6 10] [2] [] 6]]]
                              )(
                              [[] [] [[] 4 [10 [0] [8 5 2 5 7] [6 9] 0] 2 6] []]
                              [[10 [0 [3 1]] []] [1 2] [[[] 2 [9 2 3] 6 8] 10 4 5 8] [[8 [6 4] 1] [] 4 [[9] [0 5 6 6 6]] 1] [8 10 [8 0 6] 0]]
                              )(
                              [[10 [[8 0]] 9] [10] [6] [2 5 10 [[] 3 [3 7 4 4] 0 [4 3 9 5 9]]] [7]]
                              [[] [9 10 9 [[4 10 4 4] 6 [8 7 6 3] [8]] 3] [[[8 4 0] 9 3] 5] []]
                              )(
                              [[[] 10 [] []] [6 [3 [4 7 7 5] [7 4 4 0]] [[10 7] [10 0 5 2]] 6]]
                              [[9 [[2 5 5 3 5] [4 6 1] [8 1 5] []] [[7]]]]
                              )(
                              [[[] [[] [] [0] [] [0]]] [[[8 10]] 2 [[8]] [[] [2 3] 7 [5]]] [[]] []]
                              [[[6] 2] [[10 8 0 10 [8 3 10]] 2]]
                              )(
                              [[[] 10 7 [[10] 0 [9 3 6 0] [2]]] [[6 5 1 0 [5 0]] [[6 3 10] 5 1 4]] [4 [9 8] 7] [9 9 [9 8 [6] [8]] [[4 2 8 0 4] [8] 5]]]
                              [[[8] 5 1]]
                              )(
                              [[[[]] [[6 1 6 6] [] [9 2 9 4] [0 1 6 0]] 6 [[2] 7 [7 8]]] [2 [6 []] [3 2] []] [[] 2 1 [[0 1 8] [] [5 3 3]]] [[[1 6 4 9 8] 3 2] []]]
                              [[8 [[7] 3 4] 7 6] [[7 [3 4] 2 [3]] 6 [10] 3] [0 [8 0 0 7 []] 7 [[0] 3]]]
                              )(
                              [[[[4 0 0 0 0] 1 []] 4 [[10 7 10]] [[9 1] [0 10 8 5 0]] [[] 3 [4 1 4 4]]] [[[2 9 7 8 3] 4 6] [2]] [2 [] 8] [2 [] [] [[1] 8 [4 1 7 3] 10] 3] [4]]
                              [[[5] [[10 4] [9]]] [7 [10] [[7 4 3] [2 8 0 6] [6 10 1 3] 9 [1 4]]] [4] [] [9]]
                              )(
                              [[6 [[0] 8 [1 3 8]] 6 8] [[4 3 [1 1 1]] 3 [2 6 10 4] 7] [[6 7 [1 8 4]] 0] [9 2]]
                              [[[7 7 7] [[7 5 3] [6 1] 8 [6 0] 0] 10] [[] 10 2] [] [4 [7 [3 2 2] 7 []] 7 4] [[[0 9 9 10 0] [3 3 8 10 0]] [1 [4]] 3]]
                              )(
                              [[] [[[] [4 5 7 9 1]] [6 [8 1 1 3] 2 2] 7]]
                              [[3] [[[4 8] [6 1 2 8] 9] 5 4] [2 6]]
                              )(
                              [[5 [] [[1 7 8 10 1] 10 2 [6 3 9 1]] [[] 3] 9] [0]]
                              [[] [10 [10] [6 0] 2] [4 []]]
                              )(
                              [[[] 4] [[[6 10]] 6 0 [[1 8 9 4 3]]] [[[8 4 2 1] 7 3 0 4]] [[8 [9 5 5 3 9] 3] [] 5]]
                              [[10 [6 8 7] [1 9] 4 7] [[[]] 3 3]]
                              )(
                              [[[8 [5 5] 6 0 3] [1 10 8 0] 3 [0 [1 2]]] [[[8 9] [8 7 8 7]] [] [[] 8] [[4 1]]] [] [[[6] 9 [] [] [9 0]]] []]
                              [[1 5]]
                              )(
                              [[[[0 5 9 7] 0 7 7]]]
                              [[[7 8 [] [2 5 2 10] [5 5 8 5]] [] [2 0 0] [1 7 3 3] 9] [[[4 7 1 10]] 7 9] [] [7 [[5] [6 6 2 3] 1] 0]]
                              )(
                              [[[4 0 9 8 0] [[5 5 9 0]]] [9]]
                              [[] [[[9 2 4 9] 2] [] 5]]
                              )(
                              [[[]] [1 [[0 8 8] 5 8 [1 7 0 10 7]] 8] [[[6] 5] [9 3 10 [0 4 2]] 0 [[] []]] [4 [[8 0 4 4] [8 8] [9 5 3 5]] [8 8 3 0 8] 9 [[3 4] 9 5 6]] [7]]
                              [[5 [[]] 6] [3 4 [9] []] [[2] [[3 1] 0 3 [5] 4] [6 [5 6 0 1 8]]]]
                              )(
                              [[[[3 7] [3 8] []] [] 0] [] [1 [] [9 1] 0 [[10 6 6 6 8] [10 10 10 8 7] [6 1 10 6 9] [7 4 7 8 8] [0]]] [] [[3 9 2] 7]]
                              [[3 [3 9 5 6 [7]] [[5 1]]] [2 [8 [4 10 4]]]]
                              )(
                              [[7] [1] [[3] [8 [2 4 9 6 3] [2 9]] 2 []]]
                              [[[10 [3 9] 3] 0 [8]] []]
                              )(
                              [[6] [[2 [4 8 7 8] [10] 4] 1 [[4 6 7 7 2] 10 []] 3] [2 []] [4 5] [1 [[] [0 9 3] [] 9 [8 6 10 5]] 10]]
                              [[[[4 1 1 8 8] 5 [] [7 6 4 6 5] 3] [[9 0] 3] [[4 2 6]] [8 5 [10 6]] [[0 7 3]]] [] [] [1] [[0 [0] 9 []] 2 1 10]]
                              )(
                              [[8 5 1 [[1 8 5 8 4] [6 5 9 4] 0] 6]]
                              [[] [8 [[10 8 7] [] 4] [10 [5 1 8 1] 8]] [3 5 3 9 []]]
                              )(
                              [[] [7 0 [9 [7]] [[3 6]] 5]]
                              [[[2 2 0 [2 10 4 6 9]] [6 [6 10] [3] 5 []] 7] [[]] [[4 0 8 2 1] 0] []]
                              )(
                              [[[7 4 4 5 8] [[7 5 7 7 10] [4] 5 [] [9 10]] 2 4 [5 [5 8 7]]] [7 [[10 1 8] [3]] [[] 1 9]] [6 [[7 7 0] [] 8 2 3] []] [] [[[3 6 9 5 9] [8]] 5 9 [[1 6 7 0 7] [6 3 0 4 2] 5 3 8] 10]]
                              [[3 10 [5]]]
                              )(
                              [[] [[10 [8 8 2 2] 1]]]
                              [[9 [4 [4 4 6 5] 4] 7 8]]
                              )(
                              [[[[1 7 9 2 2] [10 9 9 2]] [5 [] 1]] [[] 3 1 [[1 8 2] 1 []] 7] [[[] 3 1 1 3] [5 [9 6 7 7 0] 10] 1 5 [3 [6 5 7 5 10] [4 2] [10 9 8 5 9] [1 9 5]]]]
                              [[[4 10 [0] 0] 5] [4 10 2 [0] [7]] [[4 [9 2]] 6 5 7 8]])))



#+END_SRC

#+RESULTS: 2022-day13-input
: aoc22/day13input

#+NAME: 2022-day13-playground
#+BEGIN_SRC emacs-lisp
(length (car aoc22/day13test))
(setq test '(1 2 3))
(defun doit (some)
  (setq some '(5 6 7))
  some)
(doit test)
test ;; passed by value it turns out
#+END_SRC

#+NAME: 2022-day13-solution
#+BEGIN_SRC emacs-lisp :session "day13" :val x=2022-day13-input
;;; Code:
(require 'cl-lib)
(defun aoc22/day13-part1 (input)
  "Takes INPUT and solve the puzzle.
To be replaced with actual docstring."
  (let ((indices nil))
    (dotimes (index (length input))
      (let* ((pair (nth index input))
             (left (car pair))
             (right (cadr pair)))
        (if (aoc22/compare left right)
            (push (1+ index) indices))))
    (cl-reduce #'+ indices)))

(defun aoc22/day13-part2 (input)
  "Takes INPUT add two packets and sort them.
In the list of sorted packets, find the two indicator packets and
multiply their indices.  This is the value to be returned.  The
list of packet pairs needs to be converted to a single list of
packets, add the two indicator packets, sort, find the indices,
give the answer."
  (let ((list-to-sort [[[2]] [[6]]]))
    (dolist (pair input)
      (setq list-to-sort (vconcat list-to-sort (vector (car pair)) (vector (cadr pair)))))
    (sort list-to-sort #'aoc22/compare)
    (cl-reduce #'* (list (1+ (cl-position [[2]] list-to-sort :test #'equal))
                         (1+ (cl-position [[6]] list-to-sort :test #'equal))))))

;;; Helper functions:

(defun aoc22/compare (left rite)
  "Compare LEFT and RITE with recursion.
Return t if LEFT is lower than RITE, continue if they are equal
and return nil if LEFT is higher than RITE."
  (cl-block FOUND
    (let ((min-index (min (length left) (length rite))))
      (dotimes (idx min-index)
        (let* ((left-elt (aref left idx))
               (rite-elt (aref rite idx))
               (verdict (aoc22/compare-nested left-elt rite-elt)))
          (cond
           ((= verdict 1) (cl-return-from FOUND t))
           ((= verdict -1) (cl-return-from FOUND nil))
           ((= verdict 0) "well go on")
           (t (error "Unhandled case")))))
      (if (<= (length left) (length rite)) t
        nil))))

(defun aoc22/compare-nested (left rite)
  "Get LEFT and RITE vectors and return comparison result.
The result can be:
 0 if undecided
 1 if LEFT is smaller than RITE
-1 if LEFT is bigger  than RITE"
  (cond
   ((and (numberp left) (numberp rite))
    (if (< left rite) 1
      (if (= left rite) 0
        -1)))
   ((and (eq left []) (vectorp rite))
    (if (eq rite []) 0 1))
   ((and (eq rite []) (vectorp left)) -1)
   ((and (vectorp left) (numberp rite))
    (aoc22/compare-nested left (vector rite)))
   ((and (numberp left) (vectorp rite))
    (aoc22/compare-nested (vector left) rite))
   ((and (vectorp left) (vectorp rite))
    (let ((min-index (min (length left) (length rite)))
          (index 0)
          result)
      (while (and (< index min-index)
                  (= (setq result (aoc22/compare-nested (aref left index) (aref rite index))) 0))
        (cl-incf index))
      (cond
       ((< index min-index) result)
       ((= (length left) (length rite)) 0)
       ((< (length left) (length rite)) 1)
       ((> (length left) (length rite)) -1)
       (t (error "This should never happen!")))))
   (t (error (format "Unhandled case left:%s rite:%s" left rite)))))


;;; Results vector

(vector (aoc22/day13-part1 aoc22/day13test)
        (aoc22/day13-part1 aoc22/day13input)
        (aoc22/day13-part2 aoc22/day13test)
        (aoc22/day13-part2 aoc22/day13input))
;;


; LocalWords:  Unhandled
#+END_SRC

#+RESULTS: 2022-day13-solution
: [13 6623 140 23049]
** day 14
#+NAME: 2022-day14-input
#+BEGIN_SRC emacs-lisp :session "day14"
(defconst aoc22/day14test "498,4 -> 498,6 -> 496,6
503,4 -> 502,4 -> 502,9 -> 494,9")

(defconst aoc22/day14input "508,56 -> 508,49 -> 508,56 -> 510,56 -> 510,51 -> 510,56 -> 512,56 -> 512,49 -> 512,56 -> 514,56 -> 514,52 -> 514,56
517,73 -> 517,69 -> 517,73 -> 519,73 -> 519,71 -> 519,73 -> 521,73 -> 521,72 -> 521,73 -> 523,73 -> 523,69 -> 523,73 -> 525,73 -> 525,69 -> 525,73 -> 527,73 -> 527,65 -> 527,73
521,153 -> 521,155 -> 519,155 -> 519,158 -> 530,158 -> 530,155 -> 525,155 -> 525,153
507,19 -> 511,19
508,56 -> 508,49 -> 508,56 -> 510,56 -> 510,51 -> 510,56 -> 512,56 -> 512,49 -> 512,56 -> 514,56 -> 514,52 -> 514,56
482,121 -> 482,120 -> 482,121 -> 484,121 -> 484,113 -> 484,121 -> 486,121 -> 486,115 -> 486,121 -> 488,121 -> 488,114 -> 488,121 -> 490,121 -> 490,120 -> 490,121 -> 492,121 -> 492,116 -> 492,121 -> 494,121 -> 494,112 -> 494,121 -> 496,121 -> 496,120 -> 496,121
507,88 -> 507,91 -> 503,91 -> 503,96 -> 519,96 -> 519,91 -> 513,91 -> 513,88
492,147 -> 492,138 -> 492,147 -> 494,147 -> 494,140 -> 494,147 -> 496,147 -> 496,138 -> 496,147 -> 498,147 -> 498,143 -> 498,147 -> 500,147 -> 500,137 -> 500,147 -> 502,147 -> 502,137 -> 502,147 -> 504,147 -> 504,146 -> 504,147 -> 506,147 -> 506,145 -> 506,147 -> 508,147 -> 508,138 -> 508,147 -> 510,147 -> 510,143 -> 510,147
517,73 -> 517,69 -> 517,73 -> 519,73 -> 519,71 -> 519,73 -> 521,73 -> 521,72 -> 521,73 -> 523,73 -> 523,69 -> 523,73 -> 525,73 -> 525,69 -> 525,73 -> 527,73 -> 527,65 -> 527,73
494,34 -> 499,34
517,73 -> 517,69 -> 517,73 -> 519,73 -> 519,71 -> 519,73 -> 521,73 -> 521,72 -> 521,73 -> 523,73 -> 523,69 -> 523,73 -> 525,73 -> 525,69 -> 525,73 -> 527,73 -> 527,65 -> 527,73
492,147 -> 492,138 -> 492,147 -> 494,147 -> 494,140 -> 494,147 -> 496,147 -> 496,138 -> 496,147 -> 498,147 -> 498,143 -> 498,147 -> 500,147 -> 500,137 -> 500,147 -> 502,147 -> 502,137 -> 502,147 -> 504,147 -> 504,146 -> 504,147 -> 506,147 -> 506,145 -> 506,147 -> 508,147 -> 508,138 -> 508,147 -> 510,147 -> 510,143 -> 510,147
490,31 -> 495,31
482,121 -> 482,120 -> 482,121 -> 484,121 -> 484,113 -> 484,121 -> 486,121 -> 486,115 -> 486,121 -> 488,121 -> 488,114 -> 488,121 -> 490,121 -> 490,120 -> 490,121 -> 492,121 -> 492,116 -> 492,121 -> 494,121 -> 494,112 -> 494,121 -> 496,121 -> 496,120 -> 496,121
482,121 -> 482,120 -> 482,121 -> 484,121 -> 484,113 -> 484,121 -> 486,121 -> 486,115 -> 486,121 -> 488,121 -> 488,114 -> 488,121 -> 490,121 -> 490,120 -> 490,121 -> 492,121 -> 492,116 -> 492,121 -> 494,121 -> 494,112 -> 494,121 -> 496,121 -> 496,120 -> 496,121
497,108 -> 501,108
492,147 -> 492,138 -> 492,147 -> 494,147 -> 494,140 -> 494,147 -> 496,147 -> 496,138 -> 496,147 -> 498,147 -> 498,143 -> 498,147 -> 500,147 -> 500,137 -> 500,147 -> 502,147 -> 502,137 -> 502,147 -> 504,147 -> 504,146 -> 504,147 -> 506,147 -> 506,145 -> 506,147 -> 508,147 -> 508,138 -> 508,147 -> 510,147 -> 510,143 -> 510,147
482,25 -> 487,25
521,153 -> 521,155 -> 519,155 -> 519,158 -> 530,158 -> 530,155 -> 525,155 -> 525,153
482,121 -> 482,120 -> 482,121 -> 484,121 -> 484,113 -> 484,121 -> 486,121 -> 486,115 -> 486,121 -> 488,121 -> 488,114 -> 488,121 -> 490,121 -> 490,120 -> 490,121 -> 492,121 -> 492,116 -> 492,121 -> 494,121 -> 494,112 -> 494,121 -> 496,121 -> 496,120 -> 496,121
517,73 -> 517,69 -> 517,73 -> 519,73 -> 519,71 -> 519,73 -> 521,73 -> 521,72 -> 521,73 -> 523,73 -> 523,69 -> 523,73 -> 525,73 -> 525,69 -> 525,73 -> 527,73 -> 527,65 -> 527,73
517,73 -> 517,69 -> 517,73 -> 519,73 -> 519,71 -> 519,73 -> 521,73 -> 521,72 -> 521,73 -> 523,73 -> 523,69 -> 523,73 -> 525,73 -> 525,69 -> 525,73 -> 527,73 -> 527,65 -> 527,73
492,147 -> 492,138 -> 492,147 -> 494,147 -> 494,140 -> 494,147 -> 496,147 -> 496,138 -> 496,147 -> 498,147 -> 498,143 -> 498,147 -> 500,147 -> 500,137 -> 500,147 -> 502,147 -> 502,137 -> 502,147 -> 504,147 -> 504,146 -> 504,147 -> 506,147 -> 506,145 -> 506,147 -> 508,147 -> 508,138 -> 508,147 -> 510,147 -> 510,143 -> 510,147
495,124 -> 495,127 -> 489,127 -> 489,131 -> 503,131 -> 503,127 -> 500,127 -> 500,124
508,56 -> 508,49 -> 508,56 -> 510,56 -> 510,51 -> 510,56 -> 512,56 -> 512,49 -> 512,56 -> 514,56 -> 514,52 -> 514,56
508,56 -> 508,49 -> 508,56 -> 510,56 -> 510,51 -> 510,56 -> 512,56 -> 512,49 -> 512,56 -> 514,56 -> 514,52 -> 514,56
495,124 -> 495,127 -> 489,127 -> 489,131 -> 503,131 -> 503,127 -> 500,127 -> 500,124
517,79 -> 522,79
498,17 -> 502,17
517,73 -> 517,69 -> 517,73 -> 519,73 -> 519,71 -> 519,73 -> 521,73 -> 521,72 -> 521,73 -> 523,73 -> 523,69 -> 523,73 -> 525,73 -> 525,69 -> 525,73 -> 527,73 -> 527,65 -> 527,73
479,28 -> 484,28
478,37 -> 478,39 -> 474,39 -> 474,43 -> 487,43 -> 487,39 -> 480,39 -> 480,37
478,37 -> 478,39 -> 474,39 -> 474,43 -> 487,43 -> 487,39 -> 480,39 -> 480,37
501,19 -> 505,19
507,88 -> 507,91 -> 503,91 -> 503,96 -> 519,96 -> 519,91 -> 513,91 -> 513,88
478,37 -> 478,39 -> 474,39 -> 474,43 -> 487,43 -> 487,39 -> 480,39 -> 480,37
501,15 -> 505,15
511,60 -> 522,60
509,108 -> 513,108
482,121 -> 482,120 -> 482,121 -> 484,121 -> 484,113 -> 484,121 -> 486,121 -> 486,115 -> 486,121 -> 488,121 -> 488,114 -> 488,121 -> 490,121 -> 490,120 -> 490,121 -> 492,121 -> 492,116 -> 492,121 -> 494,121 -> 494,112 -> 494,121 -> 496,121 -> 496,120 -> 496,121
517,73 -> 517,69 -> 517,73 -> 519,73 -> 519,71 -> 519,73 -> 521,73 -> 521,72 -> 521,73 -> 523,73 -> 523,69 -> 523,73 -> 525,73 -> 525,69 -> 525,73 -> 527,73 -> 527,65 -> 527,73
517,73 -> 517,69 -> 517,73 -> 519,73 -> 519,71 -> 519,73 -> 521,73 -> 521,72 -> 521,73 -> 523,73 -> 523,69 -> 523,73 -> 525,73 -> 525,69 -> 525,73 -> 527,73 -> 527,65 -> 527,73
517,73 -> 517,69 -> 517,73 -> 519,73 -> 519,71 -> 519,73 -> 521,73 -> 521,72 -> 521,73 -> 523,73 -> 523,69 -> 523,73 -> 525,73 -> 525,69 -> 525,73 -> 527,73 -> 527,65 -> 527,73
492,147 -> 492,138 -> 492,147 -> 494,147 -> 494,140 -> 494,147 -> 496,147 -> 496,138 -> 496,147 -> 498,147 -> 498,143 -> 498,147 -> 500,147 -> 500,137 -> 500,147 -> 502,147 -> 502,137 -> 502,147 -> 504,147 -> 504,146 -> 504,147 -> 506,147 -> 506,145 -> 506,147 -> 508,147 -> 508,138 -> 508,147 -> 510,147 -> 510,143 -> 510,147
513,76 -> 518,76
508,56 -> 508,49 -> 508,56 -> 510,56 -> 510,51 -> 510,56 -> 512,56 -> 512,49 -> 512,56 -> 514,56 -> 514,52 -> 514,56
497,31 -> 502,31
501,34 -> 506,34
503,134 -> 512,134 -> 512,133
517,73 -> 517,69 -> 517,73 -> 519,73 -> 519,71 -> 519,73 -> 521,73 -> 521,72 -> 521,73 -> 523,73 -> 523,69 -> 523,73 -> 525,73 -> 525,69 -> 525,73 -> 527,73 -> 527,65 -> 527,73
482,121 -> 482,120 -> 482,121 -> 484,121 -> 484,113 -> 484,121 -> 486,121 -> 486,115 -> 486,121 -> 488,121 -> 488,114 -> 488,121 -> 490,121 -> 490,120 -> 490,121 -> 492,121 -> 492,116 -> 492,121 -> 494,121 -> 494,112 -> 494,121 -> 496,121 -> 496,120 -> 496,121
517,73 -> 517,69 -> 517,73 -> 519,73 -> 519,71 -> 519,73 -> 521,73 -> 521,72 -> 521,73 -> 523,73 -> 523,69 -> 523,73 -> 525,73 -> 525,69 -> 525,73 -> 527,73 -> 527,65 -> 527,73
500,99 -> 504,99
482,121 -> 482,120 -> 482,121 -> 484,121 -> 484,113 -> 484,121 -> 486,121 -> 486,115 -> 486,121 -> 488,121 -> 488,114 -> 488,121 -> 490,121 -> 490,120 -> 490,121 -> 492,121 -> 492,116 -> 492,121 -> 494,121 -> 494,112 -> 494,121 -> 496,121 -> 496,120 -> 496,121
492,147 -> 492,138 -> 492,147 -> 494,147 -> 494,140 -> 494,147 -> 496,147 -> 496,138 -> 496,147 -> 498,147 -> 498,143 -> 498,147 -> 500,147 -> 500,137 -> 500,147 -> 502,147 -> 502,137 -> 502,147 -> 504,147 -> 504,146 -> 504,147 -> 506,147 -> 506,145 -> 506,147 -> 508,147 -> 508,138 -> 508,147 -> 510,147 -> 510,143 -> 510,147
492,147 -> 492,138 -> 492,147 -> 494,147 -> 494,140 -> 494,147 -> 496,147 -> 496,138 -> 496,147 -> 498,147 -> 498,143 -> 498,147 -> 500,147 -> 500,137 -> 500,147 -> 502,147 -> 502,137 -> 502,147 -> 504,147 -> 504,146 -> 504,147 -> 506,147 -> 506,145 -> 506,147 -> 508,147 -> 508,138 -> 508,147 -> 510,147 -> 510,143 -> 510,147
492,147 -> 492,138 -> 492,147 -> 494,147 -> 494,140 -> 494,147 -> 496,147 -> 496,138 -> 496,147 -> 498,147 -> 498,143 -> 498,147 -> 500,147 -> 500,137 -> 500,147 -> 502,147 -> 502,137 -> 502,147 -> 504,147 -> 504,146 -> 504,147 -> 506,147 -> 506,145 -> 506,147 -> 508,147 -> 508,138 -> 508,147 -> 510,147 -> 510,143 -> 510,147
482,121 -> 482,120 -> 482,121 -> 484,121 -> 484,113 -> 484,121 -> 486,121 -> 486,115 -> 486,121 -> 488,121 -> 488,114 -> 488,121 -> 490,121 -> 490,120 -> 490,121 -> 492,121 -> 492,116 -> 492,121 -> 494,121 -> 494,112 -> 494,121 -> 496,121 -> 496,120 -> 496,121
478,37 -> 478,39 -> 474,39 -> 474,43 -> 487,43 -> 487,39 -> 480,39 -> 480,37
482,121 -> 482,120 -> 482,121 -> 484,121 -> 484,113 -> 484,121 -> 486,121 -> 486,115 -> 486,121 -> 488,121 -> 488,114 -> 488,121 -> 490,121 -> 490,120 -> 490,121 -> 492,121 -> 492,116 -> 492,121 -> 494,121 -> 494,112 -> 494,121 -> 496,121 -> 496,120 -> 496,121
521,153 -> 521,155 -> 519,155 -> 519,158 -> 530,158 -> 530,155 -> 525,155 -> 525,153
517,73 -> 517,69 -> 517,73 -> 519,73 -> 519,71 -> 519,73 -> 521,73 -> 521,72 -> 521,73 -> 523,73 -> 523,69 -> 523,73 -> 525,73 -> 525,69 -> 525,73 -> 527,73 -> 527,65 -> 527,73
482,121 -> 482,120 -> 482,121 -> 484,121 -> 484,113 -> 484,121 -> 486,121 -> 486,115 -> 486,121 -> 488,121 -> 488,114 -> 488,121 -> 490,121 -> 490,120 -> 490,121 -> 492,121 -> 492,116 -> 492,121 -> 494,121 -> 494,112 -> 494,121 -> 496,121 -> 496,120 -> 496,121
521,153 -> 521,155 -> 519,155 -> 519,158 -> 530,158 -> 530,155 -> 525,155 -> 525,153
492,147 -> 492,138 -> 492,147 -> 494,147 -> 494,140 -> 494,147 -> 496,147 -> 496,138 -> 496,147 -> 498,147 -> 498,143 -> 498,147 -> 500,147 -> 500,137 -> 500,147 -> 502,147 -> 502,137 -> 502,147 -> 504,147 -> 504,146 -> 504,147 -> 506,147 -> 506,145 -> 506,147 -> 508,147 -> 508,138 -> 508,147 -> 510,147 -> 510,143 -> 510,147
514,82 -> 519,82
482,121 -> 482,120 -> 482,121 -> 484,121 -> 484,113 -> 484,121 -> 486,121 -> 486,115 -> 486,121 -> 488,121 -> 488,114 -> 488,121 -> 490,121 -> 490,120 -> 490,121 -> 492,121 -> 492,116 -> 492,121 -> 494,121 -> 494,112 -> 494,121 -> 496,121 -> 496,120 -> 496,121
495,15 -> 499,15
492,147 -> 492,138 -> 492,147 -> 494,147 -> 494,140 -> 494,147 -> 496,147 -> 496,138 -> 496,147 -> 498,147 -> 498,143 -> 498,147 -> 500,147 -> 500,137 -> 500,147 -> 502,147 -> 502,137 -> 502,147 -> 504,147 -> 504,146 -> 504,147 -> 506,147 -> 506,145 -> 506,147 -> 508,147 -> 508,138 -> 508,147 -> 510,147 -> 510,143 -> 510,147
492,147 -> 492,138 -> 492,147 -> 494,147 -> 494,140 -> 494,147 -> 496,147 -> 496,138 -> 496,147 -> 498,147 -> 498,143 -> 498,147 -> 500,147 -> 500,137 -> 500,147 -> 502,147 -> 502,137 -> 502,147 -> 504,147 -> 504,146 -> 504,147 -> 506,147 -> 506,145 -> 506,147 -> 508,147 -> 508,138 -> 508,147 -> 510,147 -> 510,143 -> 510,147
498,13 -> 502,13
485,22 -> 490,22
508,56 -> 508,49 -> 508,56 -> 510,56 -> 510,51 -> 510,56 -> 512,56 -> 512,49 -> 512,56 -> 514,56 -> 514,52 -> 514,56
478,37 -> 478,39 -> 474,39 -> 474,43 -> 487,43 -> 487,39 -> 480,39 -> 480,37
511,85 -> 516,85
482,121 -> 482,120 -> 482,121 -> 484,121 -> 484,113 -> 484,121 -> 486,121 -> 486,115 -> 486,121 -> 488,121 -> 488,114 -> 488,121 -> 490,121 -> 490,120 -> 490,121 -> 492,121 -> 492,116 -> 492,121 -> 494,121 -> 494,112 -> 494,121 -> 496,121 -> 496,120 -> 496,121
508,56 -> 508,49 -> 508,56 -> 510,56 -> 510,51 -> 510,56 -> 512,56 -> 512,49 -> 512,56 -> 514,56 -> 514,52 -> 514,56
508,56 -> 508,49 -> 508,56 -> 510,56 -> 510,51 -> 510,56 -> 512,56 -> 512,49 -> 512,56 -> 514,56 -> 514,52 -> 514,56
482,121 -> 482,120 -> 482,121 -> 484,121 -> 484,113 -> 484,121 -> 486,121 -> 486,115 -> 486,121 -> 488,121 -> 488,114 -> 488,121 -> 490,121 -> 490,120 -> 490,121 -> 492,121 -> 492,116 -> 492,121 -> 494,121 -> 494,112 -> 494,121 -> 496,121 -> 496,120 -> 496,121
482,121 -> 482,120 -> 482,121 -> 484,121 -> 484,113 -> 484,121 -> 486,121 -> 486,115 -> 486,121 -> 488,121 -> 488,114 -> 488,121 -> 490,121 -> 490,120 -> 490,121 -> 492,121 -> 492,116 -> 492,121 -> 494,121 -> 494,112 -> 494,121 -> 496,121 -> 496,120 -> 496,121
492,147 -> 492,138 -> 492,147 -> 494,147 -> 494,140 -> 494,147 -> 496,147 -> 496,138 -> 496,147 -> 498,147 -> 498,143 -> 498,147 -> 500,147 -> 500,137 -> 500,147 -> 502,147 -> 502,137 -> 502,147 -> 504,147 -> 504,146 -> 504,147 -> 506,147 -> 506,145 -> 506,147 -> 508,147 -> 508,138 -> 508,147 -> 510,147 -> 510,143 -> 510,147
482,121 -> 482,120 -> 482,121 -> 484,121 -> 484,113 -> 484,121 -> 486,121 -> 486,115 -> 486,121 -> 488,121 -> 488,114 -> 488,121 -> 490,121 -> 490,120 -> 490,121 -> 492,121 -> 492,116 -> 492,121 -> 494,121 -> 494,112 -> 494,121 -> 496,121 -> 496,120 -> 496,121
473,34 -> 478,34
492,147 -> 492,138 -> 492,147 -> 494,147 -> 494,140 -> 494,147 -> 496,147 -> 496,138 -> 496,147 -> 498,147 -> 498,143 -> 498,147 -> 500,147 -> 500,137 -> 500,147 -> 502,147 -> 502,137 -> 502,147 -> 504,147 -> 504,146 -> 504,147 -> 506,147 -> 506,145 -> 506,147 -> 508,147 -> 508,138 -> 508,147 -> 510,147 -> 510,143 -> 510,147
495,124 -> 495,127 -> 489,127 -> 489,131 -> 503,131 -> 503,127 -> 500,127 -> 500,124
492,147 -> 492,138 -> 492,147 -> 494,147 -> 494,140 -> 494,147 -> 496,147 -> 496,138 -> 496,147 -> 498,147 -> 498,143 -> 498,147 -> 500,147 -> 500,137 -> 500,147 -> 502,147 -> 502,137 -> 502,147 -> 504,147 -> 504,146 -> 504,147 -> 506,147 -> 506,145 -> 506,147 -> 508,147 -> 508,138 -> 508,147 -> 510,147 -> 510,143 -> 510,147
483,31 -> 488,31
482,121 -> 482,120 -> 482,121 -> 484,121 -> 484,113 -> 484,121 -> 486,121 -> 486,115 -> 486,121 -> 488,121 -> 488,114 -> 488,121 -> 490,121 -> 490,120 -> 490,121 -> 492,121 -> 492,116 -> 492,121 -> 494,121 -> 494,112 -> 494,121 -> 496,121 -> 496,120 -> 496,121
500,105 -> 504,105
521,82 -> 526,82
517,73 -> 517,69 -> 517,73 -> 519,73 -> 519,71 -> 519,73 -> 521,73 -> 521,72 -> 521,73 -> 523,73 -> 523,69 -> 523,73 -> 525,73 -> 525,69 -> 525,73 -> 527,73 -> 527,65 -> 527,73
503,102 -> 507,102
482,121 -> 482,120 -> 482,121 -> 484,121 -> 484,113 -> 484,121 -> 486,121 -> 486,115 -> 486,121 -> 488,121 -> 488,114 -> 488,121 -> 490,121 -> 490,120 -> 490,121 -> 492,121 -> 492,116 -> 492,121 -> 494,121 -> 494,112 -> 494,121 -> 496,121 -> 496,120 -> 496,121
517,73 -> 517,69 -> 517,73 -> 519,73 -> 519,71 -> 519,73 -> 521,73 -> 521,72 -> 521,73 -> 523,73 -> 523,69 -> 523,73 -> 525,73 -> 525,69 -> 525,73 -> 527,73 -> 527,65 -> 527,73
487,34 -> 492,34
503,108 -> 507,108
492,147 -> 492,138 -> 492,147 -> 494,147 -> 494,140 -> 494,147 -> 496,147 -> 496,138 -> 496,147 -> 498,147 -> 498,143 -> 498,147 -> 500,147 -> 500,137 -> 500,147 -> 502,147 -> 502,137 -> 502,147 -> 504,147 -> 504,146 -> 504,147 -> 506,147 -> 506,145 -> 506,147 -> 508,147 -> 508,138 -> 508,147 -> 510,147 -> 510,143 -> 510,147
489,25 -> 494,25
517,73 -> 517,69 -> 517,73 -> 519,73 -> 519,71 -> 519,73 -> 521,73 -> 521,72 -> 521,73 -> 523,73 -> 523,69 -> 523,73 -> 525,73 -> 525,69 -> 525,73 -> 527,73 -> 527,65 -> 527,73
492,17 -> 496,17
492,147 -> 492,138 -> 492,147 -> 494,147 -> 494,140 -> 494,147 -> 496,147 -> 496,138 -> 496,147 -> 498,147 -> 498,143 -> 498,147 -> 500,147 -> 500,137 -> 500,147 -> 502,147 -> 502,137 -> 502,147 -> 504,147 -> 504,146 -> 504,147 -> 506,147 -> 506,145 -> 506,147 -> 508,147 -> 508,138 -> 508,147 -> 510,147 -> 510,143 -> 510,147
482,121 -> 482,120 -> 482,121 -> 484,121 -> 484,113 -> 484,121 -> 486,121 -> 486,115 -> 486,121 -> 488,121 -> 488,114 -> 488,121 -> 490,121 -> 490,120 -> 490,121 -> 492,121 -> 492,116 -> 492,121 -> 494,121 -> 494,112 -> 494,121 -> 496,121 -> 496,120 -> 496,121
492,147 -> 492,138 -> 492,147 -> 494,147 -> 494,140 -> 494,147 -> 496,147 -> 496,138 -> 496,147 -> 498,147 -> 498,143 -> 498,147 -> 500,147 -> 500,137 -> 500,147 -> 502,147 -> 502,137 -> 502,147 -> 504,147 -> 504,146 -> 504,147 -> 506,147 -> 506,145 -> 506,147 -> 508,147 -> 508,138 -> 508,147 -> 510,147 -> 510,143 -> 510,147
495,19 -> 499,19
504,85 -> 509,85
492,147 -> 492,138 -> 492,147 -> 494,147 -> 494,140 -> 494,147 -> 496,147 -> 496,138 -> 496,147 -> 498,147 -> 498,143 -> 498,147 -> 500,147 -> 500,137 -> 500,147 -> 502,147 -> 502,137 -> 502,147 -> 504,147 -> 504,146 -> 504,147 -> 506,147 -> 506,145 -> 506,147 -> 508,147 -> 508,138 -> 508,147 -> 510,147 -> 510,143 -> 510,147
508,150 -> 521,150
507,82 -> 512,82
517,73 -> 517,69 -> 517,73 -> 519,73 -> 519,71 -> 519,73 -> 521,73 -> 521,72 -> 521,73 -> 523,73 -> 523,69 -> 523,73 -> 525,73 -> 525,69 -> 525,73 -> 527,73 -> 527,65 -> 527,73
478,37 -> 478,39 -> 474,39 -> 474,43 -> 487,43 -> 487,39 -> 480,39 -> 480,37
480,34 -> 485,34
492,147 -> 492,138 -> 492,147 -> 494,147 -> 494,140 -> 494,147 -> 496,147 -> 496,138 -> 496,147 -> 498,147 -> 498,143 -> 498,147 -> 500,147 -> 500,137 -> 500,147 -> 502,147 -> 502,137 -> 502,147 -> 504,147 -> 504,146 -> 504,147 -> 506,147 -> 506,145 -> 506,147 -> 508,147 -> 508,138 -> 508,147 -> 510,147 -> 510,143 -> 510,147
506,105 -> 510,105
492,147 -> 492,138 -> 492,147 -> 494,147 -> 494,140 -> 494,147 -> 496,147 -> 496,138 -> 496,147 -> 498,147 -> 498,143 -> 498,147 -> 500,147 -> 500,137 -> 500,147 -> 502,147 -> 502,137 -> 502,147 -> 504,147 -> 504,146 -> 504,147 -> 506,147 -> 506,145 -> 506,147 -> 508,147 -> 508,138 -> 508,147 -> 510,147 -> 510,143 -> 510,147
508,56 -> 508,49 -> 508,56 -> 510,56 -> 510,51 -> 510,56 -> 512,56 -> 512,49 -> 512,56 -> 514,56 -> 514,52 -> 514,56
503,134 -> 512,134 -> 512,133
497,102 -> 501,102
482,121 -> 482,120 -> 482,121 -> 484,121 -> 484,113 -> 484,121 -> 486,121 -> 486,115 -> 486,121 -> 488,121 -> 488,114 -> 488,121 -> 490,121 -> 490,120 -> 490,121 -> 492,121 -> 492,116 -> 492,121 -> 494,121 -> 494,112 -> 494,121 -> 496,121 -> 496,120 -> 496,121
492,147 -> 492,138 -> 492,147 -> 494,147 -> 494,140 -> 494,147 -> 496,147 -> 496,138 -> 496,147 -> 498,147 -> 498,143 -> 498,147 -> 500,147 -> 500,137 -> 500,147 -> 502,147 -> 502,137 -> 502,147 -> 504,147 -> 504,146 -> 504,147 -> 506,147 -> 506,145 -> 506,147 -> 508,147 -> 508,138 -> 508,147 -> 510,147 -> 510,143 -> 510,147
489,19 -> 493,19
507,88 -> 507,91 -> 503,91 -> 503,96 -> 519,96 -> 519,91 -> 513,91 -> 513,88
482,121 -> 482,120 -> 482,121 -> 484,121 -> 484,113 -> 484,121 -> 486,121 -> 486,115 -> 486,121 -> 488,121 -> 488,114 -> 488,121 -> 490,121 -> 490,120 -> 490,121 -> 492,121 -> 492,116 -> 492,121 -> 494,121 -> 494,112 -> 494,121 -> 496,121 -> 496,120 -> 496,121
495,124 -> 495,127 -> 489,127 -> 489,131 -> 503,131 -> 503,127 -> 500,127 -> 500,124
492,147 -> 492,138 -> 492,147 -> 494,147 -> 494,140 -> 494,147 -> 496,147 -> 496,138 -> 496,147 -> 498,147 -> 498,143 -> 498,147 -> 500,147 -> 500,137 -> 500,147 -> 502,147 -> 502,137 -> 502,147 -> 504,147 -> 504,146 -> 504,147 -> 506,147 -> 506,145 -> 506,147 -> 508,147 -> 508,138 -> 508,147 -> 510,147 -> 510,143 -> 510,147
508,56 -> 508,49 -> 508,56 -> 510,56 -> 510,51 -> 510,56 -> 512,56 -> 512,49 -> 512,56 -> 514,56 -> 514,52 -> 514,56
482,121 -> 482,120 -> 482,121 -> 484,121 -> 484,113 -> 484,121 -> 486,121 -> 486,115 -> 486,121 -> 488,121 -> 488,114 -> 488,121 -> 490,121 -> 490,120 -> 490,121 -> 492,121 -> 492,116 -> 492,121 -> 494,121 -> 494,112 -> 494,121 -> 496,121 -> 496,120 -> 496,121
521,153 -> 521,155 -> 519,155 -> 519,158 -> 530,158 -> 530,155 -> 525,155 -> 525,153
495,124 -> 495,127 -> 489,127 -> 489,131 -> 503,131 -> 503,127 -> 500,127 -> 500,124
517,73 -> 517,69 -> 517,73 -> 519,73 -> 519,71 -> 519,73 -> 521,73 -> 521,72 -> 521,73 -> 523,73 -> 523,69 -> 523,73 -> 525,73 -> 525,69 -> 525,73 -> 527,73 -> 527,65 -> 527,73
492,147 -> 492,138 -> 492,147 -> 494,147 -> 494,140 -> 494,147 -> 496,147 -> 496,138 -> 496,147 -> 498,147 -> 498,143 -> 498,147 -> 500,147 -> 500,137 -> 500,147 -> 502,147 -> 502,137 -> 502,147 -> 504,147 -> 504,146 -> 504,147 -> 506,147 -> 506,145 -> 506,147 -> 508,147 -> 508,138 -> 508,147 -> 510,147 -> 510,143 -> 510,147
507,88 -> 507,91 -> 503,91 -> 503,96 -> 519,96 -> 519,91 -> 513,91 -> 513,88
486,28 -> 491,28
507,88 -> 507,91 -> 503,91 -> 503,96 -> 519,96 -> 519,91 -> 513,91 -> 513,88
492,147 -> 492,138 -> 492,147 -> 494,147 -> 494,140 -> 494,147 -> 496,147 -> 496,138 -> 496,147 -> 498,147 -> 498,143 -> 498,147 -> 500,147 -> 500,137 -> 500,147 -> 502,147 -> 502,137 -> 502,147 -> 504,147 -> 504,146 -> 504,147 -> 506,147 -> 506,145 -> 506,147 -> 508,147 -> 508,138 -> 508,147 -> 510,147 -> 510,143 -> 510,147
495,124 -> 495,127 -> 489,127 -> 489,131 -> 503,131 -> 503,127 -> 500,127 -> 500,124
491,108 -> 495,108
476,31 -> 481,31
508,56 -> 508,49 -> 508,56 -> 510,56 -> 510,51 -> 510,56 -> 512,56 -> 512,49 -> 512,56 -> 514,56 -> 514,52 -> 514,56
482,121 -> 482,120 -> 482,121 -> 484,121 -> 484,113 -> 484,121 -> 486,121 -> 486,115 -> 486,121 -> 488,121 -> 488,114 -> 488,121 -> 490,121 -> 490,120 -> 490,121 -> 492,121 -> 492,116 -> 492,121 -> 494,121 -> 494,112 -> 494,121 -> 496,121 -> 496,120 -> 496,121
525,85 -> 530,85
510,163 -> 524,163 -> 524,162
482,121 -> 482,120 -> 482,121 -> 484,121 -> 484,113 -> 484,121 -> 486,121 -> 486,115 -> 486,121 -> 488,121 -> 488,114 -> 488,121 -> 490,121 -> 490,120 -> 490,121 -> 492,121 -> 492,116 -> 492,121 -> 494,121 -> 494,112 -> 494,121 -> 496,121 -> 496,120 -> 496,121
492,147 -> 492,138 -> 492,147 -> 494,147 -> 494,140 -> 494,147 -> 496,147 -> 496,138 -> 496,147 -> 498,147 -> 498,143 -> 498,147 -> 500,147 -> 500,137 -> 500,147 -> 502,147 -> 502,137 -> 502,147 -> 504,147 -> 504,146 -> 504,147 -> 506,147 -> 506,145 -> 506,147 -> 508,147 -> 508,138 -> 508,147 -> 510,147 -> 510,143 -> 510,147
504,17 -> 508,17
521,153 -> 521,155 -> 519,155 -> 519,158 -> 530,158 -> 530,155 -> 525,155 -> 525,153
521,153 -> 521,155 -> 519,155 -> 519,158 -> 530,158 -> 530,155 -> 525,155 -> 525,153
493,28 -> 498,28
494,105 -> 498,105
507,88 -> 507,91 -> 503,91 -> 503,96 -> 519,96 -> 519,91 -> 513,91 -> 513,88
495,124 -> 495,127 -> 489,127 -> 489,131 -> 503,131 -> 503,127 -> 500,127 -> 500,124
507,88 -> 507,91 -> 503,91 -> 503,96 -> 519,96 -> 519,91 -> 513,91 -> 513,88
510,79 -> 515,79
510,163 -> 524,163 -> 524,162
478,37 -> 478,39 -> 474,39 -> 474,43 -> 487,43 -> 487,39 -> 480,39 -> 480,37
492,147 -> 492,138 -> 492,147 -> 494,147 -> 494,140 -> 494,147 -> 496,147 -> 496,138 -> 496,147 -> 498,147 -> 498,143 -> 498,147 -> 500,147 -> 500,137 -> 500,147 -> 502,147 -> 502,137 -> 502,147 -> 504,147 -> 504,146 -> 504,147 -> 506,147 -> 506,145 -> 506,147 -> 508,147 -> 508,138 -> 508,147 -> 510,147 -> 510,143 -> 510,147
492,147 -> 492,138 -> 492,147 -> 494,147 -> 494,140 -> 494,147 -> 496,147 -> 496,138 -> 496,147 -> 498,147 -> 498,143 -> 498,147 -> 500,147 -> 500,137 -> 500,147 -> 502,147 -> 502,137 -> 502,147 -> 504,147 -> 504,146 -> 504,147 -> 506,147 -> 506,145 -> 506,147 -> 508,147 -> 508,138 -> 508,147 -> 510,147 -> 510,143 -> 510,147
492,147 -> 492,138 -> 492,147 -> 494,147 -> 494,140 -> 494,147 -> 496,147 -> 496,138 -> 496,147 -> 498,147 -> 498,143 -> 498,147 -> 500,147 -> 500,137 -> 500,147 -> 502,147 -> 502,137 -> 502,147 -> 504,147 -> 504,146 -> 504,147 -> 506,147 -> 506,145 -> 506,147 -> 508,147 -> 508,138 -> 508,147 -> 510,147 -> 510,143 -> 510,147
518,85 -> 523,85
492,147 -> 492,138 -> 492,147 -> 494,147 -> 494,140 -> 494,147 -> 496,147 -> 496,138 -> 496,147 -> 498,147 -> 498,143 -> 498,147 -> 500,147 -> 500,137 -> 500,147 -> 502,147 -> 502,137 -> 502,147 -> 504,147 -> 504,146 -> 504,147 -> 506,147 -> 506,145 -> 506,147 -> 508,147 -> 508,138 -> 508,147 -> 510,147 -> 510,143 -> 510,147")

#+END_SRC

#+RESULTS: 2022-day14-input
: aoc22/day14input

#+NAME: 2022-day14-sandbox
#+BEGIN_SRC emacs-lisp
(defconst test
".......+....
............
............
............
.....#...##.
.....#...#..
...###...#..
.........#..
.........#..
.#########..
............")






"
............................+...............................
............................................................
............................................................
............................................................
............................................................
............................................................
............................................................
............................................................
............................................................
............................................................
............................................................
............................................................
............................................................
..........................#####.............................
............................................................
.......................#####.#####..........................
............................................................
....................#####.#####.#####.......................
............................................................
.................#####.#####.#####.#####....................
............................................................
............................................................
.............######.........................................
............................................................
............................................................
..........######.######.....................................
............................................................
............................................................
.......######.######.######.................................
............................................................
............................................................
....######.######.######.######.............................
............................................................
............................................................
.######.######.######.######.######.........................
............................................................
............................................................
......#.#...................................................
......#.#...................................................
..#####.########............................................
..#............#............................................
..#............#............................................
..#............#............................................
..##############............................................
............................................................
............................................................
............................................................
............................................................
............................................................
....................................#...#...................
....................................#...#...................
....................................#.#.#...................
....................................#.#.#.#.................
....................................#.#.#.#.................
....................................#.#.#.#.................
....................................#.#.#.#.................
....................................#######.................
............................................................
............................................................
............................................................
.......................................############.........
............................................................
............................................................
............................................................
............................................................
.......................................................#....
.......................................................#....
.......................................................#....
.......................................................#....
.............................................#.....#.#.#....
.............................................#.....#.#.#....
.............................................#.#...#.#.#....
.............................................#.#.#.#.#.#....
.............................................###########....
............................................................
............................................................
.........................................######.............
............................................................
............................................................
......................................######.######.........
............................................................
............................................................
...................................######.######.######.....
............................................................
............................................................
................................######.######.######.######.
............................................................
............................................................
...................................#.....#..................
...................................#.....#..................
...................................#.....#..................
...............................#####.....#######............
...............................#...............#............
...............................#...............#............
...............................#...............#............
...............................#...............#............
...............................#################............
............................................................
............................................................
............................#####...........................
............................................................
............................................................
.........................#####.#####........................
............................................................
............................................................
......................#####.#####.#####.....................
............................................................
............................................................
...................#####.#####.#####.#####..................
............................................................
............................................................
............................................................
......................#.....................................
............#.........#.....................................
............#...#.....#.....................................
............#.#.#.....#.....................................
............#.#.#...#.#.....................................
............#.#.#...#.#.....................................
............#.#.#...#.#.....................................
............#.#.#...#.#.....................................
..........#.#.#.#.#.#.#.#...................................
..........###############...................................
............................................................
............................................................
.......................#....#...............................
.......................#....#...............................
.......................#....#...............................
.................#######....####............................
.................#.............#............................
.................#.............#............................
.................#.............#............................
.................###############............................
............................................................
........................................#...................
...............................##########...................
............................................................
............................................................
............................#.#.............................
....................#...#...#.#.....#.......................
....................#...#...#.#.....#.......................
....................#.#.#...#.#.....#.......................
....................#.#.#...#.#.....#.......................
....................#.#.#...#.#.....#.......................
....................#.#.#.#.#.#.....#.#.....................
....................#.#.#.#.#.#.....#.#.....................
....................#.#.#.#.#.#...#.#.#.....................
....................#.#.#.#.#.#.#.#.#.#.....................
....................###################.....................
............................................................
............................................................
....................................##############..........
............................................................
............................................................
.................................................#...#......
.................................................#...#......
...............................................###...######.
...............................................#..........#.
...............................................#..........#.
...............................................############.
............................................................
............................................................
............................................................
....................................................#.......
......................................###############.......
............................................................ "
#+END_SRC

#+NAME: 2022-day14-solution
#+BEGIN_SRC emacs-lisp :session "day14" :val x=2022-day14-input
;;; Code:
(require 'cl-lib)
(defun aoc22/day14-part1 (input)
  "Takes INPUT and solve the puzzle.
To be replaced with actual docstring."
  (let* ((lines (aoc22/parse13 input))
         (field (aoc22/draw-sandbox lines 1))
         (width (1+ (string-match "\n" field)))
         (height (/ (length field) width))
         (grain (string-match "+" field))
         (rested 0))
    (let ((downward (+ grain width)))
      (while (< downward (length field))
        (cond
         ((= (aref field downward) ?.)
          (setq grain downward)
          (cl-incf downward width))
         ((= (aref field (1- downward)) ?.)
          (setq grain (1- downward))
          (cl-incf downward (1- width)))
         ((= (aref field (1+ downward)) ?.)
          (setq grain (1+ downward))
          (cl-incf downward (1+ width)))
         (t (cl-incf rested)
            (aset field grain ?o)
            (setq grain (string-match "+" field))
            (setq downward (+ grain width))))))
    rested))

(defun aoc22/day14-part2 (input)
  "Takes INPUT and solve the puzzle.
To be replaced with actual docstring."
  (let* ((lines (aoc22/parse13 input))
         (field (aoc22/draw-sandbox lines 1000))
         (width (1+ (string-match "\n" field)))
         (height (/ (length field) width))
         (start (string-match "+" field))
         (grain start)
         (rested 0))
    (let ((downward (+ start width)))
      (while grain
        (cond
         ((> downward (length field))
          (cl-incf rested)
          (aset field grain ?o)
          (setq grain (string-match "+" field))
          (setq downward (+ start width)))
         ((= (aref field downward) ?.)
          (setq grain downward)
          (cl-incf downward width))
         ((= (aref field (1- downward)) ?.)
          (setq grain (1- downward))
          (cl-incf downward (1- width)))
         ((= (aref field (1+ downward)) ?.)
          (setq grain (1+ downward))
          (cl-incf downward (1+ width)))
         (t (cl-incf rested)
            (aset field grain ?o)
            (setq grain (string-match "+" field))
            (setq downward (+ start width))))))
    rested))

;;; Helper functions:
(defun aoc22/parse13 (input)
  "Get the INPUT string and split it up to lines and then to pairs.
Line split is done with split on new line, and pair split is done
with split on the string ' -> '.  The numeric strings are
converted to numbers, packed up in a list and appended in a
line-pairs list, which is returned"
  (let ((lines (split-string input "\n" t))
        line-pairs)
    (dolist (line lines)
      (let ((pairs (split-string line " -> " t)))
        (dotimes (index (1- (length pairs)))
          (let ((start (mapcar #'string-to-number (split-string (nth index pairs) "," t)))
                (finish (mapcar #'string-to-number (split-string (nth (1+ index) pairs) "," t))))
            (setq line-pairs (append line-pairs  (list (list start finish))))))))
    line-pairs))

(defun aoc22/draw-sandbox (line-pairs offset)
  "Get LINE-PAIRS and produce the tunnels."
  (let* ((xs (cl-reduce #'append (mapcar (lambda (x) (list (caar x) (caadr x))) line-pairs)))
         (ys (cl-reduce #'append (mapcar (lambda (x) (list (cadar x) (cadadr x))) line-pairs)))
         (min-x (cl-reduce #'min xs))
         (max-x (cl-reduce #'max xs))
         (max-y (cl-reduce #'max ys)))
    (let ((stones ())
          (image ""))
      (dolist (pair line-pairs)
        (let ((x1 (caar pair))
              (x2 (caadr pair))
              (y1 (cadar pair))
              (y2 (cadadr pair)))
          (dolist (x (number-sequence (min x1 x2) (max x1 x2)))
            (dolist (y (number-sequence (min y1 y2) (max y1 y2)))
              (push (list x y) stones)))))
      (dolist (y (number-sequence 0 (1+ max-y)))
        (dolist (x (number-sequence (- min-x offset) (+ max-x offset)))
          (setq image (concat image (if (member (list x y) stones) "#" "."))))
        (setq image (concat image "\n")))
      (aset image (+ (- 500 min-x) offset) ?+)
      image)))

;;; Results vector
(aoc22/parse13 aoc22/day14test)
(vector (aoc22/day14-part1 aoc22/day14test)
        (aoc22/day14-part1 aoc22/day14input)
        (aoc22/day14-part2 aoc22/day14test)
        (aoc22/day14-part2 aoc22/day14input))
#+END_SRC

#+RESULTS: 2022-day14-solution
: [24 828 93 25500]
** day 15
#+NAME: 2022-day15-input
#+BEGIN_SRC emacs-lisp :session "day15"
(defconst aoc22/day15test '(((2 18)(-2 15))
                            ((9 16)(10 16))
                            ((13 2)(15 3))
                            ((12 14)(10 16))
                            ((10 20)(10 16))
                            ((14 17)(10 16))
                            ((8 7)(2 10))
                            ((2 0)(2 10))
                            ((0 11)(2 10))
                            ((20 14)(25 17))
                            ((17 20)(21 22))
                            ((16 7)(15 3))
                            ((14 3)(15 3))
                            ((20 1)(15 3))))

(defconst aoc22/day15input '(((3428425 2345067)(3431988 2379841))
                             ((928237 25774)(1212315 -161555))
                             ((2061220 2396791)(2038311 2495160))
                             ((1830400 2994568)(1910058 3117415))
                             ((2485733 2625804)(2038311 2495160))
                             ((1855873 3971916)(1910058 3117415))
                             ((119582 3929652)(311197 4221202))
                             ((1069031 3509672)(1910058 3117415))
                             ((3368023 2213635)(3431988 2379841))
                             ((3713877 2460862)(3431988 2379841))
                             ((3593503 2174008)(3507689 2000000))
                             ((501760 93436)(1212315 -161555))
                             ((3712703 214999)(3507689 2000000))
                             ((1594824 2790273)(1910058 3117415))
                             ((2539549 3190814)(1910058 3117415))
                             ((3522790 2671548)(3431988 2379841))
                             ((1001452 1327490)(1212315 -161555))
                             ((629209 2451628)(-416149 2226089))
                             ((2636827 1146266)(3507689 2000000))
                             ((3909 625124)(1212315 -161555))
                             ((3950231 3688780)(3888160 3226725))
                             ((3449978 2328058)(3431988 2379841))
                             ((3974214 2582925)(3888160 3226725))
                             ((82663 3225533)(311197 4221202))
                             ((1958305 2292045)(2038311 2495160))
                             ((3465738 2123353)(3507689 2000000))
                             ((2940758 3884337)(2746166 4800483))
                             ((3429173 2275591)(3431988 2379841))
                             ((1527349 38565)(1212315 -161555))
                             ((3049925 2498038)(3431988 2379841))
                             ((1593202 3335178)(1910058 3117415))
                             ((3175520 3230234)(3888160 3226725))))

#+END_SRC

#+RESULTS: 2022-day15-input
: aoc22/day15input

#+NAME: 2022-day15-solution
#+BEGIN_SRC emacs-lisp :session "day15" :val x=2022-day15-input
;;; Code:
(require 'cl-lib)
(defun aoc22/day15-part1 (sensors y)
  "Get SENSORS list and compute on row Y the occupied positions.
The SENSORS list consists of pairs of sensor coordinates and
beacon coordinates.  Each sensor is coupled with one beacon, and
no other beacon exists in the manhatan area that the sensor
covers."
  (let ((occupied ())
        (beacons (seq-uniq (mapcar #'car (cl-remove-if-not
                                          (lambda (elt) (= (nth 1 elt) y))
                                          (mapcar #'cadr sensors))))))
    (dolist (datum sensors)
      (let* ((sensor (nth 0 datum))
             (beacon (nth 1 datum))
             (distance (aoc22/manhattan sensor beacon)))
        (let* ((x (nth 0 sensor))
               (dist (aoc22/manhattan sensor (list x y))))
          (if (>= distance dist)
              (let* ((offset (- distance dist))
                     (low-x (- x offset))
                     (hi-x (+ x offset)))
                (push (list low-x hi-x) occupied))))))
    (setq occupied (mapcar (lambda (pair) (number-sequence (nth 0 pair) (nth 1 pair)))
                           (aoc22/consolidate-spaces occupied)))
    (length (cl-remove-if (lambda (x) (member x beacons))
                          (cl-reduce #'append occupied)))))

(defun aoc22/day15-part2 (sensors ymax)
  "Takes SENSORS and YMAX and find available place for beacon.
The place is swept from 0 up to YMAX, and then the y and x is
reported that give available place for the beacon."
  (cl-block FOUND
    (dotimes (y ymax)
      (let ((pairs (aoc22/find-occupied sensors y)))
        (if (= (length pairs) 2)
            (cl-return-from FOUND (+ (* 4000000 (1+ (nth 1 (nth 0 pairs)))) y)))))))

;;; Helper functions:
(defun aoc22/find-occupied (sensors y)
  "Get SENSORS and a Y coordinate, and compute the occupied intervals."
  (let ((occupied ())
        (beacons (seq-uniq (mapcar #'car (cl-remove-if-not
                                          (lambda (elt) (= (nth 1 elt) y))
                                          (mapcar #'cadr sensors))))))
    (dolist (datum sensors)
      (let* ((sensor (nth 0 datum))
             (beacon (nth 1 datum))
             (distance (aoc22/manhattan sensor beacon)))
        (let* ((x (nth 0 sensor))
               (dist (aoc22/manhattan sensor (list x y))))
          (if (>= distance dist)
              (let* ((offset (- distance dist))
                     (low-x (- x offset))
                     (hi-x (+ x offset)))
                (if (< low-x 0)
                    (if (> hi-x 0)
                        (setq low-x 0)
                      (setq low-x 0)
                      (setq hi-x 0)))
                (if (> hi-x 4000000)
                    (if (< low-x 4000000)
                        (setq hi-x 4000000)
                      (setq hi-x 4000000)
                      (setq low-x 4000000)))
                (push (list low-x hi-x) occupied))))))
    (setq occupied (aoc22/consolidate-spaces occupied))))

(defun aoc22/manhattan (a b)
  "Get points A and B and compute the Manhattan distance."
  (+ (abs (- (car a) (car b))) (abs (- (cadr a) (cadr b)))))

(defun aoc22/consolidate-spaces (pairs)
  "The PAIRS are checked and overlapping intervals are consolidated.
At the end, the function returns only ranges with no overlap."
  (let ((result ())
        (candidate ()))
    (setq pairs (sort pairs (lambda (a b) (< (car a) (car b)))))
    (dolist (pair pairs)
      (cond
       ;; start with empty candidate
       ((eq candidate ())
        (setq candidate pair))
       ;; candidate doesn't reach the pair
       ((< (nth 1 candidate) (nth 0 pair))
        (if (= (- (nth 0 pair) (nth 1 candidate)) 1)
            (setf (nth 1 candidate) (nth 1 pair))
          (push candidate result)
          (setq candidate pair)))
       ;; special case upper candidate is the same as lower pair
       ((= (nth 1 candidate) (nth 0 pair))
        (setf (nth 1 candidate) (nth 1 pair)))
       ;; candidate upper is higher than pair lower
       ((> (nth 1 candidate) (nth 0 pair))
        ;; candidate covers whole pair
        (if (>= (nth 1 candidate) (nth 1 pair))
            "nothing to do"
          ;; extend candidate
          (setf (nth 1 candidate) (nth 1 pair))))))
    (push candidate result)
    (reverse result)))

;;; Results vector
(+ (* 4000000 2870615) 2818989)
(vector (aoc22/day15-part1 aoc22/day15test 10)
        (aoc22/day15-part1 aoc22/day15input 2000000)
        (aoc22/day15-part2 aoc22/day15test 20)
        (aoc22/day15-part2 aoc22/day15input 4000000)
        )
#+END_SRC

#+RESULTS: 2022-day15-solution
: [26 4737443 56000011 11482462818989]
** day 16
#+NAME: 2022-day16-input
#+BEGIN_SRC emacs-lisp :session "day16"
(defconst aoc22/day16test '("TBD"))

(defconst aoc22/day16input '("TBD"))

#+END_SRC

#+NAME: 2022-day16-solution
#+BEGIN_SRC emacs-lisp :session "day16" :val x=2022-day16-input
;;; Code:

(defun aoc22/day16-part1 (input)
  "Takes INPUT and solve the puzzle.
To be replaced with actual docstring."
  (car input))

(defun aoc22/day16-part2 (input)
  "Takes INPUT and solve the puzzle.
To be replaced with actual docstring."
  (car input))

;;; Helper functions:

;;; Results vector

(vector (aoc22/day16-part1 aoc22/day16test)
        (aoc22/day16-part1 aoc22/day16input)
        (aoc22/day16-part2 aoc22/day16test)
        (aoc22/day16-part2 aoc22/day16input))
#+END_SRC
